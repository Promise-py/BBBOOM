ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f1xx_hal_adc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c"
  18              		.section	.text.HAL_ADC_Init,"ax",%progbits
  19              		.align	1
  20              		.global	HAL_ADC_Init
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	HAL_ADC_Init:
  26              	.LFB65:
   1:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @file    stm32f1xx_hal_adc.c
   4:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief   This file provides firmware functions to manage the following 
   6:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          functionalities of the Analog to Digital Convertor (ADC)
   7:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          peripheral:
   8:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *           + Peripheral Control functions
  10:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *           + Peripheral State functions
  11:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          Other functions (extended functions) are available in file 
  12:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          "stm32f1xx_hal_adc_ex.c".
  13:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *
  14:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   ******************************************************************************
  15:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @attention
  16:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *
  17:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * Copyright (c) 2016 STMicroelectronics.
  18:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * All rights reserved.
  19:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *
  20:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * This software is licensed under terms that can be found in the LICENSE file
  21:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * in the root directory of this software component.
  22:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  23:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *
  24:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   ******************************************************************************
  25:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   @verbatim
  26:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   ==============================================================================
  27:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                      ##### ADC peripheral features #####
  28:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   ==============================================================================
  29:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   [..]
  30:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) 12-bit resolution
  31:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
  32:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) Interrupt generation at the end of regular conversion, end of injected
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 2


  33:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       conversion, and in case of analog watchdog or overrun events.
  34:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
  35:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) Single and continuous conversion modes.
  36:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
  37:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) Scan mode for conversion of several channels sequentially.
  38:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
  39:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) Data alignment with in-built data coherency.
  40:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
  41:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) Programmable sampling time (channel wise)
  42:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
  43:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) ADC conversion of regular group and injected group.
  44:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
  45:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) External trigger (timer or EXTI) 
  46:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       for both regular and injected groups.
  47:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
  48:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) DMA request generation for transfer of conversions data of regular group.
  49:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
  50:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) Multimode Dual mode (available on devices with 2 ADCs or more).
  51:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
  52:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) Configurable DMA data storage in Multimode Dual mode (available on devices
  53:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       with 2 DCs or more).
  54:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
  55:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) Configurable delay between conversions in Dual interleaved mode (available 
  56:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       on devices with 2 DCs or more).
  57:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
  58:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) ADC calibration
  59:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
  60:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) ADC supply requirements: 2.4 V to 3.6 V at full speed and down to 1.8 V at 
  61:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       slower speed.
  62:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
  63:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) ADC input range: from Vref- (connected to Vssa) to Vref+ (connected to 
  64:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       Vdda or to an external voltage reference).
  65:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
  66:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
  67:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                      ##### How to use this driver #####
  68:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   ==============================================================================
  69:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     [..]
  70:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
  71:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      *** Configuration of top level parameters related to ADC ***
  72:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      ============================================================
  73:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      [..]
  74:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
  75:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) Enable the ADC interface
  76:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (++) As prerequisite, ADC clock must be configured at RCC top level.
  77:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****            Caution: On STM32F1, ADC clock frequency max is 14MHz (refer
  78:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                     to device datasheet).
  79:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                     Therefore, ADC clock prescaler must be configured in 
  80:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                     function of ADC clock source frequency to remain below
  81:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                     this maximum frequency.
  82:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         (++) One clock setting is mandatory:
  83:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              ADC clock (core clock, also possibly conversion clock).
  84:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              (+++) Example:
  85:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                    Into HAL_ADC_MspInit() (recommended code location) or with
  86:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                    other device clock parameters configuration:
  87:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                (+++) RCC_PeriphCLKInitTypeDef  PeriphClkInit;
  88:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                (+++) __ADC1_CLK_ENABLE();
  89:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                (+++) PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 3


  90:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                (+++) PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV2;
  91:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                (+++) HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit);
  92:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
  93:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) ADC pins configuration
  94:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (++) Enable the clock for the ADC GPIOs
  95:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_ENABLE()
  96:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (++) Configure these ADC pins in analog mode
  97:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               using function HAL_GPIO_Init()
  98:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
  99:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
 100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (++) Configure the NVIC for ADC
 101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
 102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler() 
 103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               into the function of corresponding ADC interruption vector 
 104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               ADCx_IRQHandler().
 105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
 107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (++) Configure the DMA (DMA channel, mode normal or circular, ...)
 108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               using function HAL_DMA_Init().
 109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (++) Configure the NVIC for DMA
 110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler() 
 112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               into the function of corresponding DMA interruption vector 
 113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               DMAx_Channelx_IRQHandler().
 114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      *** Configuration of ADC, groups regular/injected, channels parameters ***
 116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      ==========================================================================
 117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      [..]
 118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) Configure the ADC parameters (resolution, data alignment, ...)
 120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         and regular group parameters (conversion trigger, sequencer, ...)
 121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         using function HAL_ADC_Init().
 122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) Configure the channels for regular group parameters (channel number, 
 124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         channel rank into sequencer, ..., into regular group)
 125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         using function HAL_ADC_ConfigChannel().
 126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) Optionally, configure the injected group parameters (conversion trigger, 
 128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         sequencer, ..., of injected group)
 129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         and the channels for injected group parameters (channel number, 
 130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         channel rank into sequencer, ..., into injected group)
 131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         using function HAL_ADCEx_InjectedConfigChannel().
 132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) Optionally, configure the analog watchdog parameters (channels
 134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         monitored, thresholds, ...)
 135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         using function HAL_ADC_AnalogWDGConfig().
 136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) Optionally, for devices with several ADC instances: configure the 
 138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         multimode parameters
 139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         using function HAL_ADCEx_MultiModeConfigChannel().
 140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      *** Execution of ADC conversions ***
 142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      ====================================
 143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      [..]
 144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) Optionally, perform an automatic ADC calibration to improve the
 146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         conversion accuracy
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 4


 147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         using function HAL_ADCEx_Calibration_Start().
 148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) ADC driver can be used among three modes: polling, interruption,
 150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         transfer by DMA.
 151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         (++) ADC conversion by polling:
 153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 using function HAL_ADC_Start()
 155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Wait for ADC conversion completion 
 156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 using function HAL_ADC_PollForConversion()
 157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 (or for injected group: HAL_ADCEx_InjectedPollForConversion() )
 158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Retrieve conversion results 
 159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 (or for injected group: HAL_ADCEx_InjectedGetValue() )
 161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral 
 162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 using function HAL_ADC_Stop()
 163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         (++) ADC conversion by interruption: 
 165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 using function HAL_ADC_Start_IT()
 167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback()
 169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 (this function must be implemented in user program)
 170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 (or for injected group: HAL_ADCEx_InjectedConvCpltCallback() )
 171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Retrieve conversion results 
 172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 (or for injected group: HAL_ADCEx_InjectedGetValue() )
 174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral 
 175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 using function HAL_ADC_Stop_IT()
 176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         (++) ADC conversion with transfer by DMA:
 178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 using function HAL_ADC_Start_DMA()
 180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback() or HAL_ADC_ConvHalfCpltCallback()
 182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 (these functions must be implemented in user program)
 183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Conversion results are automatically transferred by DMA into
 184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 destination variable address.
 185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral 
 186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 using function HAL_ADC_Stop_DMA()
 187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         (++) For devices with several ADCs: ADC multimode conversion 
 189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              with transfer by DMA:
 190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Activate the ADC peripheral (slave) and start conversions
 191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 using function HAL_ADC_Start()
 192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Activate the ADC peripheral (master) and start conversions
 193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 using function HAL_ADCEx_MultiModeStart_DMA()
 194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback() or HAL_ADC_ConvHalfCpltCallback()
 196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 (these functions must be implemented in user program)
 197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Conversion results are automatically transferred by DMA into
 198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 destination variable address.
 199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral (master)
 200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 using function HAL_ADCEx_MultiModeStop_DMA()
 201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral (slave)
 202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 using function HAL_ADC_Stop_IT()
 203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 5


 204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      [..]
 205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (@) Callback functions must be implemented in user program:
 207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+@) HAL_ADC_ErrorCallback()
 208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+@) HAL_ADC_LevelOutOfWindowCallback() (callback of analog watchdog)
 209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+@) HAL_ADC_ConvCpltCallback()
 210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+@) HAL_ADC_ConvHalfCpltCallback
 211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+@) HAL_ADCEx_InjectedConvCpltCallback()
 212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      *** Deinitialization of ADC ***
 214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      ============================================================
 215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      [..]
 216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) Disable the ADC interface
 218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (++) ADC clock can be hard reset and disabled at RCC top level.
 219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         (++) Hard reset of ADC peripherals
 220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              using macro __ADCx_FORCE_RESET(), __ADCx_RELEASE_RESET().
 221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         (++) ADC clock disable
 222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              using the equivalent macro/functions as configuration step.
 223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              (+++) Example:
 224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                    Into HAL_ADC_MspDeInit() (recommended code location) or with
 225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                    other device clock parameters configuration:
 226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                (+++) PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC
 227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                (+++) PeriphClkInit.AdcClockSelection = RCC_ADCPLLCLK2_OFF
 228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                (+++) HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit)
 229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) ADC pins configuration
 231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (++) Disable the clock for the ADC GPIOs
 232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_DISABLE()
 233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
 235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (++) Disable the NVIC for ADC
 236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
 237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
 239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (++) Deinitialize the DMA
 240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               using function HAL_DMA_Init().
 241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (++) Disable the NVIC for DMA
 242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     [..]
 245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     *** Callback registration ***
 247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     =============================================
 248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     [..]
 249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      The compilation flag USE_HAL_ADC_REGISTER_CALLBACKS, when set to 1,
 251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      allows the user to configure dynamically the driver callbacks.
 252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      Use Functions HAL_ADC_RegisterCallback()
 253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      to register an interrupt callback.
 254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     [..]
 255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      Function HAL_ADC_RegisterCallback() allows to register following callbacks:
 257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****        (+) ConvCpltCallback               : ADC conversion complete callback
 258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****        (+) ConvHalfCpltCallback           : ADC conversion DMA half-transfer callback
 259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****        (+) LevelOutOfWindowCallback       : ADC analog watchdog 1 callback
 260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****        (+) ErrorCallback                  : ADC error callback
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 6


 261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****        (+) InjectedConvCpltCallback       : ADC group injected conversion complete callback
 262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****        (+) MspInitCallback                : ADC Msp Init callback
 263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****        (+) MspDeInitCallback              : ADC Msp DeInit callback
 264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      This function takes as parameters the HAL peripheral handle, the Callback ID
 265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      and a pointer to the user callback function.
 266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     [..]
 267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      Use function HAL_ADC_UnRegisterCallback to reset a callback to the default
 269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      weak function.
 270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     [..]
 271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      HAL_ADC_UnRegisterCallback takes as parameters the HAL peripheral handle,
 273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      and the Callback ID.
 274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      This function allows to reset following callbacks:
 275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****        (+) ConvCpltCallback               : ADC conversion complete callback
 276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****        (+) ConvHalfCpltCallback           : ADC conversion DMA half-transfer callback
 277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****        (+) LevelOutOfWindowCallback       : ADC analog watchdog 1 callback
 278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****        (+) ErrorCallback                  : ADC error callback
 279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****        (+) InjectedConvCpltCallback       : ADC group injected conversion complete callback
 280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****        (+) MspInitCallback                : ADC Msp Init callback
 281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****        (+) MspDeInitCallback              : ADC Msp DeInit callback
 282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      [..]
 283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      By default, after the HAL_ADC_Init() and when the state is HAL_ADC_STATE_RESET
 285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      all callbacks are set to the corresponding weak functions:
 286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      examples HAL_ADC_ConvCpltCallback(), HAL_ADC_ErrorCallback().
 287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      Exception done for MspInit and MspDeInit functions that are
 288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      reset to the legacy weak functions in the HAL_ADC_Init()/ HAL_ADC_DeInit() only when
 289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      these callbacks are null (not registered beforehand).
 290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     [..]
 291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      If MspInit or MspDeInit are not null, the HAL_ADC_Init()/ HAL_ADC_DeInit()
 293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      keep and use the user MspInit/MspDeInit callbacks (registered beforehand) whatever the state.
 294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      [..]
 295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      Callbacks can be registered/unregistered in HAL_ADC_STATE_READY state only.
 297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      Exception done MspInit/MspDeInit functions that can be registered/unregistered
 298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      in HAL_ADC_STATE_READY or HAL_ADC_STATE_RESET state,
 299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     [..]
 301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      Then, the user first registers the MspInit/MspDeInit user callbacks
 303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      using HAL_ADC_RegisterCallback() before calling HAL_ADC_DeInit()
 304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      or HAL_ADC_Init() function.
 305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      [..]
 306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      When the compilation flag USE_HAL_ADC_REGISTER_CALLBACKS is set to 0 or
 308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      not defined, the callback registration feature is not available and all callbacks
 309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      are set to the corresponding weak functions.
 310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   @endverbatim
 312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /* Includes ------------------------------------------------------------------*/
 315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** #include "stm32f1xx_hal.h"
 316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /** @addtogroup STM32F1xx_HAL_Driver
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 7


 318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @{
 319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /** @defgroup ADC ADC
 322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief ADC HAL module driver
 323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @{
 324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** #ifdef HAL_ADC_MODULE_ENABLED
 327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /* Private typedef -----------------------------------------------------------*/
 329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /* Private define ------------------------------------------------------------*/
 330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /** @defgroup ADC_Private_Constants ADC Private Constants
 331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @{
 332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Timeout values for ADC enable and disable settling time.                 */
 335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Values defined to be higher than worst cases: low clocks freq,           */
 336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* maximum prescaler.                                                       */
 337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Ex of profile low frequency : Clock source at 0.1 MHz, ADC clock         */
 338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* prescaler 4, sampling time 12.5 ADC clock cycles, resolution 12 bits.    */
 339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Unit: ms                                                                 */
 340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   #define ADC_ENABLE_TIMEOUT              2U
 341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   #define ADC_DISABLE_TIMEOUT             2U
 342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Delay for ADC stabilization time.                                        */
 344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Maximum delay is 1us (refer to device datasheet, parameter tSTAB).       */
 345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Unit: us                                                                 */
 346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   #define ADC_STAB_DELAY_US               1U
 347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Delay for temperature sensor stabilization time.                         */
 349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Maximum delay is 10us (refer to device datasheet, parameter tSTART).     */
 350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Unit: us                                                                 */
 351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   #define ADC_TEMPSENSOR_DELAY_US         10U
 352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
 354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @}
 355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /* Private macro -------------------------------------------------------------*/
 358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /* Private variables ---------------------------------------------------------*/
 359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /* Private function prototypes -----------------------------------------------*/
 360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /** @defgroup ADC_Private_Functions ADC Private Functions
 361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @{
 362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
 364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @}
 365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /* Exported functions --------------------------------------------------------*/
 368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions ADC Exported Functions
 370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @{
 371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group1 Initialization/de-initialization functions 
 374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief    Initialization and Configuration functions
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 8


 375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *
 376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** @verbatim    
 377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  ===============================================================================
 378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               ##### Initialization and de-initialization functions #####
 379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  ===============================================================================
 380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     [..]  This section provides functions allowing to:
 381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Initialize and configure the ADC. 
 382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) De-initialize the ADC.
 383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** @endverbatim
 385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @{
 386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
 389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Initializes the ADC peripheral and regular group according to  
 390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         parameters specified in structure "ADC_InitTypeDef".
 391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   As prerequisite, ADC clock must be configured at RCC top level
 392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         (clock source APB2).
 393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         See commented example code below that can be copied and uncommented 
 394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         into HAL_ADC_MspInit().
 395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
 396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         This function initializes the ADC MSP (HAL_ADC_MspInit()) only when
 397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         coming from ADC state reset. Following calls to this function can
 398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         be used to reconfigure some parameters of ADC_InitTypeDef  
 399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         structure on the fly, without modifying MSP configuration. If ADC  
 400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         MSP has to be modified again, HAL_ADC_DeInit() must be called
 401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         before HAL_ADC_Init().
 402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
 403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         For parameters constraints, see comments of structure 
 404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         "ADC_InitTypeDef".
 405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   This function configures the ADC within 2 scopes: scope of entire 
 406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         ADC and scope of regular group. For parameters details, see comments 
 407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         of structure "ADC_InitTypeDef".
 408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
 409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval HAL status
 410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
 412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
  27              		.loc 1 412 1
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 24
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 86B0     		sub	sp, sp, #24
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 32
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
 413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  43              		.loc 1 413 21
  44 0008 0023     		movs	r3, #0
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 9


  45 000a FB75     		strb	r3, [r7, #23]
 414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   uint32_t tmp_cr1 = 0U;
  46              		.loc 1 414 12
  47 000c 0023     		movs	r3, #0
  48 000e 3B61     		str	r3, [r7, #16]
 415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   uint32_t tmp_cr2 = 0U;
  49              		.loc 1 415 12
  50 0010 0023     		movs	r3, #0
  51 0012 BB60     		str	r3, [r7, #8]
 416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   uint32_t tmp_sqr1 = 0U;
  52              		.loc 1 416 12
  53 0014 0023     		movs	r3, #0
  54 0016 FB60     		str	r3, [r7, #12]
 417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check ADC handle */
 419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if(hadc == NULL)
  55              		.loc 1 419 5
  56 0018 7B68     		ldr	r3, [r7, #4]
  57 001a 002B     		cmp	r3, #0
  58 001c 01D1     		bne	.L2
 420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     return HAL_ERROR;
  59              		.loc 1 421 12
  60 001e 0123     		movs	r3, #1
  61 0020 CEE0     		b	.L3
  62              	.L2:
 422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
 425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(hadc->Init.DataAlign));
 427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_SCAN_MODE(hadc->Init.ScanConvMode));
 428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG(hadc->Init.ExternalTrigConv));
 430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if(hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
  63              		.loc 1 431 16
  64 0022 7B68     		ldr	r3, [r7, #4]
  65 0024 9B68     		ldr	r3, [r3, #8]
  66              		.loc 1 431 5
  67 0026 002B     		cmp	r3, #0
 432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     assert_param(IS_ADC_REGULAR_NB_CONV(hadc->Init.NbrOfConversion));
 434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DiscontinuousConvMode));
 435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if(hadc->Init.DiscontinuousConvMode != DISABLE)
 436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       assert_param(IS_ADC_REGULAR_DISCONT_NUMBER(hadc->Init.NbrOfDiscConversion));
 438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* As prerequisite, into HAL_ADC_MspInit(), ADC clock must be configured    */
 442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* at RCC top level.                                                        */
 443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Refer to header of this file for more details on clock enabling          */
 444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* procedure.                                                               */
 445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Actions performed only if ADC is coming from state reset:                */
 447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* - Initialization of ADC MSP                                              */
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 10


 448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (hadc->State == HAL_ADC_STATE_RESET)
  68              		.loc 1 448 11
  69 0028 7B68     		ldr	r3, [r7, #4]
  70 002a 9B6A     		ldr	r3, [r3, #40]
  71              		.loc 1 448 6
  72 002c 002B     		cmp	r3, #0
  73 002e 09D1     		bne	.L5
 449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Initialize ADC error code */
 451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
  74              		.loc 1 451 5
  75 0030 7B68     		ldr	r3, [r7, #4]
  76 0032 0022     		movs	r2, #0
  77 0034 DA62     		str	r2, [r3, #44]
 452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Allocate lock resource and initialize it */
 454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     hadc->Lock = HAL_UNLOCKED;
  78              		.loc 1 454 16
  79 0036 7B68     		ldr	r3, [r7, #4]
  80 0038 0022     		movs	r2, #0
  81 003a 83F82420 		strb	r2, [r3, #36]
 455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Init the ADC Callback settings */
 458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     hadc->ConvCpltCallback              = HAL_ADC_ConvCpltCallback;                 /* Legacy weak 
 459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     hadc->ConvHalfCpltCallback          = HAL_ADC_ConvHalfCpltCallback;             /* Legacy weak 
 460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     hadc->LevelOutOfWindowCallback      = HAL_ADC_LevelOutOfWindowCallback;         /* Legacy weak 
 461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     hadc->ErrorCallback                 = HAL_ADC_ErrorCallback;                    /* Legacy weak 
 462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     hadc->InjectedConvCpltCallback      = HAL_ADCEx_InjectedConvCpltCallback;       /* Legacy weak 
 463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (hadc->MspInitCallback == NULL)
 465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       hadc->MspInitCallback = HAL_ADC_MspInit; /* Legacy weak MspInit  */
 467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Init the low level hardware */
 470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     hadc->MspInitCallback(hadc);
 471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** #else
 472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Init the low level hardware */
 473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     HAL_ADC_MspInit(hadc);
  82              		.loc 1 473 5
  83 003e 7868     		ldr	r0, [r7, #4]
  84 0040 FFF7FEFF 		bl	HAL_ADC_MspInit
  85              	.L5:
 474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
 478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Disable ADC peripheral */
 479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Note: In case of ADC already enabled, precaution to not launch an        */
 480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*       unwanted conversion while modifying register CR2 by writing 1 to   */
 481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*       bit ADON.                                                          */
 482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop_Disable(hadc);
  86              		.loc 1 482 20
  87 0044 7868     		ldr	r0, [r7, #4]
  88 0046 FFF7FEFF 		bl	ADC_ConversionStop_Disable
  89 004a 0346     		mov	r3, r0
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 11


  90 004c FB75     		strb	r3, [r7, #23]
 483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */ 
 486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* correctly completed.                                                     */
 487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL) &&
  91              		.loc 1 487 7
  92 004e 7B68     		ldr	r3, [r7, #4]
  93 0050 9B6A     		ldr	r3, [r3, #40]
  94 0052 03F01003 		and	r3, r3, #16
  95              		.loc 1 487 6
  96 0056 002B     		cmp	r3, #0
  97 0058 40F0A980 		bne	.L6
  98              		.loc 1 487 65 discriminator 1
  99 005c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 100 005e 002B     		cmp	r3, #0
 101 0060 40F0A580 		bne	.L6
 488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (tmp_hal_status == HAL_OK)                                  )
 489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Set ADC state */
 491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 102              		.loc 1 491 5
 103 0064 7B68     		ldr	r3, [r7, #4]
 104 0066 9B6A     		ldr	r3, [r3, #40]
 105 0068 23F48853 		bic	r3, r3, #4352
 106 006c 23F00203 		bic	r3, r3, #2
 107 0070 43F00202 		orr	r2, r3, #2
 108 0074 7B68     		ldr	r3, [r7, #4]
 109 0076 9A62     		str	r2, [r3, #40]
 492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
 494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Set ADC parameters */
 496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Configuration of ADC:                                                  */
 498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  - data alignment                                                      */
 499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  - external trigger to start conversion                                */
 500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  - external trigger polarity (always set to 1, because needed for all  */
 501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*    triggers: external trigger of SW start)                             */
 502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  - continuous conversion mode                                          */
 503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Note: External trigger polarity (ADC_CR2_EXTTRIG) is set into          */
 504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*       HAL_ADC_Start_xxx functions because if set in this function,     */
 505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*       a conversion on injected group would start a conversion also on  */
 506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*       regular group after ADC enabling.                                */
 507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     tmp_cr2 |= (hadc->Init.DataAlign                                          |
 110              		.loc 1 507 27
 111 0078 7B68     		ldr	r3, [r7, #4]
 112 007a 5A68     		ldr	r2, [r3, #4]
 508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 ADC_CFGR_EXTSEL(hadc, hadc->Init.ExternalTrigConv)            |
 113              		.loc 1 508 17
 114 007c 7B68     		ldr	r3, [r7, #4]
 115 007e 1B68     		ldr	r3, [r3]
 116 0080 5149     		ldr	r1, .L21
 117 0082 8B42     		cmp	r3, r1
 118 0084 0AD1     		bne	.L7
 119              		.loc 1 508 17 is_stmt 0 discriminator 1
 120 0086 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 12


 121 0088 DB69     		ldr	r3, [r3, #28]
 122 008a B3F5402F 		cmp	r3, #786432
 123 008e 02D0     		beq	.L8
 124              		.loc 1 508 17 discriminator 3
 125 0090 7B68     		ldr	r3, [r7, #4]
 126 0092 DB69     		ldr	r3, [r3, #28]
 127 0094 04E0     		b	.L10
 128              	.L8:
 129              		.loc 1 508 17 discriminator 4
 130 0096 4FF40023 		mov	r3, #524288
 131 009a 01E0     		b	.L10
 132              	.L7:
 133              		.loc 1 508 17 discriminator 2
 134 009c 7B68     		ldr	r3, [r7, #4]
 135 009e DB69     		ldr	r3, [r3, #28]
 136              	.L10:
 507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 ADC_CFGR_EXTSEL(hadc, hadc->Init.ExternalTrigConv)            |
 137              		.loc 1 507 79 is_stmt 1
 138 00a0 1A43     		orrs	r2, r2, r3
 509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)   );
 139              		.loc 1 509 17
 140 00a2 7B68     		ldr	r3, [r7, #4]
 141 00a4 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 142 00a6 5B00     		lsls	r3, r3, #1
 508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 ADC_CFGR_EXTSEL(hadc, hadc->Init.ExternalTrigConv)            |
 143              		.loc 1 508 79
 144 00a8 1343     		orrs	r3, r3, r2
 507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 ADC_CFGR_EXTSEL(hadc, hadc->Init.ExternalTrigConv)            |
 145              		.loc 1 507 13
 146 00aa BA68     		ldr	r2, [r7, #8]
 147 00ac 1343     		orrs	r3, r3, r2
 148 00ae BB60     		str	r3, [r7, #8]
 510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Configuration of ADC:                                                  */
 512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  - scan mode                                                           */
 513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  - discontinuous mode disable/enable                                   */
 514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  - discontinuous mode number of conversions                            */
 515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     tmp_cr1 |= (ADC_CR1_SCAN_SET(hadc->Init.ScanConvMode));
 149              		.loc 1 515 17
 150 00b0 7B68     		ldr	r3, [r7, #4]
 151 00b2 9B68     		ldr	r3, [r3, #8]
 152 00b4 B3F5807F 		cmp	r3, #256
 153 00b8 03D0     		beq	.L11
 154              		.loc 1 515 17 is_stmt 0 discriminator 2
 155 00ba 7B68     		ldr	r3, [r7, #4]
 156 00bc 9B68     		ldr	r3, [r3, #8]
 157 00be 012B     		cmp	r3, #1
 158 00c0 02D1     		bne	.L12
 159              	.L11:
 160              		.loc 1 515 17 discriminator 3
 161 00c2 4FF48073 		mov	r3, #256
 162 00c6 00E0     		b	.L13
 163              	.L12:
 164              		.loc 1 515 17 discriminator 4
 165 00c8 0023     		movs	r3, #0
 166              	.L13:
 167              		.loc 1 515 13 is_stmt 1 discriminator 6
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 13


 168 00ca 3A69     		ldr	r2, [r7, #16]
 169 00cc 1343     		orrs	r3, r3, r2
 170 00ce 3B61     		str	r3, [r7, #16]
 516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Enable discontinuous mode only if continuous mode is disabled */
 518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Note: If parameter "Init.ScanConvMode" is set to disable, parameter    */
 519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*       discontinuous is set anyway, but will have no effect on ADC HW.  */
 520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (hadc->Init.DiscontinuousConvMode == ENABLE)
 171              		.loc 1 520 19 discriminator 6
 172 00d0 7B68     		ldr	r3, [r7, #4]
 173 00d2 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 174              		.loc 1 520 8 discriminator 6
 175 00d4 012B     		cmp	r3, #1
 176 00d6 19D1     		bne	.L14
 521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if (hadc->Init.ContinuousConvMode == DISABLE)
 177              		.loc 1 522 21
 178 00d8 7B68     		ldr	r3, [r7, #4]
 179 00da 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 180              		.loc 1 522 10
 181 00dc 002B     		cmp	r3, #0
 182 00de 09D1     		bne	.L15
 523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Enable the selected ADC regular discontinuous mode */
 525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Set the number of channels to be converted in discontinuous mode */
 526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         SET_BIT(tmp_cr1, ADC_CR1_DISCEN                                            |
 183              		.loc 1 526 9
 184 00e0 7B68     		ldr	r3, [r7, #4]
 185 00e2 9B69     		ldr	r3, [r3, #24]
 186 00e4 013B     		subs	r3, r3, #1
 187 00e6 5A03     		lsls	r2, r3, #13
 188 00e8 3B69     		ldr	r3, [r7, #16]
 189 00ea 1343     		orrs	r3, r3, r2
 190 00ec 43F40063 		orr	r3, r3, #2048
 191 00f0 3B61     		str	r3, [r7, #16]
 192 00f2 0BE0     		b	.L14
 193              	.L15:
 527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                          ADC_CR1_DISCONTINUOUS_NUM(hadc->Init.NbrOfDiscConversion)  );
 528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       else
 530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* ADC regular group settings continuous and sequencer discontinuous*/
 532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* cannot be enabled simultaneously.                                */
 533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
 534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Update ADC state machine to error */
 535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 194              		.loc 1 535 9
 195 00f4 7B68     		ldr	r3, [r7, #4]
 196 00f6 9B6A     		ldr	r3, [r3, #40]
 197 00f8 43F02002 		orr	r2, r3, #32
 198 00fc 7B68     		ldr	r3, [r7, #4]
 199 00fe 9A62     		str	r2, [r3, #40]
 536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
 537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Set ADC error code to ADC IP internal error */
 538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 200              		.loc 1 538 9
 201 0100 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 14


 202 0102 DB6A     		ldr	r3, [r3, #44]
 203 0104 43F00102 		orr	r2, r3, #1
 204 0108 7B68     		ldr	r3, [r7, #4]
 205 010a DA62     		str	r2, [r3, #44]
 206              	.L14:
 539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Update ADC configuration register CR1 with previous settings */
 543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CR1,
 207              		.loc 1 543 7
 208 010c 7B68     		ldr	r3, [r7, #4]
 209 010e 1B68     		ldr	r3, [r3]
 210 0110 5B68     		ldr	r3, [r3, #4]
 211 0112 23F46941 		bic	r1, r3, #59648
 212 0116 7B68     		ldr	r3, [r7, #4]
 213 0118 1B68     		ldr	r3, [r3]
 214 011a 3A69     		ldr	r2, [r7, #16]
 215 011c 0A43     		orrs	r2, r2, r1
 216 011e 5A60     		str	r2, [r3, #4]
 544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                  ADC_CR1_SCAN    |
 545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                  ADC_CR1_DISCEN  |
 546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                  ADC_CR1_DISCNUM    ,
 547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                  tmp_cr1             );
 548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Update ADC configuration register CR2 with previous settings */
 550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CR2,
 217              		.loc 1 550 7
 218 0120 7B68     		ldr	r3, [r7, #4]
 219 0122 1B68     		ldr	r3, [r3]
 220 0124 9A68     		ldr	r2, [r3, #8]
 221 0126 294B     		ldr	r3, .L21+4
 222 0128 1340     		ands	r3, r3, r2
 223 012a 7A68     		ldr	r2, [r7, #4]
 224 012c 1268     		ldr	r2, [r2]
 225 012e B968     		ldr	r1, [r7, #8]
 226 0130 0B43     		orrs	r3, r3, r1
 227 0132 9360     		str	r3, [r2, #8]
 551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                  ADC_CR2_ALIGN   |
 552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                  ADC_CR2_EXTSEL  |
 553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                  ADC_CR2_EXTTRIG |
 554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                  ADC_CR2_CONT       ,
 555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                  tmp_cr2             );
 556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Configuration of regular group sequencer:                              */
 558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* - if scan mode is disabled, regular channels sequence length is set to */
 559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*   0x00: 1 channel converted (channel on regular rank 1)                */
 560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*   Parameter "NbrOfConversion" is discarded.                            */
 561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*   Note: Scan mode is present by hardware on this device and, if        */
 562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*   disabled, discards automatically nb of conversions. Anyway, nb of    */
 563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*   conversions is forced to 0x00 for alignment over all STM32 devices.  */
 564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* - if scan mode is enabled, regular channels sequence length is set to  */
 565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*   parameter "NbrOfConversion"                                          */
 566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (ADC_CR1_SCAN_SET(hadc->Init.ScanConvMode) == ADC_SCAN_ENABLE)
 228              		.loc 1 566 9
 229 0134 7B68     		ldr	r3, [r7, #4]
 230 0136 9B68     		ldr	r3, [r3, #8]
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 15


 231              		.loc 1 566 8
 232 0138 B3F5807F 		cmp	r3, #256
 233 013c 03D0     		beq	.L16
 234              		.loc 1 566 9 discriminator 1
 235 013e 7B68     		ldr	r3, [r7, #4]
 236 0140 9B68     		ldr	r3, [r3, #8]
 237              		.loc 1 566 51 discriminator 1
 238 0142 012B     		cmp	r3, #1
 239 0144 04D1     		bne	.L17
 240              	.L16:
 567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       tmp_sqr1 = ADC_SQR1_L_SHIFT(hadc->Init.NbrOfConversion);
 241              		.loc 1 568 18
 242 0146 7B68     		ldr	r3, [r7, #4]
 243 0148 1B69     		ldr	r3, [r3, #16]
 244 014a 013B     		subs	r3, r3, #1
 245              		.loc 1 568 16
 246 014c 1B05     		lsls	r3, r3, #20
 247 014e FB60     		str	r3, [r7, #12]
 248              	.L17:
 569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->SQR1,
 249              		.loc 1 571 5
 250 0150 7B68     		ldr	r3, [r7, #4]
 251 0152 1B68     		ldr	r3, [r3]
 252 0154 DB6A     		ldr	r3, [r3, #44]
 253 0156 23F47001 		bic	r1, r3, #15728640
 254 015a 7B68     		ldr	r3, [r7, #4]
 255 015c 1B68     		ldr	r3, [r3]
 256 015e FA68     		ldr	r2, [r7, #12]
 257 0160 0A43     		orrs	r2, r2, r1
 258 0162 DA62     		str	r2, [r3, #44]
 572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SQR1_L          ,
 573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                tmp_sqr1             );
 574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Check back that ADC registers have effectively been configured to      */
 576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* ensure of no potential problem of ADC core IP clocking.                */
 577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Check through register CR2 (excluding bits set in other functions:     */
 578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* execution control bits (ADON, JSWSTART, SWSTART), regular group bits   */
 579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* (DMA), injected group bits (JEXTTRIG and JEXTSEL), channel internal    */
 580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* measurement path bit (TSVREFE).                                        */
 581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (READ_BIT(hadc->Instance->CR2, ~(ADC_CR2_ADON | ADC_CR2_DMA |
 259              		.loc 1 581 9
 260 0164 7B68     		ldr	r3, [r7, #4]
 261 0166 1B68     		ldr	r3, [r3]
 262 0168 9A68     		ldr	r2, [r3, #8]
 263 016a 194B     		ldr	r3, .L21+8
 264 016c 1340     		ands	r3, r3, r2
 265              		.loc 1 581 8
 266 016e BA68     		ldr	r2, [r7, #8]
 267 0170 9A42     		cmp	r2, r3
 268 0172 0BD1     		bne	.L18
 582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                         ADC_CR2_SWSTART | ADC_CR2_JSWSTART |
 583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                         ADC_CR2_JEXTTRIG | ADC_CR2_JEXTSEL |
 584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                         ADC_CR2_TSVREFE                     ))
 585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          == tmp_cr2)
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 16


 586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set ADC error code to none */
 588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
 269              		.loc 1 588 7
 270 0174 7B68     		ldr	r3, [r7, #4]
 271 0176 0022     		movs	r2, #0
 272 0178 DA62     		str	r2, [r3, #44]
 589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set the ADC state */
 591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
 273              		.loc 1 591 7
 274 017a 7B68     		ldr	r3, [r7, #4]
 275 017c 9B6A     		ldr	r3, [r3, #40]
 276 017e 23F00303 		bic	r3, r3, #3
 277 0182 43F00102 		orr	r2, r3, #1
 278 0186 7B68     		ldr	r3, [r7, #4]
 279 0188 9A62     		str	r2, [r3, #40]
 581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                         ADC_CR2_SWSTART | ADC_CR2_JSWSTART |
 280              		.loc 1 581 8
 281 018a 18E0     		b	.L20
 282              	.L18:
 592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
 594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     else
 596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Update ADC state machine to error */
 598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
 283              		.loc 1 598 7
 284 018c 7B68     		ldr	r3, [r7, #4]
 285 018e 9B6A     		ldr	r3, [r3, #40]
 286 0190 23F01203 		bic	r3, r3, #18
 287 0194 43F01002 		orr	r2, r3, #16
 288 0198 7B68     		ldr	r3, [r7, #4]
 289 019a 9A62     		str	r2, [r3, #40]
 599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                         HAL_ADC_STATE_ERROR_INTERNAL);
 601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set ADC error code to ADC IP internal error */
 603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 290              		.loc 1 603 7
 291 019c 7B68     		ldr	r3, [r7, #4]
 292 019e DB6A     		ldr	r3, [r3, #44]
 293 01a0 43F00102 		orr	r2, r3, #1
 294 01a4 7B68     		ldr	r3, [r7, #4]
 295 01a6 DA62     		str	r2, [r3, #44]
 604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       tmp_hal_status = HAL_ERROR;
 296              		.loc 1 605 22
 297 01a8 0123     		movs	r3, #1
 298 01aa FB75     		strb	r3, [r7, #23]
 581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                         ADC_CR2_SWSTART | ADC_CR2_JSWSTART |
 299              		.loc 1 581 8
 300 01ac 07E0     		b	.L20
 301              	.L6:
 606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 17


 608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   else
 610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Update ADC state machine to error */
 612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 302              		.loc 1 612 5
 303 01ae 7B68     		ldr	r3, [r7, #4]
 304 01b0 9B6A     		ldr	r3, [r3, #40]
 305 01b2 43F01002 		orr	r2, r3, #16
 306 01b6 7B68     		ldr	r3, [r7, #4]
 307 01b8 9A62     		str	r2, [r3, #40]
 613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
 614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 308              		.loc 1 614 20
 309 01ba 0123     		movs	r3, #1
 310 01bc FB75     		strb	r3, [r7, #23]
 311              	.L20:
 615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return function status */
 618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return tmp_hal_status;
 312              		.loc 1 618 10
 313 01be FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 314              	.L3:
 619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 315              		.loc 1 619 1
 316 01c0 1846     		mov	r0, r3
 317 01c2 1837     		adds	r7, r7, #24
 318              	.LCFI3:
 319              		.cfi_def_cfa_offset 8
 320 01c4 BD46     		mov	sp, r7
 321              	.LCFI4:
 322              		.cfi_def_cfa_register 13
 323              		@ sp needed
 324 01c6 80BD     		pop	{r7, pc}
 325              	.L22:
 326              		.align	2
 327              	.L21:
 328 01c8 003C0140 		.word	1073822720
 329 01cc FDF7E1FF 		.word	-1968131
 330 01d0 FE0E1FFF 		.word	-14741762
 331              		.cfi_endproc
 332              	.LFE65:
 334              		.section	.text.HAL_ADC_DeInit,"ax",%progbits
 335              		.align	1
 336              		.global	HAL_ADC_DeInit
 337              		.syntax unified
 338              		.thumb
 339              		.thumb_func
 341              	HAL_ADC_DeInit:
 342              	.LFB66:
 620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
 622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Deinitialize the ADC peripheral registers to their default reset
 623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         values, with deinitialization of the ADC MSP.
 624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         If needed, the example code can be copied and uncommented into
 625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         function HAL_ADC_MspDeInit().
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 18


 626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
 627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval HAL status
 628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_DeInit(ADC_HandleTypeDef* hadc)
 630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 343              		.loc 1 630 1
 344              		.cfi_startproc
 345              		@ args = 0, pretend = 0, frame = 16
 346              		@ frame_needed = 1, uses_anonymous_args = 0
 347 0000 80B5     		push	{r7, lr}
 348              	.LCFI5:
 349              		.cfi_def_cfa_offset 8
 350              		.cfi_offset 7, -8
 351              		.cfi_offset 14, -4
 352 0002 84B0     		sub	sp, sp, #16
 353              	.LCFI6:
 354              		.cfi_def_cfa_offset 24
 355 0004 00AF     		add	r7, sp, #0
 356              	.LCFI7:
 357              		.cfi_def_cfa_register 7
 358 0006 7860     		str	r0, [r7, #4]
 631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 359              		.loc 1 631 21
 360 0008 0023     		movs	r3, #0
 361 000a FB73     		strb	r3, [r7, #15]
 632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check ADC handle */
 634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if(hadc == NULL)
 362              		.loc 1 634 5
 363 000c 7B68     		ldr	r3, [r7, #4]
 364 000e 002B     		cmp	r3, #0
 365 0010 01D1     		bne	.L24
 635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      return HAL_ERROR;
 366              		.loc 1 636 13
 367 0012 0123     		movs	r3, #1
 368 0014 ADE0     		b	.L25
 369              	.L24:
 637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
 640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Set ADC state */
 643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL);
 370              		.loc 1 643 3
 371 0016 7B68     		ldr	r3, [r7, #4]
 372 0018 9B6A     		ldr	r3, [r3, #40]
 373 001a 43F00202 		orr	r2, r3, #2
 374 001e 7B68     		ldr	r3, [r7, #4]
 375 0020 9A62     		str	r2, [r3, #40]
 644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
 646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Disable ADC peripheral */
 647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop_Disable(hadc);
 376              		.loc 1 647 20
 377 0022 7868     		ldr	r0, [r7, #4]
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 19


 378 0024 FFF7FEFF 		bl	ADC_ConversionStop_Disable
 379 0028 0346     		mov	r3, r0
 380 002a FB73     		strb	r3, [r7, #15]
 648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */ 
 651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* correctly completed.                                                     */
 652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
 381              		.loc 1 652 6
 382 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 383 002e 002B     		cmp	r3, #0
 384 0030 40F09A80 		bne	.L26
 653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* ========== Reset ADC registers ========== */
 655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register SR */
 660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_AWD | ADC_FLAG_JEOC | ADC_FLAG_EOC |
 385              		.loc 1 660 5
 386 0034 7B68     		ldr	r3, [r7, #4]
 387 0036 1B68     		ldr	r3, [r3]
 388 0038 6FF01F02 		mvn	r2, #31
 389 003c 1A60     		str	r2, [r3]
 661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                 ADC_FLAG_JSTRT | ADC_FLAG_STRT));
 662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                          
 663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register CR1 */
 664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->CR1, (ADC_CR1_AWDEN   | ADC_CR1_JAWDEN | ADC_CR1_DISCNUM | 
 390              		.loc 1 664 5
 391 003e 7B68     		ldr	r3, [r7, #4]
 392 0040 1B68     		ldr	r3, [r3]
 393 0042 5968     		ldr	r1, [r3, #4]
 394 0044 7B68     		ldr	r3, [r7, #4]
 395 0046 1A68     		ldr	r2, [r3]
 396 0048 4C4B     		ldr	r3, .L27
 397 004a 0B40     		ands	r3, r3, r1
 398 004c 5360     		str	r3, [r2, #4]
 665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_CR1_JDISCEN | ADC_CR1_DISCEN | ADC_CR1_JAUTO   | 
 666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_CR1_AWDSGL  | ADC_CR1_SCAN   | ADC_CR1_JEOCIE  |   
 667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_CR1_AWDIE   | ADC_CR1_EOCIE  | ADC_CR1_AWDCH    ));
 668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register CR2 */
 670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->CR2, (ADC_CR2_TSVREFE | ADC_CR2_SWSTART | ADC_CR2_JSWSTART | 
 399              		.loc 1 670 5
 400 004e 7B68     		ldr	r3, [r7, #4]
 401 0050 1B68     		ldr	r3, [r3]
 402 0052 9968     		ldr	r1, [r3, #8]
 403 0054 7B68     		ldr	r3, [r7, #4]
 404 0056 1A68     		ldr	r2, [r3]
 405 0058 494B     		ldr	r3, .L27+4
 406 005a 0B40     		ands	r3, r3, r1
 407 005c 9360     		str	r3, [r2, #8]
 671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_CR2_EXTTRIG | ADC_CR2_EXTSEL  | ADC_CR2_JEXTTRIG |  
 672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_CR2_JEXTSEL | ADC_CR2_ALIGN   | ADC_CR2_DMA      |        
 673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_CR2_RSTCAL  | ADC_CR2_CAL     | ADC_CR2_CONT     |         
 674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_CR2_ADON                                          ));
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 20


 675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register SMPR1 */
 677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->SMPR1, (ADC_SMPR1_SMP17 | ADC_SMPR1_SMP16 | ADC_SMPR1_SMP15 | 
 408              		.loc 1 677 5
 409 005e 7B68     		ldr	r3, [r7, #4]
 410 0060 1B68     		ldr	r3, [r3]
 411 0062 DA68     		ldr	r2, [r3, #12]
 412 0064 7B68     		ldr	r3, [r7, #4]
 413 0066 1B68     		ldr	r3, [r3]
 414 0068 02F07F42 		and	r2, r2, #-16777216
 415 006c DA60     		str	r2, [r3, #12]
 678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                       ADC_SMPR1_SMP14 | ADC_SMPR1_SMP13 | ADC_SMPR1_SMP12 | 
 679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                       ADC_SMPR1_SMP11 | ADC_SMPR1_SMP10                    ));
 680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register SMPR2 */
 682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->SMPR2, (ADC_SMPR2_SMP9 | ADC_SMPR2_SMP8 | ADC_SMPR2_SMP7 | 
 416              		.loc 1 682 5
 417 006e 7B68     		ldr	r3, [r7, #4]
 418 0070 1B68     		ldr	r3, [r3]
 419 0072 1A69     		ldr	r2, [r3, #16]
 420 0074 7B68     		ldr	r3, [r7, #4]
 421 0076 1B68     		ldr	r3, [r3]
 422 0078 02F04042 		and	r2, r2, #-1073741824
 423 007c 1A61     		str	r2, [r3, #16]
 683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                       ADC_SMPR2_SMP6 | ADC_SMPR2_SMP5 | ADC_SMPR2_SMP4 | 
 684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                       ADC_SMPR2_SMP3 | ADC_SMPR2_SMP2 | ADC_SMPR2_SMP1 | 
 685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                       ADC_SMPR2_SMP0                                    ));
 686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register JOFR1 */
 688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->JOFR1, ADC_JOFR1_JOFFSET1);
 424              		.loc 1 688 5
 425 007e 7B68     		ldr	r3, [r7, #4]
 426 0080 1B68     		ldr	r3, [r3]
 427 0082 5B69     		ldr	r3, [r3, #20]
 428 0084 7A68     		ldr	r2, [r7, #4]
 429 0086 1268     		ldr	r2, [r2]
 430 0088 23F47F63 		bic	r3, r3, #4080
 431 008c 23F00F03 		bic	r3, r3, #15
 432 0090 5361     		str	r3, [r2, #20]
 689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register JOFR2 */
 690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->JOFR2, ADC_JOFR2_JOFFSET2);
 433              		.loc 1 690 5
 434 0092 7B68     		ldr	r3, [r7, #4]
 435 0094 1B68     		ldr	r3, [r3]
 436 0096 9B69     		ldr	r3, [r3, #24]
 437 0098 7A68     		ldr	r2, [r7, #4]
 438 009a 1268     		ldr	r2, [r2]
 439 009c 23F47F63 		bic	r3, r3, #4080
 440 00a0 23F00F03 		bic	r3, r3, #15
 441 00a4 9361     		str	r3, [r2, #24]
 691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register JOFR3 */
 692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->JOFR3, ADC_JOFR3_JOFFSET3);
 442              		.loc 1 692 5
 443 00a6 7B68     		ldr	r3, [r7, #4]
 444 00a8 1B68     		ldr	r3, [r3]
 445 00aa DB69     		ldr	r3, [r3, #28]
 446 00ac 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 21


 447 00ae 1268     		ldr	r2, [r2]
 448 00b0 23F47F63 		bic	r3, r3, #4080
 449 00b4 23F00F03 		bic	r3, r3, #15
 450 00b8 D361     		str	r3, [r2, #28]
 693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register JOFR4 */
 694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->JOFR4, ADC_JOFR4_JOFFSET4);
 451              		.loc 1 694 5
 452 00ba 7B68     		ldr	r3, [r7, #4]
 453 00bc 1B68     		ldr	r3, [r3]
 454 00be 1B6A     		ldr	r3, [r3, #32]
 455 00c0 7A68     		ldr	r2, [r7, #4]
 456 00c2 1268     		ldr	r2, [r2]
 457 00c4 23F47F63 		bic	r3, r3, #4080
 458 00c8 23F00F03 		bic	r3, r3, #15
 459 00cc 1362     		str	r3, [r2, #32]
 695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register HTR */
 697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->HTR, ADC_HTR_HT);
 460              		.loc 1 697 5
 461 00ce 7B68     		ldr	r3, [r7, #4]
 462 00d0 1B68     		ldr	r3, [r3]
 463 00d2 5B6A     		ldr	r3, [r3, #36]
 464 00d4 7A68     		ldr	r2, [r7, #4]
 465 00d6 1268     		ldr	r2, [r2]
 466 00d8 23F47F63 		bic	r3, r3, #4080
 467 00dc 23F00F03 		bic	r3, r3, #15
 468 00e0 5362     		str	r3, [r2, #36]
 698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register LTR */
 699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->LTR, ADC_LTR_LT);
 469              		.loc 1 699 5
 470 00e2 7B68     		ldr	r3, [r7, #4]
 471 00e4 1B68     		ldr	r3, [r3]
 472 00e6 9B6A     		ldr	r3, [r3, #40]
 473 00e8 7A68     		ldr	r2, [r7, #4]
 474 00ea 1268     		ldr	r2, [r2]
 475 00ec 23F47F63 		bic	r3, r3, #4080
 476 00f0 23F00F03 		bic	r3, r3, #15
 477 00f4 9362     		str	r3, [r2, #40]
 700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register SQR1 */
 702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_L    |
 478              		.loc 1 702 5
 479 00f6 7B68     		ldr	r3, [r7, #4]
 480 00f8 1B68     		ldr	r3, [r3]
 481 00fa DA6A     		ldr	r2, [r3, #44]
 482 00fc 7B68     		ldr	r3, [r7, #4]
 483 00fe 1B68     		ldr	r3, [r3]
 484 0100 02F07F42 		and	r2, r2, #-16777216
 485 0104 DA62     		str	r2, [r3, #44]
 703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_SQR1_SQ16 | ADC_SQR1_SQ15 | 
 704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_SQR1_SQ14 | ADC_SQR1_SQ13  );
 705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register SQR1 */
 707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_L    |
 486              		.loc 1 707 5
 487 0106 7B68     		ldr	r3, [r7, #4]
 488 0108 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 22


 489 010a DA6A     		ldr	r2, [r3, #44]
 490 010c 7B68     		ldr	r3, [r7, #4]
 491 010e 1B68     		ldr	r3, [r3]
 492 0110 02F07F42 		and	r2, r2, #-16777216
 493 0114 DA62     		str	r2, [r3, #44]
 708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_SQR1_SQ16 | ADC_SQR1_SQ15 | 
 709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_SQR1_SQ14 | ADC_SQR1_SQ13  );
 710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register SQR2 */
 712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->SQR2, ADC_SQR2_SQ12 | ADC_SQR2_SQ11 | ADC_SQR2_SQ10 | 
 494              		.loc 1 712 5
 495 0116 7B68     		ldr	r3, [r7, #4]
 496 0118 1B68     		ldr	r3, [r3]
 497 011a 1A6B     		ldr	r2, [r3, #48]
 498 011c 7B68     		ldr	r3, [r7, #4]
 499 011e 1B68     		ldr	r3, [r3]
 500 0120 02F04042 		and	r2, r2, #-1073741824
 501 0124 1A63     		str	r2, [r3, #48]
 713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_SQR2_SQ9  | ADC_SQR2_SQ8  | ADC_SQR2_SQ7   );
 714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register SQR3 */
 716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->SQR3, ADC_SQR3_SQ6 | ADC_SQR3_SQ5 | ADC_SQR3_SQ4 | 
 502              		.loc 1 716 5
 503 0126 7B68     		ldr	r3, [r7, #4]
 504 0128 1B68     		ldr	r3, [r3]
 505 012a 5A6B     		ldr	r2, [r3, #52]
 506 012c 7B68     		ldr	r3, [r7, #4]
 507 012e 1B68     		ldr	r3, [r3]
 508 0130 02F04042 		and	r2, r2, #-1073741824
 509 0134 5A63     		str	r2, [r3, #52]
 717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_SQR3_SQ3 | ADC_SQR3_SQ2 | ADC_SQR3_SQ1  );
 718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register JSQR */
 720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->JSQR, ADC_JSQR_JL |
 510              		.loc 1 720 5
 511 0136 7B68     		ldr	r3, [r7, #4]
 512 0138 1B68     		ldr	r3, [r3]
 513 013a 9B6B     		ldr	r3, [r3, #56]
 514 013c 7A68     		ldr	r2, [r7, #4]
 515 013e 1268     		ldr	r2, [r2]
 516 0140 9B0D     		lsrs	r3, r3, #22
 517 0142 9B05     		lsls	r3, r3, #22
 518 0144 9363     		str	r3, [r2, #56]
 721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_JSQR_JSQ4 | ADC_JSQR_JSQ3 | 
 722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_JSQR_JSQ2 | ADC_JSQR_JSQ1  );
 723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register JSQR */
 725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->JSQR, ADC_JSQR_JL |
 519              		.loc 1 725 5
 520 0146 7B68     		ldr	r3, [r7, #4]
 521 0148 1B68     		ldr	r3, [r3]
 522 014a 9B6B     		ldr	r3, [r3, #56]
 523 014c 7A68     		ldr	r2, [r7, #4]
 524 014e 1268     		ldr	r2, [r2]
 525 0150 9B0D     		lsrs	r3, r3, #22
 526 0152 9B05     		lsls	r3, r3, #22
 527 0154 9363     		str	r3, [r2, #56]
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 23


 726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_JSQR_JSQ4 | ADC_JSQR_JSQ3 | 
 727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_JSQR_JSQ2 | ADC_JSQR_JSQ1  );
 728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register DR */
 730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* bits in access mode read only, no direct reset applicable*/
 731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset registers JDR1, JDR2, JDR3, JDR4 */
 733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* bits in access mode read only, no direct reset applicable*/
 734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* ========== Hard reset ADC peripheral ========== */
 736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Performs a global reset of the entire ADC peripheral: ADC state is     */
 737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* forced to a similar state after device power-on.                       */
 738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* If needed, copy-paste and uncomment the following reset code into      */
 739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* function "void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)":              */
 740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*                                                                        */
 741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  __HAL_RCC_ADC1_FORCE_RESET()                                          */
 742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  __HAL_RCC_ADC1_RELEASE_RESET()                                        */
 743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (hadc->MspDeInitCallback == NULL)
 746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       hadc->MspDeInitCallback = HAL_ADC_MspDeInit; /* Legacy weak MspDeInit  */
 748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* DeInit the low level hardware */
 751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     hadc->MspDeInitCallback(hadc);
 752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** #else
 753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* DeInit the low level hardware */
 754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     HAL_ADC_MspDeInit(hadc);
 528              		.loc 1 754 5
 529 0156 7868     		ldr	r0, [r7, #4]
 530 0158 FFF7FEFF 		bl	HAL_ADC_MspDeInit
 755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Set ADC error code to none */
 758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
 531              		.loc 1 758 5
 532 015c 7B68     		ldr	r3, [r7, #4]
 533 015e 0022     		movs	r2, #0
 534 0160 DA62     		str	r2, [r3, #44]
 759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Set ADC state */
 761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     hadc->State = HAL_ADC_STATE_RESET; 
 535              		.loc 1 761 17
 536 0162 7B68     		ldr	r3, [r7, #4]
 537 0164 0022     		movs	r2, #0
 538 0166 9A62     		str	r2, [r3, #40]
 539              	.L26:
 762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Process unlocked */
 766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 540              		.loc 1 766 3
 541 0168 7B68     		ldr	r3, [r7, #4]
 542 016a 0022     		movs	r2, #0
 543 016c 83F82420 		strb	r2, [r3, #36]
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 24


 767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return function status */
 769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return tmp_hal_status;
 544              		.loc 1 769 10
 545 0170 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 546              	.L25:
 770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 547              		.loc 1 770 1
 548 0172 1846     		mov	r0, r3
 549 0174 1037     		adds	r7, r7, #16
 550              	.LCFI8:
 551              		.cfi_def_cfa_offset 8
 552 0176 BD46     		mov	sp, r7
 553              	.LCFI9:
 554              		.cfi_def_cfa_register 13
 555              		@ sp needed
 556 0178 80BD     		pop	{r7, pc}
 557              	.L28:
 558 017a 00BF     		.align	2
 559              	.L27:
 560 017c 00003FFF 		.word	-12648448
 561 0180 F00601FF 		.word	-16709904
 562              		.cfi_endproc
 563              	.LFE66:
 565              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 566              		.align	1
 567              		.weak	HAL_ADC_MspInit
 568              		.syntax unified
 569              		.thumb
 570              		.thumb_func
 572              	HAL_ADC_MspInit:
 573              	.LFB67:
 771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
 773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Initializes the ADC MSP.
 774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
 775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval None
 776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** __weak void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
 778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 574              		.loc 1 778 1
 575              		.cfi_startproc
 576              		@ args = 0, pretend = 0, frame = 8
 577              		@ frame_needed = 1, uses_anonymous_args = 0
 578              		@ link register save eliminated.
 579 0000 80B4     		push	{r7}
 580              	.LCFI10:
 581              		.cfi_def_cfa_offset 4
 582              		.cfi_offset 7, -4
 583 0002 83B0     		sub	sp, sp, #12
 584              	.LCFI11:
 585              		.cfi_def_cfa_offset 16
 586 0004 00AF     		add	r7, sp, #0
 587              	.LCFI12:
 588              		.cfi_def_cfa_register 7
 589 0006 7860     		str	r0, [r7, #4]
 779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 25


 780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   UNUSED(hadc);
 781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****             function HAL_ADC_MspInit must be implemented in the user file.
 783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****    */ 
 784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 590              		.loc 1 784 1
 591 0008 00BF     		nop
 592 000a 0C37     		adds	r7, r7, #12
 593              	.LCFI13:
 594              		.cfi_def_cfa_offset 4
 595 000c BD46     		mov	sp, r7
 596              	.LCFI14:
 597              		.cfi_def_cfa_register 13
 598              		@ sp needed
 599 000e 80BC     		pop	{r7}
 600              	.LCFI15:
 601              		.cfi_restore 7
 602              		.cfi_def_cfa_offset 0
 603 0010 7047     		bx	lr
 604              		.cfi_endproc
 605              	.LFE67:
 607              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 608              		.align	1
 609              		.weak	HAL_ADC_MspDeInit
 610              		.syntax unified
 611              		.thumb
 612              		.thumb_func
 614              	HAL_ADC_MspDeInit:
 615              	.LFB68:
 785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
 787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  DeInitializes the ADC MSP.
 788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
 789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval None
 790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** __weak void HAL_ADC_MspDeInit(ADC_HandleTypeDef* hadc)
 792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 616              		.loc 1 792 1
 617              		.cfi_startproc
 618              		@ args = 0, pretend = 0, frame = 8
 619              		@ frame_needed = 1, uses_anonymous_args = 0
 620              		@ link register save eliminated.
 621 0000 80B4     		push	{r7}
 622              	.LCFI16:
 623              		.cfi_def_cfa_offset 4
 624              		.cfi_offset 7, -4
 625 0002 83B0     		sub	sp, sp, #12
 626              	.LCFI17:
 627              		.cfi_def_cfa_offset 16
 628 0004 00AF     		add	r7, sp, #0
 629              	.LCFI18:
 630              		.cfi_def_cfa_register 7
 631 0006 7860     		str	r0, [r7, #4]
 793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   UNUSED(hadc);
 795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****             function HAL_ADC_MspDeInit must be implemented in the user file.
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 26


 797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****    */ 
 798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 632              		.loc 1 798 1
 633 0008 00BF     		nop
 634 000a 0C37     		adds	r7, r7, #12
 635              	.LCFI19:
 636              		.cfi_def_cfa_offset 4
 637 000c BD46     		mov	sp, r7
 638              	.LCFI20:
 639              		.cfi_def_cfa_register 13
 640              		@ sp needed
 641 000e 80BC     		pop	{r7}
 642              	.LCFI21:
 643              		.cfi_restore 7
 644              		.cfi_def_cfa_offset 0
 645 0010 7047     		bx	lr
 646              		.cfi_endproc
 647              	.LFE68:
 649              		.section	.text.HAL_ADC_Start,"ax",%progbits
 650              		.align	1
 651              		.global	HAL_ADC_Start
 652              		.syntax unified
 653              		.thumb
 654              		.thumb_func
 656              	HAL_ADC_Start:
 657              	.LFB69:
 799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
 802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Register a User ADC Callback
 803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         To be used instead of the weak predefined callback
 804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc Pointer to a ADC_HandleTypeDef structure that contains
 805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *                the configuration information for the specified ADC.
 806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  CallbackID ID of the callback to be registered
 807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         This parameter can be one of the following values:
 808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_COMPLETE_CB_ID      ADC conversion complete callback ID
 809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_HALF_CB_ID          ADC conversion complete callback ID
 810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID    ADC analog watchdog 1 callback ID
 811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          @arg @ref HAL_ADC_ERROR_CB_ID                    ADC error callback ID
 812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID  ADC group injected conversion complet
 813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID                  ADC Msp Init callback ID
 814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID                ADC Msp DeInit callback ID
 815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID MspInit callback ID
 816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID MspDeInit callback ID
 817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  pCallback pointer to the Callback function
 818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval HAL status
 819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_RegisterCallback(ADC_HandleTypeDef *hadc, HAL_ADC_CallbackIDTypeDef Callb
 821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef status = HAL_OK;
 823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (pCallback == NULL)
 825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Update the error code */
 827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     return HAL_ERROR;
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 27


 830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if ((hadc->State & HAL_ADC_STATE_READY) != 0)
 833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     switch (CallbackID)
 835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       case HAL_ADC_CONVERSION_COMPLETE_CB_ID :
 837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         hadc->ConvCpltCallback = pCallback;
 838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         break;
 839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       case HAL_ADC_CONVERSION_HALF_CB_ID :
 841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         hadc->ConvHalfCpltCallback = pCallback;
 842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         break;
 843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID :
 845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         hadc->LevelOutOfWindowCallback = pCallback;
 846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         break;
 847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       case HAL_ADC_ERROR_CB_ID :
 849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         hadc->ErrorCallback = pCallback;
 850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         break;
 851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       case HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID :
 853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         hadc->InjectedConvCpltCallback = pCallback;
 854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         break;
 855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
 857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         hadc->MspInitCallback = pCallback;
 858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         break;
 859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
 861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         hadc->MspDeInitCallback = pCallback;
 862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         break;
 863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       default :
 865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Update the error code */
 866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Return error status */
 869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         status = HAL_ERROR;
 870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         break;
 871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   else if (HAL_ADC_STATE_RESET == hadc->State)
 874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     switch (CallbackID)
 876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
 878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         hadc->MspInitCallback = pCallback;
 879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         break;
 880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
 882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         hadc->MspDeInitCallback = pCallback;
 883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         break;
 884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       default :
 886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Update the error code */
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 28


 887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Return error status */
 890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         status = HAL_ERROR;
 891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         break;
 892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   else
 895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Update the error code */
 897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Return error status */
 900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     status =  HAL_ERROR;
 901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return status;
 904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
 907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Unregister a ADC Callback
 908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         ADC callback is redirected to the weak predefined callback
 909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc Pointer to a ADC_HandleTypeDef structure that contains
 910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *                the configuration information for the specified ADC.
 911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  CallbackID ID of the callback to be unregistered
 912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         This parameter can be one of the following values:
 913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_COMPLETE_CB_ID      ADC conversion complete callback ID
 914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_HALF_CB_ID          ADC conversion complete callback ID
 915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID    ADC analog watchdog 1 callback ID
 916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          @arg @ref HAL_ADC_ERROR_CB_ID                    ADC error callback ID
 917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID  ADC group injected conversion complet
 918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID                  ADC Msp Init callback ID
 919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID                ADC Msp DeInit callback ID
 920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID MspInit callback ID
 921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID MspDeInit callback ID
 922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval HAL status
 923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_UnRegisterCallback(ADC_HandleTypeDef *hadc, HAL_ADC_CallbackIDTypeDef Cal
 925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef status = HAL_OK;
 927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if ((hadc->State & HAL_ADC_STATE_READY) != 0)
 929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     switch (CallbackID)
 931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       case HAL_ADC_CONVERSION_COMPLETE_CB_ID :
 933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         hadc->ConvCpltCallback = HAL_ADC_ConvCpltCallback;
 934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         break;
 935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       case HAL_ADC_CONVERSION_HALF_CB_ID :
 937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         hadc->ConvHalfCpltCallback = HAL_ADC_ConvHalfCpltCallback;
 938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         break;
 939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID :
 941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         hadc->LevelOutOfWindowCallback = HAL_ADC_LevelOutOfWindowCallback;
 942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         break;
 943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 29


 944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       case HAL_ADC_ERROR_CB_ID :
 945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         hadc->ErrorCallback = HAL_ADC_ErrorCallback;
 946:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         break;
 947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       case HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID :
 949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         hadc->InjectedConvCpltCallback = HAL_ADCEx_InjectedConvCpltCallback;
 950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         break;
 951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
 953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         hadc->MspInitCallback = HAL_ADC_MspInit; /* Legacy weak MspInit              */
 954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         break;
 955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
 957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         hadc->MspDeInitCallback = HAL_ADC_MspDeInit; /* Legacy weak MspDeInit            */
 958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         break;
 959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       default :
 961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Update the error code */
 962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
 964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Return error status */
 965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         status =  HAL_ERROR;
 966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         break;
 967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   else if (HAL_ADC_STATE_RESET == hadc->State)
 970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     switch (CallbackID)
 972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
 974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         hadc->MspInitCallback = HAL_ADC_MspInit;                   /* Legacy weak MspInit          
 975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         break;
 976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
 977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
 978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         hadc->MspDeInitCallback = HAL_ADC_MspDeInit;               /* Legacy weak MspDeInit        
 979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         break;
 980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
 981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       default :
 982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Update the error code */
 983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
 985:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Return error status */
 986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         status =  HAL_ERROR;
 987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         break;
 988:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 989:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   else
 991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Update the error code */
 993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Return error status */
 996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     status =  HAL_ERROR;
 997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return status;
1000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 30


1001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1004:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @}
1006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group2 IO operation functions
1009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  *  @brief    Input and Output operation functions
1010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  *
1011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** @verbatim   
1012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  ===============================================================================
1013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       ##### IO operation functions #####
1014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  ===============================================================================
1015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     [..]  This section provides functions allowing to:
1016:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Start conversion of regular group.
1017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Stop conversion of regular group.
1018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Poll for conversion complete on regular group.
1019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Poll for conversion event.
1020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Get result of regular channel conversion.
1021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Start conversion of regular group and enable interruptions.
1022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Stop conversion of regular group and disable interruptions.
1023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Handle ADC interrupt request
1024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Start conversion of regular group and enable DMA transfer.
1025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Stop conversion of regular group and disable ADC DMA transfer.
1026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** @endverbatim
1027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @{
1028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Enables ADC, starts conversion of regular group.
1032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         Interruptions enabled in this function: None.
1033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval HAL status
1035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef* hadc)
1037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 658              		.loc 1 1037 1
 659              		.cfi_startproc
 660              		@ args = 0, pretend = 0, frame = 16
 661              		@ frame_needed = 1, uses_anonymous_args = 0
 662 0000 80B5     		push	{r7, lr}
 663              	.LCFI22:
 664              		.cfi_def_cfa_offset 8
 665              		.cfi_offset 7, -8
 666              		.cfi_offset 14, -4
 667 0002 84B0     		sub	sp, sp, #16
 668              	.LCFI23:
 669              		.cfi_def_cfa_offset 24
 670 0004 00AF     		add	r7, sp, #0
 671              	.LCFI24:
 672              		.cfi_def_cfa_register 7
 673 0006 7860     		str	r0, [r7, #4]
1038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 674              		.loc 1 1038 21
 675 0008 0023     		movs	r3, #0
 676 000a FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 31


1039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
1041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Process locked */
1044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_LOCK(hadc);
 677              		.loc 1 1044 3
 678 000c 7B68     		ldr	r3, [r7, #4]
 679 000e 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 680 0012 012B     		cmp	r3, #1
 681 0014 01D1     		bne	.L32
 682              		.loc 1 1044 3 is_stmt 0 discriminator 1
 683 0016 0223     		movs	r3, #2
 684 0018 98E0     		b	.L33
 685              	.L32:
 686              		.loc 1 1044 3 discriminator 2
 687 001a 7B68     		ldr	r3, [r7, #4]
 688 001c 0122     		movs	r2, #1
 689 001e 83F82420 		strb	r2, [r3, #36]
1045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****    
1046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Enable the ADC peripheral */
1047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   tmp_hal_status = ADC_Enable(hadc);
 690              		.loc 1 1047 20 is_stmt 1 discriminator 2
 691 0022 7868     		ldr	r0, [r7, #4]
 692 0024 FFF7FEFF 		bl	ADC_Enable
 693 0028 0346     		mov	r3, r0
 694 002a FB73     		strb	r3, [r7, #15]
1048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Start conversion if ADC is effectively enabled */
1050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
 695              		.loc 1 1050 6 discriminator 2
 696 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 697 002e 002B     		cmp	r3, #0
 698 0030 40F08780 		bne	.L34
1051:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1052:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Set ADC state                                                          */
1053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* - Clear state bitfield related to regular group conversion results     */
1054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* - Set state bitfield related to regular operation                      */
1055:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 699              		.loc 1 1055 5
 700 0034 7B68     		ldr	r3, [r7, #4]
 701 0036 9B6A     		ldr	r3, [r3, #40]
 702 0038 23F44073 		bic	r3, r3, #768
 703 003c 23F00103 		bic	r3, r3, #1
 704 0040 43F48072 		orr	r2, r3, #256
 705 0044 7B68     		ldr	r3, [r7, #4]
 706 0046 9A62     		str	r2, [r3, #40]
1056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC,
1057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY);
1058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Set group injected state (from auto-injection) and multimode state     */
1060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* for all cases of multimode: independent mode, multimode ADC master     */
1061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* or multimode ADC slave (for devices with several ADCs):                */
1062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc))
 707              		.loc 1 1062 9
 708 0048 7B68     		ldr	r3, [r7, #4]
 709 004a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 32


 710              		.loc 1 1062 8
 711 004c 414A     		ldr	r2, .L46
 712 004e 9342     		cmp	r3, r2
 713 0050 05D1     		bne	.L35
 714              		.loc 1 1062 9 discriminator 1
 715 0052 414B     		ldr	r3, .L46+4
 716 0054 5B68     		ldr	r3, [r3, #4]
 717 0056 03F47023 		and	r3, r3, #983040
 718 005a 002B     		cmp	r3, #0
 719 005c 15D1     		bne	.L36
 720              	.L35:
1063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set ADC state (ADC independent or master) */
1065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 721              		.loc 1 1065 7
 722 005e 7B68     		ldr	r3, [r7, #4]
 723 0060 9B6A     		ldr	r3, [r3, #40]
 724 0062 23F48012 		bic	r2, r3, #1048576
 725 0066 7B68     		ldr	r3, [r7, #4]
 726 0068 9A62     		str	r2, [r3, #40]
1066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* If conversions on group regular are also triggering group injected,  */
1068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* update ADC state.                                                    */
1069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 727              		.loc 1 1069 11
 728 006a 7B68     		ldr	r3, [r7, #4]
 729 006c 1B68     		ldr	r3, [r3]
 730 006e 5B68     		ldr	r3, [r3, #4]
 731 0070 03F48063 		and	r3, r3, #1024
 732              		.loc 1 1069 10
 733 0074 002B     		cmp	r3, #0
 734 0076 26D0     		beq	.L38
1070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 735              		.loc 1 1071 9
 736 0078 7B68     		ldr	r3, [r7, #4]
 737 007a 9B6A     		ldr	r3, [r3, #40]
 738 007c 23F44053 		bic	r3, r3, #12288
 739 0080 43F48052 		orr	r2, r3, #4096
 740 0084 7B68     		ldr	r3, [r7, #4]
 741 0086 9A62     		str	r2, [r3, #40]
1069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 742              		.loc 1 1069 10
 743 0088 1DE0     		b	.L38
 744              	.L36:
1072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     else
1075:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set ADC state (ADC slave) */
1077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 745              		.loc 1 1077 7
 746 008a 7B68     		ldr	r3, [r7, #4]
 747 008c 9B6A     		ldr	r3, [r3, #40]
 748 008e 43F48012 		orr	r2, r3, #1048576
 749 0092 7B68     		ldr	r3, [r7, #4]
 750 0094 9A62     		str	r2, [r3, #40]
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 33


1078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* If conversions on group regular are also triggering group injected,  */
1080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* update ADC state.                                                    */
1081:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if (ADC_MULTIMODE_AUTO_INJECTED(hadc))
 751              		.loc 1 1081 11
 752 0096 7B68     		ldr	r3, [r7, #4]
 753 0098 1B68     		ldr	r3, [r3]
 754              		.loc 1 1081 10
 755 009a 2F4A     		ldr	r2, .L46+4
 756 009c 9342     		cmp	r3, r2
 757 009e 04D0     		beq	.L39
 758              		.loc 1 1081 11 discriminator 2
 759 00a0 7B68     		ldr	r3, [r7, #4]
 760 00a2 1B68     		ldr	r3, [r3]
 761 00a4 2B4A     		ldr	r2, .L46
 762 00a6 9342     		cmp	r3, r2
 763 00a8 0DD1     		bne	.L38
 764              	.L39:
 765              		.loc 1 1081 11 is_stmt 0 discriminator 3
 766 00aa 2B4B     		ldr	r3, .L46+4
 767 00ac 5B68     		ldr	r3, [r3, #4]
 768 00ae 03F48063 		and	r3, r3, #1024
 769 00b2 002B     		cmp	r3, #0
 770 00b4 07D0     		beq	.L38
1082:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1083:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
 771              		.loc 1 1083 9 is_stmt 1
 772 00b6 7B68     		ldr	r3, [r7, #4]
 773 00b8 9B6A     		ldr	r3, [r3, #40]
 774 00ba 23F44053 		bic	r3, r3, #12288
 775 00be 43F48052 		orr	r2, r3, #4096
 776 00c2 7B68     		ldr	r3, [r7, #4]
 777 00c4 9A62     		str	r2, [r3, #40]
 778              	.L38:
1084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1085:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1087:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* State machine update: Check if an injected conversion is ongoing */
1088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 779              		.loc 1 1088 9
 780 00c6 7B68     		ldr	r3, [r7, #4]
 781 00c8 9B6A     		ldr	r3, [r3, #40]
 782 00ca 03F48053 		and	r3, r3, #4096
 783              		.loc 1 1088 8
 784 00ce 002B     		cmp	r3, #0
 785 00d0 06D0     		beq	.L40
1089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1090:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Reset ADC error code fields related to conversions on group regular */
1091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 786              		.loc 1 1091 7
 787 00d2 7B68     		ldr	r3, [r7, #4]
 788 00d4 DB6A     		ldr	r3, [r3, #44]
 789 00d6 23F00602 		bic	r2, r3, #6
 790 00da 7B68     		ldr	r3, [r7, #4]
 791 00dc DA62     		str	r2, [r3, #44]
 792 00de 02E0     		b	.L41
 793              	.L40:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 34


1092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     else
1094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Reset ADC all error code fields */
1096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
 794              		.loc 1 1096 7
 795 00e0 7B68     		ldr	r3, [r7, #4]
 796 00e2 0022     		movs	r2, #0
 797 00e4 DA62     		str	r2, [r3, #44]
 798              	.L41:
1097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Process unlocked */
1100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Unlock before starting ADC conversions: in case of potential           */
1101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
1102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_UNLOCK(hadc);
 799              		.loc 1 1102 5
 800 00e6 7B68     		ldr	r3, [r7, #4]
 801 00e8 0022     		movs	r2, #0
 802 00ea 83F82420 		strb	r2, [r3, #36]
1103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Clear regular group conversion flag */
1105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
1106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC);
 803              		.loc 1 1106 5
 804 00ee 7B68     		ldr	r3, [r7, #4]
 805 00f0 1B68     		ldr	r3, [r3]
 806 00f2 6FF00202 		mvn	r2, #2
 807 00f6 1A60     		str	r2, [r3]
1107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Enable conversion of regular group.                                    */
1109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* If software start has been selected, conversion starts immediately.    */
1110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* If external trigger has been selected, conversion will start at next   */
1111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* trigger event.                                                         */
1112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Case of multimode enabled:                                             */ 
1113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  - if ADC is slave, ADC is enabled only (conversion is not started).   */
1114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  - if ADC is master, ADC is enabled and conversion is started.         */
1115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* If ADC is master, ADC is enabled and conversion is started.            */
1116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Note: Alternate trigger for single conversion could be to force an     */
1117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*       additional set of bit ADON "hadc->Instance->CR2 |= ADC_CR2_ADON;"*/
1118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (ADC_IS_SOFTWARE_START_REGULAR(hadc)      &&
 808              		.loc 1 1118 9
 809 00f8 7B68     		ldr	r3, [r7, #4]
 810 00fa 1B68     		ldr	r3, [r3]
 811 00fc 9B68     		ldr	r3, [r3, #8]
 812 00fe 03F46023 		and	r3, r3, #917504
 813              		.loc 1 1118 8
 814 0102 B3F5602F 		cmp	r3, #917504
 815 0106 13D1     		bne	.L42
1119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc)  )
 816              		.loc 1 1119 9 discriminator 1
 817 0108 7B68     		ldr	r3, [r7, #4]
 818 010a 1B68     		ldr	r3, [r3]
1118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc)  )
 819              		.loc 1 1118 50 discriminator 1
 820 010c 114A     		ldr	r2, .L46
 821 010e 9342     		cmp	r3, r2
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 35


 822 0110 05D1     		bne	.L43
 823              		.loc 1 1119 9 discriminator 2
 824 0112 114B     		ldr	r3, .L46+4
 825 0114 5B68     		ldr	r3, [r3, #4]
 826 0116 03F47023 		and	r3, r3, #983040
1118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc)  )
 827              		.loc 1 1118 50 discriminator 2
 828 011a 002B     		cmp	r3, #0
 829 011c 08D1     		bne	.L42
 830              	.L43:
1120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Start ADC conversion on regular group with SW start */
1122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       SET_BIT(hadc->Instance->CR2, (ADC_CR2_SWSTART | ADC_CR2_EXTTRIG));
 831              		.loc 1 1122 7
 832 011e 7B68     		ldr	r3, [r7, #4]
 833 0120 1B68     		ldr	r3, [r3]
 834 0122 9A68     		ldr	r2, [r3, #8]
 835 0124 7B68     		ldr	r3, [r7, #4]
 836 0126 1B68     		ldr	r3, [r3]
 837 0128 42F4A002 		orr	r2, r2, #5242880
 838 012c 9A60     		str	r2, [r3, #8]
 839 012e 0CE0     		b	.L45
 840              	.L42:
1123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     else
1125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Start ADC conversion on regular group with external trigger */
1127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       SET_BIT(hadc->Instance->CR2, ADC_CR2_EXTTRIG);
 841              		.loc 1 1127 7
 842 0130 7B68     		ldr	r3, [r7, #4]
 843 0132 1B68     		ldr	r3, [r3]
 844 0134 9A68     		ldr	r2, [r3, #8]
 845 0136 7B68     		ldr	r3, [r7, #4]
 846 0138 1B68     		ldr	r3, [r3]
 847 013a 42F48012 		orr	r2, r2, #1048576
 848 013e 9A60     		str	r2, [r3, #8]
 849 0140 03E0     		b	.L45
 850              	.L34:
1128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   else
1131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Process unlocked */
1133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_UNLOCK(hadc);
 851              		.loc 1 1133 5
 852 0142 7B68     		ldr	r3, [r7, #4]
 853 0144 0022     		movs	r2, #0
 854 0146 83F82420 		strb	r2, [r3, #36]
 855              	.L45:
1134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return function status */
1137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return tmp_hal_status;
 856              		.loc 1 1137 10
 857 014a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 858              	.L33:
1138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 36


 859              		.loc 1 1138 1
 860 014c 1846     		mov	r0, r3
 861 014e 1037     		adds	r7, r7, #16
 862              	.LCFI25:
 863              		.cfi_def_cfa_offset 8
 864 0150 BD46     		mov	sp, r7
 865              	.LCFI26:
 866              		.cfi_def_cfa_register 13
 867              		@ sp needed
 868 0152 80BD     		pop	{r7, pc}
 869              	.L47:
 870              		.align	2
 871              	.L46:
 872 0154 00280140 		.word	1073817600
 873 0158 00240140 		.word	1073816576
 874              		.cfi_endproc
 875              	.LFE69:
 877              		.section	.text.HAL_ADC_Stop,"ax",%progbits
 878              		.align	1
 879              		.global	HAL_ADC_Stop
 880              		.syntax unified
 881              		.thumb
 882              		.thumb_func
 884              	HAL_ADC_Stop:
 885              	.LFB70:
1139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected channels in 
1142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         case of auto_injection mode), disable ADC peripheral.
1143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note:  ADC peripheral disable is forcing stop of potential 
1144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         conversion on injected group. If injected group is under use, it
1145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         should be preliminarily stopped using HAL_ADCEx_InjectedStop function.
1146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval HAL status.
1148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop(ADC_HandleTypeDef* hadc)
1150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 886              		.loc 1 1150 1
 887              		.cfi_startproc
 888              		@ args = 0, pretend = 0, frame = 16
 889              		@ frame_needed = 1, uses_anonymous_args = 0
 890 0000 80B5     		push	{r7, lr}
 891              	.LCFI27:
 892              		.cfi_def_cfa_offset 8
 893              		.cfi_offset 7, -8
 894              		.cfi_offset 14, -4
 895 0002 84B0     		sub	sp, sp, #16
 896              	.LCFI28:
 897              		.cfi_def_cfa_offset 24
 898 0004 00AF     		add	r7, sp, #0
 899              	.LCFI29:
 900              		.cfi_def_cfa_register 7
 901 0006 7860     		str	r0, [r7, #4]
1151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 902              		.loc 1 1151 21
 903 0008 0023     		movs	r3, #0
 904 000a FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 37


1152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
1154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      
1156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Process locked */
1157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_LOCK(hadc);
 905              		.loc 1 1157 3
 906 000c 7B68     		ldr	r3, [r7, #4]
 907 000e 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 908 0012 012B     		cmp	r3, #1
 909 0014 01D1     		bne	.L49
 910              		.loc 1 1157 3 is_stmt 0 discriminator 1
 911 0016 0223     		movs	r3, #2
 912 0018 1AE0     		b	.L50
 913              	.L49:
 914              		.loc 1 1157 3 discriminator 2
 915 001a 7B68     		ldr	r3, [r7, #4]
 916 001c 0122     		movs	r2, #1
 917 001e 83F82420 		strb	r2, [r3, #36]
1158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
1160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Disable ADC peripheral */
1161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop_Disable(hadc);
 918              		.loc 1 1161 20 is_stmt 1 discriminator 2
 919 0022 7868     		ldr	r0, [r7, #4]
 920 0024 FFF7FEFF 		bl	ADC_ConversionStop_Disable
 921 0028 0346     		mov	r3, r0
 922 002a FB73     		strb	r3, [r7, #15]
1162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check if ADC is effectively disabled */
1164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
 923              		.loc 1 1164 6 discriminator 2
 924 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 925 002e 002B     		cmp	r3, #0
 926 0030 09D1     		bne	.L51
1165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Set ADC state */
1167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 927              		.loc 1 1167 5
 928 0032 7B68     		ldr	r3, [r7, #4]
 929 0034 9B6A     		ldr	r3, [r3, #40]
 930 0036 23F48853 		bic	r3, r3, #4352
 931 003a 23F00103 		bic	r3, r3, #1
 932 003e 43F00102 		orr	r2, r3, #1
 933 0042 7B68     		ldr	r3, [r7, #4]
 934 0044 9A62     		str	r2, [r3, #40]
 935              	.L51:
1168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_READY);
1170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Process unlocked */
1173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 936              		.loc 1 1173 3
 937 0046 7B68     		ldr	r3, [r7, #4]
 938 0048 0022     		movs	r2, #0
 939 004a 83F82420 		strb	r2, [r3, #36]
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 38


1174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return function status */
1176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return tmp_hal_status;
 940              		.loc 1 1176 10
 941 004e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 942              	.L50:
1177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 943              		.loc 1 1177 1
 944 0050 1846     		mov	r0, r3
 945 0052 1037     		adds	r7, r7, #16
 946              	.LCFI30:
 947              		.cfi_def_cfa_offset 8
 948 0054 BD46     		mov	sp, r7
 949              	.LCFI31:
 950              		.cfi_def_cfa_register 13
 951              		@ sp needed
 952 0056 80BD     		pop	{r7, pc}
 953              		.cfi_endproc
 954              	.LFE70:
 956              		.section	.text.HAL_ADC_PollForConversion,"ax",%progbits
 957              		.align	1
 958              		.global	HAL_ADC_PollForConversion
 959              		.syntax unified
 960              		.thumb
 961              		.thumb_func
 963              	HAL_ADC_PollForConversion:
 964              	.LFB71:
1178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Wait for regular group conversion to be completed.
1181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   This function cannot be used in a particular setup: ADC configured 
1182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         in DMA mode.
1183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         In this case, DMA resets the flag EOC and polling cannot be
1184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         performed on each conversion.
1185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   On STM32F1 devices, limitation in case of sequencer enabled
1186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         (several ranks selected): polling cannot be done on each 
1187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         conversion inside the sequence. In this case, polling is replaced by
1188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         wait for maximum conversion time.
1189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  Timeout: Timeout value in millisecond.
1191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval HAL status
1192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef* hadc, uint32_t Timeout)
1194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 965              		.loc 1 1194 1
 966              		.cfi_startproc
 967              		@ args = 0, pretend = 0, frame = 24
 968              		@ frame_needed = 1, uses_anonymous_args = 0
 969 0000 90B5     		push	{r4, r7, lr}
 970              	.LCFI32:
 971              		.cfi_def_cfa_offset 12
 972              		.cfi_offset 4, -12
 973              		.cfi_offset 7, -8
 974              		.cfi_offset 14, -4
 975 0002 87B0     		sub	sp, sp, #28
 976              	.LCFI33:
 977              		.cfi_def_cfa_offset 40
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 39


 978 0004 00AF     		add	r7, sp, #0
 979              	.LCFI34:
 980              		.cfi_def_cfa_register 7
 981 0006 7860     		str	r0, [r7, #4]
 982 0008 3960     		str	r1, [r7]
1195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   uint32_t tickstart = 0U;
 983              		.loc 1 1195 12
 984 000a 0023     		movs	r3, #0
 985 000c 7B61     		str	r3, [r7, #20]
1196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Variables for polling in case of scan mode enabled and polling for each  */
1198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* conversion.                                                              */
1199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __IO uint32_t Conversion_Timeout_CPU_cycles = 0U;
 986              		.loc 1 1199 17
 987 000e 0023     		movs	r3, #0
 988 0010 FB60     		str	r3, [r7, #12]
1200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   uint32_t Conversion_Timeout_CPU_cycles_max = 0U;
 989              		.loc 1 1200 12
 990 0012 0023     		movs	r3, #0
 991 0014 3B61     		str	r3, [r7, #16]
1201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  
1202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
1203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Get tick count */
1206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   tickstart = HAL_GetTick();
 992              		.loc 1 1206 15
 993 0016 FFF7FEFF 		bl	HAL_GetTick
 994 001a 7861     		str	r0, [r7, #20]
1207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Verification that ADC configuration is compliant with polling for        */
1209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* each conversion:                                                         */
1210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Particular case is ADC configured in DMA mode                            */
1211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA))
 995              		.loc 1 1211 7
 996 001c 7B68     		ldr	r3, [r7, #4]
 997 001e 1B68     		ldr	r3, [r3]
 998 0020 9B68     		ldr	r3, [r3, #8]
 999 0022 03F48073 		and	r3, r3, #256
 1000              		.loc 1 1211 6
 1001 0026 002B     		cmp	r3, #0
 1002 0028 0BD0     		beq	.L53
1212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Update ADC state machine to error */
1214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 1003              		.loc 1 1214 5
 1004 002a 7B68     		ldr	r3, [r7, #4]
 1005 002c 9B6A     		ldr	r3, [r3, #40]
 1006 002e 43F02002 		orr	r2, r3, #32
 1007 0032 7B68     		ldr	r3, [r7, #4]
 1008 0034 9A62     		str	r2, [r3, #40]
1215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Process unlocked */
1217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_UNLOCK(hadc);
 1009              		.loc 1 1217 5
 1010 0036 7B68     		ldr	r3, [r7, #4]
 1011 0038 0022     		movs	r2, #0
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 40


 1012 003a 83F82420 		strb	r2, [r3, #36]
1218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     return HAL_ERROR;
 1013              		.loc 1 1219 12
 1014 003e 0123     		movs	r3, #1
 1015 0040 D3E0     		b	.L54
 1016              	.L53:
1220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Polling for end of conversion: differentiation if single/sequence        */
1223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* conversion.                                                              */
1224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*  - If single conversion for regular group (Scan mode disabled or enabled */
1225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*    with NbrOfConversion =1), flag EOC is used to determine the           */
1226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*    conversion completion.                                                */
1227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*  - If sequence conversion for regular group (scan mode enabled and       */
1228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*    NbrOfConversion >=2), flag EOC is set only at the end of the          */
1229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*    sequence.                                                             */
1230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*    To poll for each conversion, the maximum conversion time is computed  */
1231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*    from ADC conversion time (selected sampling time + conversion time of */
1232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*    12.5 ADC clock cycles) and APB2/ADC clock prescalers (depending on    */
1233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*    settings, conversion time range can be from 28 to 32256 CPU cycles).  */
1234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*    As flag EOC is not set after each conversion, no timeout status can   */
1235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*    be set.                                                               */
1236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_SCAN) &&
 1017              		.loc 1 1236 7
 1018 0042 7B68     		ldr	r3, [r7, #4]
 1019 0044 1B68     		ldr	r3, [r3]
 1020 0046 5B68     		ldr	r3, [r3, #4]
 1021 0048 03F48073 		and	r3, r3, #256
 1022              		.loc 1 1236 6
 1023 004c 002B     		cmp	r3, #0
 1024 004e 31D1     		bne	.L55
1237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L)    )
 1025              		.loc 1 1237 7 discriminator 1
 1026 0050 7B68     		ldr	r3, [r7, #4]
 1027 0052 1B68     		ldr	r3, [r3]
 1028 0054 DB6A     		ldr	r3, [r3, #44]
 1029 0056 03F47003 		and	r3, r3, #15728640
1236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L)    )
 1030              		.loc 1 1236 57 discriminator 1
 1031 005a 002B     		cmp	r3, #0
 1032 005c 2AD1     		bne	.L55
1238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Wait until End of Conversion flag is raised */
1240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     while(HAL_IS_BIT_CLR(hadc->Instance->SR, ADC_FLAG_EOC))
 1033              		.loc 1 1240 10
 1034 005e 21E0     		b	.L57
 1035              	.L60:
1241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Check if timeout is disabled (set to infinite wait) */
1243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if(Timeout != HAL_MAX_DELAY)
 1036              		.loc 1 1243 9
 1037 0060 3B68     		ldr	r3, [r7]
 1038 0062 B3F1FF3F 		cmp	r3, #-1
 1039 0066 1DD0     		beq	.L57
1244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 41


 1040              		.loc 1 1245 11
 1041 0068 3B68     		ldr	r3, [r7]
 1042 006a 002B     		cmp	r3, #0
 1043 006c 07D0     		beq	.L58
 1044              		.loc 1 1245 33 discriminator 1
 1045 006e FFF7FEFF 		bl	HAL_GetTick
 1046 0072 0246     		mov	r2, r0
 1047              		.loc 1 1245 47 discriminator 1
 1048 0074 7B69     		ldr	r3, [r7, #20]
 1049 0076 D31A     		subs	r3, r2, r3
 1050              		.loc 1 1245 28 discriminator 1
 1051 0078 3A68     		ldr	r2, [r7]
 1052 007a 9A42     		cmp	r2, r3
 1053 007c 12D2     		bcs	.L57
 1054              	.L58:
1246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         {
1247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           /* New check to avoid false timeout detection in case of preemption */
1248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           if(HAL_IS_BIT_CLR(hadc->Instance->SR, ADC_FLAG_EOC))
 1055              		.loc 1 1248 14
 1056 007e 7B68     		ldr	r3, [r7, #4]
 1057 0080 1B68     		ldr	r3, [r3]
 1058 0082 1B68     		ldr	r3, [r3]
 1059 0084 03F00203 		and	r3, r3, #2
 1060              		.loc 1 1248 13
 1061 0088 002B     		cmp	r3, #0
 1062 008a 0BD1     		bne	.L57
1249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           {
1250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****             /* Update ADC state machine to timeout */
1251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****             SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 1063              		.loc 1 1251 13
 1064 008c 7B68     		ldr	r3, [r7, #4]
 1065 008e 9B6A     		ldr	r3, [r3, #40]
 1066 0090 43F00402 		orr	r2, r3, #4
 1067 0094 7B68     		ldr	r3, [r7, #4]
 1068 0096 9A62     		str	r2, [r3, #40]
1252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****             
1253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****             /* Process unlocked */
1254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****             __HAL_UNLOCK(hadc);
 1069              		.loc 1 1254 13
 1070 0098 7B68     		ldr	r3, [r7, #4]
 1071 009a 0022     		movs	r2, #0
 1072 009c 83F82420 		strb	r2, [r3, #36]
1255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****             
1256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****             return HAL_TIMEOUT;
 1073              		.loc 1 1256 20
 1074 00a0 0323     		movs	r3, #3
 1075 00a2 A2E0     		b	.L54
 1076              	.L57:
1240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1077              		.loc 1 1240 11
 1078 00a4 7B68     		ldr	r3, [r7, #4]
 1079 00a6 1B68     		ldr	r3, [r3]
 1080 00a8 1B68     		ldr	r3, [r3]
 1081 00aa 03F00203 		and	r3, r3, #2
 1082 00ae 002B     		cmp	r3, #0
 1083 00b0 D6D0     		beq	.L60
1236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L)    )
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 42


 1084              		.loc 1 1236 6
 1085 00b2 70E0     		b	.L61
 1086              	.L55:
1257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           }
1258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         }
1259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   else
1263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Replace polling by wait for maximum conversion time */
1265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  - Computation of CPU clock cycles corresponding to ADC clock cycles   */
1266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*    and ADC maximum conversion cycles on all channels.                  */
1267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  - Wait for the expected ADC clock cycles delay                        */
1268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     Conversion_Timeout_CPU_cycles_max = ((SystemCoreClock
1269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                           / HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_ADC))
 1087              		.loc 1 1269 43
 1088 00b4 4F4B     		ldr	r3, .L75
 1089 00b6 1C68     		ldr	r4, [r3]
 1090              		.loc 1 1269 45
 1091 00b8 0220     		movs	r0, #2
 1092 00ba FFF7FEFF 		bl	HAL_RCCEx_GetPeriphCLKFreq
 1093 00be 0346     		mov	r3, r0
 1094              		.loc 1 1269 43
 1095 00c0 B4FBF3F2 		udiv	r2, r4, r3
1270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                          * ADC_CONVCYCLES_MAX_RANGE(hadc)                 );
 1096              		.loc 1 1270 44
 1097 00c4 7B68     		ldr	r3, [r7, #4]
 1098 00c6 1B68     		ldr	r3, [r3]
 1099 00c8 1969     		ldr	r1, [r3, #16]
 1100 00ca 4B4B     		ldr	r3, .L75+4
 1101 00cc 0B40     		ands	r3, r3, r1
 1102 00ce 002B     		cmp	r3, #0
 1103 00d0 18D1     		bne	.L62
 1104              		.loc 1 1270 44 is_stmt 0 discriminator 1
 1105 00d2 7B68     		ldr	r3, [r7, #4]
 1106 00d4 1B68     		ldr	r3, [r3]
 1107 00d6 D968     		ldr	r1, [r3, #12]
 1108 00d8 484B     		ldr	r3, .L75+8
 1109 00da 0B40     		ands	r3, r3, r1
 1110 00dc 002B     		cmp	r3, #0
 1111 00de 11D1     		bne	.L62
 1112              		.loc 1 1270 44 discriminator 3
 1113 00e0 7B68     		ldr	r3, [r7, #4]
 1114 00e2 1B68     		ldr	r3, [r3]
 1115 00e4 1969     		ldr	r1, [r3, #16]
 1116 00e6 464B     		ldr	r3, .L75+12
 1117 00e8 0B40     		ands	r3, r3, r1
 1118 00ea 002B     		cmp	r3, #0
 1119 00ec 08D1     		bne	.L63
 1120              		.loc 1 1270 44 discriminator 5
 1121 00ee 7B68     		ldr	r3, [r7, #4]
 1122 00f0 1B68     		ldr	r3, [r3]
 1123 00f2 D968     		ldr	r1, [r3, #12]
 1124 00f4 434B     		ldr	r3, .L75+16
 1125 00f6 0B40     		ands	r3, r3, r1
 1126 00f8 002B     		cmp	r3, #0
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 43


 1127 00fa 01D1     		bne	.L63
 1128              		.loc 1 1270 44 discriminator 7
 1129 00fc 1423     		movs	r3, #20
 1130 00fe 20E0     		b	.L65
 1131              	.L63:
 1132              		.loc 1 1270 44 discriminator 8
 1133 0100 2923     		movs	r3, #41
 1134 0102 1EE0     		b	.L65
 1135              	.L62:
 1136              		.loc 1 1270 44 discriminator 4
 1137 0104 7B68     		ldr	r3, [r7, #4]
 1138 0106 1B68     		ldr	r3, [r3]
 1139 0108 1969     		ldr	r1, [r3, #16]
 1140 010a 3D4B     		ldr	r3, .L75+12
 1141 010c 0B40     		ands	r3, r3, r1
 1142 010e 002B     		cmp	r3, #0
 1143 0110 06D1     		bne	.L66
 1144              		.loc 1 1270 44 discriminator 11
 1145 0112 7B68     		ldr	r3, [r7, #4]
 1146 0114 1B68     		ldr	r3, [r3]
 1147 0116 D968     		ldr	r1, [r3, #12]
 1148 0118 3A4B     		ldr	r3, .L75+16
 1149 011a 0B40     		ands	r3, r3, r1
 1150 011c 002B     		cmp	r3, #0
 1151 011e 0DD0     		beq	.L67
 1152              	.L66:
 1153              		.loc 1 1270 44 discriminator 14
 1154 0120 7B68     		ldr	r3, [r7, #4]
 1155 0122 1B68     		ldr	r3, [r3]
 1156 0124 1969     		ldr	r1, [r3, #16]
 1157 0126 384B     		ldr	r3, .L75+20
 1158 0128 0B40     		ands	r3, r3, r1
 1159 012a 002B     		cmp	r3, #0
 1160 012c 08D1     		bne	.L68
 1161              		.loc 1 1270 44 discriminator 15
 1162 012e 7B68     		ldr	r3, [r7, #4]
 1163 0130 1B68     		ldr	r3, [r3]
 1164 0132 D968     		ldr	r1, [r3, #12]
 1165 0134 344B     		ldr	r3, .L75+20
 1166 0136 0B40     		ands	r3, r3, r1
 1167 0138 002B     		cmp	r3, #0
 1168 013a 01D1     		bne	.L68
 1169              	.L67:
 1170              		.loc 1 1270 44 discriminator 17
 1171 013c 5423     		movs	r3, #84
 1172 013e 00E0     		b	.L65
 1173              	.L68:
 1174              		.loc 1 1270 44 discriminator 18
 1175 0140 FC23     		movs	r3, #252
 1176              	.L65:
1268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                           / HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_ADC))
 1177              		.loc 1 1268 39 is_stmt 1
 1178 0142 02FB03F3 		mul	r3, r2, r3
 1179 0146 3B61     		str	r3, [r7, #16]
1271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     while(Conversion_Timeout_CPU_cycles < Conversion_Timeout_CPU_cycles_max)
 1180              		.loc 1 1272 10
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 44


 1181 0148 21E0     		b	.L70
 1182              	.L73:
1273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Check if timeout is disabled (set to infinite wait) */
1275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if(Timeout != HAL_MAX_DELAY)
 1183              		.loc 1 1275 9
 1184 014a 3B68     		ldr	r3, [r7]
 1185 014c B3F1FF3F 		cmp	r3, #-1
 1186 0150 1AD0     		beq	.L71
1276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         if((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 1187              		.loc 1 1277 11
 1188 0152 3B68     		ldr	r3, [r7]
 1189 0154 002B     		cmp	r3, #0
 1190 0156 07D0     		beq	.L72
 1191              		.loc 1 1277 33 discriminator 1
 1192 0158 FFF7FEFF 		bl	HAL_GetTick
 1193 015c 0246     		mov	r2, r0
 1194              		.loc 1 1277 47 discriminator 1
 1195 015e 7B69     		ldr	r3, [r7, #20]
 1196 0160 D31A     		subs	r3, r2, r3
 1197              		.loc 1 1277 28 discriminator 1
 1198 0162 3A68     		ldr	r2, [r7]
 1199 0164 9A42     		cmp	r2, r3
 1200 0166 0FD2     		bcs	.L71
 1201              	.L72:
1278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         {
1279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           /* New check to avoid false timeout detection in case of preemption */
1280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           if(Conversion_Timeout_CPU_cycles < Conversion_Timeout_CPU_cycles_max)
 1202              		.loc 1 1280 44
 1203 0168 FB68     		ldr	r3, [r7, #12]
 1204              		.loc 1 1280 13
 1205 016a 3A69     		ldr	r2, [r7, #16]
 1206 016c 9A42     		cmp	r2, r3
 1207 016e 0BD9     		bls	.L71
1281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           {
1282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****             /* Update ADC state machine to timeout */
1283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****             SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 1208              		.loc 1 1283 13
 1209 0170 7B68     		ldr	r3, [r7, #4]
 1210 0172 9B6A     		ldr	r3, [r3, #40]
 1211 0174 43F00402 		orr	r2, r3, #4
 1212 0178 7B68     		ldr	r3, [r7, #4]
 1213 017a 9A62     		str	r2, [r3, #40]
1284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****             /* Process unlocked */
1286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****             __HAL_UNLOCK(hadc);
 1214              		.loc 1 1286 13
 1215 017c 7B68     		ldr	r3, [r7, #4]
 1216 017e 0022     		movs	r2, #0
 1217 0180 83F82420 		strb	r2, [r3, #36]
1287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****             return HAL_TIMEOUT;
 1218              		.loc 1 1288 20
 1219 0184 0323     		movs	r3, #3
 1220 0186 30E0     		b	.L54
 1221              	.L71:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 45


1289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           }
1290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         }
1291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       Conversion_Timeout_CPU_cycles ++;
 1222              		.loc 1 1292 37
 1223 0188 FB68     		ldr	r3, [r7, #12]
 1224 018a 0133     		adds	r3, r3, #1
 1225 018c FB60     		str	r3, [r7, #12]
 1226              	.L70:
1272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1227              		.loc 1 1272 41
 1228 018e FB68     		ldr	r3, [r7, #12]
 1229 0190 3A69     		ldr	r2, [r7, #16]
 1230 0192 9A42     		cmp	r2, r3
 1231 0194 D9D8     		bhi	.L73
 1232              	.L61:
1293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Clear regular group conversion flag */
1297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
 1233              		.loc 1 1297 3
 1234 0196 7B68     		ldr	r3, [r7, #4]
 1235 0198 1B68     		ldr	r3, [r3]
 1236 019a 6FF01202 		mvn	r2, #18
 1237 019e 1A60     		str	r2, [r3]
1298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Update ADC state machine */
1300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 1238              		.loc 1 1300 3
 1239 01a0 7B68     		ldr	r3, [r7, #4]
 1240 01a2 9B6A     		ldr	r3, [r3, #40]
 1241 01a4 43F40072 		orr	r2, r3, #512
 1242 01a8 7B68     		ldr	r3, [r7, #4]
 1243 01aa 9A62     		str	r2, [r3, #40]
1301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Determine whether any further conversion upcoming on group regular       */
1303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* by external trigger, continuous mode or scan sequence on going.          */
1304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Note: On STM32F1 devices, in case of sequencer enabled                   */
1305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*       (several ranks selected), end of conversion flag is raised         */
1306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*       at the end of the sequence.                                        */
1307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if(ADC_IS_SOFTWARE_START_REGULAR(hadc)        && 
 1244              		.loc 1 1307 6
 1245 01ac 7B68     		ldr	r3, [r7, #4]
 1246 01ae 1B68     		ldr	r3, [r3]
 1247 01b0 9B68     		ldr	r3, [r3, #8]
 1248 01b2 03F46023 		and	r3, r3, #917504
 1249              		.loc 1 1307 5
 1250 01b6 B3F5602F 		cmp	r3, #917504
 1251 01ba 15D1     		bne	.L74
1308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      (hadc->Init.ContinuousConvMode == DISABLE)   )
 1252              		.loc 1 1308 17 discriminator 1
 1253 01bc 7B68     		ldr	r3, [r7, #4]
 1254 01be 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
1307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      (hadc->Init.ContinuousConvMode == DISABLE)   )
 1255              		.loc 1 1307 49 discriminator 1
 1256 01c0 002B     		cmp	r3, #0
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 46


 1257 01c2 11D1     		bne	.L74
1309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {   
1310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Set ADC state */
1311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
 1258              		.loc 1 1311 5
 1259 01c4 7B68     		ldr	r3, [r7, #4]
 1260 01c6 9B6A     		ldr	r3, [r3, #40]
 1261 01c8 23F48072 		bic	r2, r3, #256
 1262 01cc 7B68     		ldr	r3, [r7, #4]
 1263 01ce 9A62     		str	r2, [r3, #40]
1312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 1264              		.loc 1 1313 9
 1265 01d0 7B68     		ldr	r3, [r7, #4]
 1266 01d2 9B6A     		ldr	r3, [r3, #40]
 1267 01d4 03F48053 		and	r3, r3, #4096
 1268              		.loc 1 1313 8
 1269 01d8 002B     		cmp	r3, #0
 1270 01da 05D1     		bne	.L74
1314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     { 
1315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 1271              		.loc 1 1315 7
 1272 01dc 7B68     		ldr	r3, [r7, #4]
 1273 01de 9B6A     		ldr	r3, [r3, #40]
 1274 01e0 43F00102 		orr	r2, r3, #1
 1275 01e4 7B68     		ldr	r3, [r7, #4]
 1276 01e6 9A62     		str	r2, [r3, #40]
 1277              	.L74:
1316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return ADC state */
1320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return HAL_OK;
 1278              		.loc 1 1320 10
 1279 01e8 0023     		movs	r3, #0
 1280              	.L54:
1321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 1281              		.loc 1 1321 1
 1282 01ea 1846     		mov	r0, r3
 1283 01ec 1C37     		adds	r7, r7, #28
 1284              	.LCFI35:
 1285              		.cfi_def_cfa_offset 12
 1286 01ee BD46     		mov	sp, r7
 1287              	.LCFI36:
 1288              		.cfi_def_cfa_register 13
 1289              		@ sp needed
 1290 01f0 90BD     		pop	{r4, r7, pc}
 1291              	.L76:
 1292 01f2 00BF     		.align	2
 1293              	.L75:
 1294 01f4 00000000 		.word	SystemCoreClock
 1295 01f8 24499224 		.word	613566756
 1296 01fc 24499200 		.word	9586980
 1297 0200 92244912 		.word	306783378
 1298 0204 92244900 		.word	4793490
 1299 0208 49922400 		.word	2396745
 1300              		.cfi_endproc
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 47


 1301              	.LFE71:
 1303              		.section	.text.HAL_ADC_PollForEvent,"ax",%progbits
 1304              		.align	1
 1305              		.global	HAL_ADC_PollForEvent
 1306              		.syntax unified
 1307              		.thumb
 1308              		.thumb_func
 1310              	HAL_ADC_PollForEvent:
 1311              	.LFB72:
1322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Poll for conversion event.
1325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  EventType: the ADC event type.
1327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          This parameter can be one of the following values:
1328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *            @arg ADC_AWD_EVENT: ADC Analog watchdog event.
1329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  Timeout: Timeout value in millisecond.
1330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval HAL status
1331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForEvent(ADC_HandleTypeDef* hadc, uint32_t EventType, uint32_t Timeou
1333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 1312              		.loc 1 1333 1
 1313              		.cfi_startproc
 1314              		@ args = 0, pretend = 0, frame = 24
 1315              		@ frame_needed = 1, uses_anonymous_args = 0
 1316 0000 80B5     		push	{r7, lr}
 1317              	.LCFI37:
 1318              		.cfi_def_cfa_offset 8
 1319              		.cfi_offset 7, -8
 1320              		.cfi_offset 14, -4
 1321 0002 86B0     		sub	sp, sp, #24
 1322              	.LCFI38:
 1323              		.cfi_def_cfa_offset 32
 1324 0004 00AF     		add	r7, sp, #0
 1325              	.LCFI39:
 1326              		.cfi_def_cfa_register 7
 1327 0006 F860     		str	r0, [r7, #12]
 1328 0008 B960     		str	r1, [r7, #8]
 1329 000a 7A60     		str	r2, [r7, #4]
1334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   uint32_t tickstart = 0U; 
 1330              		.loc 1 1334 12
 1331 000c 0023     		movs	r3, #0
 1332 000e 7B61     		str	r3, [r7, #20]
1335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
1337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_EVENT_TYPE(EventType));
1339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Get tick count */
1341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   tickstart = HAL_GetTick();
 1333              		.loc 1 1341 15
 1334 0010 FFF7FEFF 		bl	HAL_GetTick
 1335 0014 7861     		str	r0, [r7, #20]
1342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check selected event flag */
1344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   while(__HAL_ADC_GET_FLAG(hadc, EventType) == RESET)
 1336              		.loc 1 1344 8
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 48


 1337 0016 22E0     		b	.L79
 1338              	.L83:
1345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
1347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if(Timeout != HAL_MAX_DELAY)
 1339              		.loc 1 1347 7
 1340 0018 7B68     		ldr	r3, [r7, #4]
 1341 001a B3F1FF3F 		cmp	r3, #-1
 1342 001e 1ED0     		beq	.L79
1348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 1343              		.loc 1 1349 9
 1344 0020 7B68     		ldr	r3, [r7, #4]
 1345 0022 002B     		cmp	r3, #0
 1346 0024 07D0     		beq	.L80
 1347              		.loc 1 1349 31 discriminator 1
 1348 0026 FFF7FEFF 		bl	HAL_GetTick
 1349 002a 0246     		mov	r2, r0
 1350              		.loc 1 1349 45 discriminator 1
 1351 002c 7B69     		ldr	r3, [r7, #20]
 1352 002e D31A     		subs	r3, r2, r3
 1353              		.loc 1 1349 26 discriminator 1
 1354 0030 7A68     		ldr	r2, [r7, #4]
 1355 0032 9A42     		cmp	r2, r3
 1356 0034 13D2     		bcs	.L79
 1357              	.L80:
1350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
1352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         if(__HAL_ADC_GET_FLAG(hadc, EventType) == RESET)
 1358              		.loc 1 1352 12
 1359 0036 FB68     		ldr	r3, [r7, #12]
 1360 0038 1B68     		ldr	r3, [r3]
 1361 003a 1A68     		ldr	r2, [r3]
 1362 003c BB68     		ldr	r3, [r7, #8]
 1363 003e 1340     		ands	r3, r3, r2
 1364              		.loc 1 1352 11
 1365 0040 BA68     		ldr	r2, [r7, #8]
 1366 0042 9A42     		cmp	r2, r3
 1367 0044 0BD0     		beq	.L79
1353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         {
1354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           /* Update ADC state machine to timeout */
1355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 1368              		.loc 1 1355 11
 1369 0046 FB68     		ldr	r3, [r7, #12]
 1370 0048 9B6A     		ldr	r3, [r3, #40]
 1371 004a 43F00402 		orr	r2, r3, #4
 1372 004e FB68     		ldr	r3, [r7, #12]
 1373 0050 9A62     		str	r2, [r3, #40]
1356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           /* Process unlocked */
1358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           __HAL_UNLOCK(hadc);
 1374              		.loc 1 1358 11
 1375 0052 FB68     		ldr	r3, [r7, #12]
 1376 0054 0022     		movs	r2, #0
 1377 0056 83F82420 		strb	r2, [r3, #36]
1359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           return HAL_TIMEOUT;
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 49


 1378              		.loc 1 1360 18
 1379 005a 0323     		movs	r3, #3
 1380 005c 13E0     		b	.L82
 1381              	.L79:
1344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 1382              		.loc 1 1344 9
 1383 005e FB68     		ldr	r3, [r7, #12]
 1384 0060 1B68     		ldr	r3, [r3]
 1385 0062 1A68     		ldr	r2, [r3]
 1386 0064 BB68     		ldr	r3, [r7, #8]
 1387 0066 1340     		ands	r3, r3, r2
1344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 1388              		.loc 1 1344 45
 1389 0068 BA68     		ldr	r2, [r7, #8]
 1390 006a 9A42     		cmp	r2, r3
 1391 006c D4D1     		bne	.L83
1361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         }
1362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Analog watchdog (level out of window) event */
1367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Set ADC state */
1368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
 1392              		.loc 1 1368 3
 1393 006e FB68     		ldr	r3, [r7, #12]
 1394 0070 9B6A     		ldr	r3, [r3, #40]
 1395 0072 43F48032 		orr	r2, r3, #65536
 1396 0076 FB68     		ldr	r3, [r7, #12]
 1397 0078 9A62     		str	r2, [r3, #40]
1369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Clear ADC analog watchdog flag */
1371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD);
 1398              		.loc 1 1371 3
 1399 007a FB68     		ldr	r3, [r7, #12]
 1400 007c 1B68     		ldr	r3, [r3]
 1401 007e 6FF00102 		mvn	r2, #1
 1402 0082 1A60     		str	r2, [r3]
1372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return ADC state */
1374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return HAL_OK;
 1403              		.loc 1 1374 10
 1404 0084 0023     		movs	r3, #0
 1405              	.L82:
1375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 1406              		.loc 1 1375 1
 1407 0086 1846     		mov	r0, r3
 1408 0088 1837     		adds	r7, r7, #24
 1409              	.LCFI40:
 1410              		.cfi_def_cfa_offset 8
 1411 008a BD46     		mov	sp, r7
 1412              	.LCFI41:
 1413              		.cfi_def_cfa_register 13
 1414              		@ sp needed
 1415 008c 80BD     		pop	{r7, pc}
 1416              		.cfi_endproc
 1417              	.LFE72:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 50


 1419              		.section	.text.HAL_ADC_Start_IT,"ax",%progbits
 1420              		.align	1
 1421              		.global	HAL_ADC_Start_IT
 1422              		.syntax unified
 1423              		.thumb
 1424              		.thumb_func
 1426              	HAL_ADC_Start_IT:
 1427              	.LFB73:
1376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Enables ADC, starts conversion of regular group with interruption.
1379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         Interruptions enabled in this function:
1380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          - EOC (end of conversion of regular group)
1381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
1382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval HAL status
1384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_IT(ADC_HandleTypeDef* hadc)
1386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 1428              		.loc 1 1386 1
 1429              		.cfi_startproc
 1430              		@ args = 0, pretend = 0, frame = 16
 1431              		@ frame_needed = 1, uses_anonymous_args = 0
 1432 0000 80B5     		push	{r7, lr}
 1433              	.LCFI42:
 1434              		.cfi_def_cfa_offset 8
 1435              		.cfi_offset 7, -8
 1436              		.cfi_offset 14, -4
 1437 0002 84B0     		sub	sp, sp, #16
 1438              	.LCFI43:
 1439              		.cfi_def_cfa_offset 24
 1440 0004 00AF     		add	r7, sp, #0
 1441              	.LCFI44:
 1442              		.cfi_def_cfa_register 7
 1443 0006 7860     		str	r0, [r7, #4]
1387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1444              		.loc 1 1387 21
 1445 0008 0023     		movs	r3, #0
 1446 000a FB73     		strb	r3, [r7, #15]
1388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
1390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Process locked */
1393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_LOCK(hadc);
 1447              		.loc 1 1393 3
 1448 000c 7B68     		ldr	r3, [r7, #4]
 1449 000e 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 1450 0012 012B     		cmp	r3, #1
 1451 0014 01D1     		bne	.L85
 1452              		.loc 1 1393 3 is_stmt 0 discriminator 1
 1453 0016 0223     		movs	r3, #2
 1454 0018 A0E0     		b	.L86
 1455              	.L85:
 1456              		.loc 1 1393 3 discriminator 2
 1457 001a 7B68     		ldr	r3, [r7, #4]
 1458 001c 0122     		movs	r2, #1
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 51


 1459 001e 83F82420 		strb	r2, [r3, #36]
1394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Enable the ADC peripheral */
1396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   tmp_hal_status = ADC_Enable(hadc);
 1460              		.loc 1 1396 20 is_stmt 1 discriminator 2
 1461 0022 7868     		ldr	r0, [r7, #4]
 1462 0024 FFF7FEFF 		bl	ADC_Enable
 1463 0028 0346     		mov	r3, r0
 1464 002a FB73     		strb	r3, [r7, #15]
1397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Start conversion if ADC is effectively enabled */
1399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
 1465              		.loc 1 1399 6 discriminator 2
 1466 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1467 002e 002B     		cmp	r3, #0
 1468 0030 40F08F80 		bne	.L87
1400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Set ADC state                                                          */
1402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* - Clear state bitfield related to regular group conversion results     */
1403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* - Set state bitfield related to regular operation                      */
1404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 1469              		.loc 1 1404 5
 1470 0034 7B68     		ldr	r3, [r7, #4]
 1471 0036 9B6A     		ldr	r3, [r3, #40]
 1472 0038 23F47063 		bic	r3, r3, #3840
 1473 003c 23F00103 		bic	r3, r3, #1
 1474 0040 43F48072 		orr	r2, r3, #256
 1475 0044 7B68     		ldr	r3, [r7, #4]
 1476 0046 9A62     		str	r2, [r3, #40]
1405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_ADC
1406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY);
1407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Set group injected state (from auto-injection) and multimode state     */
1409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* for all cases of multimode: independent mode, multimode ADC master     */
1410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* or multimode ADC slave (for devices with several ADCs):                */
1411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc))
 1477              		.loc 1 1411 9
 1478 0048 7B68     		ldr	r3, [r7, #4]
 1479 004a 1B68     		ldr	r3, [r3]
 1480              		.loc 1 1411 8
 1481 004c 454A     		ldr	r2, .L99
 1482 004e 9342     		cmp	r3, r2
 1483 0050 05D1     		bne	.L88
 1484              		.loc 1 1411 9 discriminator 1
 1485 0052 454B     		ldr	r3, .L99+4
 1486 0054 5B68     		ldr	r3, [r3, #4]
 1487 0056 03F47023 		and	r3, r3, #983040
 1488 005a 002B     		cmp	r3, #0
 1489 005c 15D1     		bne	.L89
 1490              	.L88:
1412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set ADC state (ADC independent or master) */
1414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 1491              		.loc 1 1414 7
 1492 005e 7B68     		ldr	r3, [r7, #4]
 1493 0060 9B6A     		ldr	r3, [r3, #40]
 1494 0062 23F48012 		bic	r2, r3, #1048576
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 52


 1495 0066 7B68     		ldr	r3, [r7, #4]
 1496 0068 9A62     		str	r2, [r3, #40]
1415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* If conversions on group regular are also triggering group injected,  */
1417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* update ADC state.                                                    */
1418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 1497              		.loc 1 1418 11
 1498 006a 7B68     		ldr	r3, [r7, #4]
 1499 006c 1B68     		ldr	r3, [r3]
 1500 006e 5B68     		ldr	r3, [r3, #4]
 1501 0070 03F48063 		and	r3, r3, #1024
 1502              		.loc 1 1418 10
 1503 0074 002B     		cmp	r3, #0
 1504 0076 26D0     		beq	.L91
1419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 1505              		.loc 1 1420 9
 1506 0078 7B68     		ldr	r3, [r7, #4]
 1507 007a 9B6A     		ldr	r3, [r3, #40]
 1508 007c 23F44053 		bic	r3, r3, #12288
 1509 0080 43F48052 		orr	r2, r3, #4096
 1510 0084 7B68     		ldr	r3, [r7, #4]
 1511 0086 9A62     		str	r2, [r3, #40]
1418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 1512              		.loc 1 1418 10
 1513 0088 1DE0     		b	.L91
 1514              	.L89:
1421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     else
1424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set ADC state (ADC slave) */
1426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 1515              		.loc 1 1426 7
 1516 008a 7B68     		ldr	r3, [r7, #4]
 1517 008c 9B6A     		ldr	r3, [r3, #40]
 1518 008e 43F48012 		orr	r2, r3, #1048576
 1519 0092 7B68     		ldr	r3, [r7, #4]
 1520 0094 9A62     		str	r2, [r3, #40]
1427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* If conversions on group regular are also triggering group injected,  */
1429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* update ADC state.                                                    */
1430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if (ADC_MULTIMODE_AUTO_INJECTED(hadc))
 1521              		.loc 1 1430 11
 1522 0096 7B68     		ldr	r3, [r7, #4]
 1523 0098 1B68     		ldr	r3, [r3]
 1524              		.loc 1 1430 10
 1525 009a 334A     		ldr	r2, .L99+4
 1526 009c 9342     		cmp	r3, r2
 1527 009e 04D0     		beq	.L92
 1528              		.loc 1 1430 11 discriminator 2
 1529 00a0 7B68     		ldr	r3, [r7, #4]
 1530 00a2 1B68     		ldr	r3, [r3]
 1531 00a4 2F4A     		ldr	r2, .L99
 1532 00a6 9342     		cmp	r3, r2
 1533 00a8 0DD1     		bne	.L91
 1534              	.L92:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 53


 1535              		.loc 1 1430 11 is_stmt 0 discriminator 3
 1536 00aa 2F4B     		ldr	r3, .L99+4
 1537 00ac 5B68     		ldr	r3, [r3, #4]
 1538 00ae 03F48063 		and	r3, r3, #1024
 1539 00b2 002B     		cmp	r3, #0
 1540 00b4 07D0     		beq	.L91
1431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
 1541              		.loc 1 1432 9 is_stmt 1
 1542 00b6 7B68     		ldr	r3, [r7, #4]
 1543 00b8 9B6A     		ldr	r3, [r3, #40]
 1544 00ba 23F44053 		bic	r3, r3, #12288
 1545 00be 43F48052 		orr	r2, r3, #4096
 1546 00c2 7B68     		ldr	r3, [r7, #4]
 1547 00c4 9A62     		str	r2, [r3, #40]
 1548              	.L91:
1433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* State machine update: Check if an injected conversion is ongoing */
1437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 1549              		.loc 1 1437 9
 1550 00c6 7B68     		ldr	r3, [r7, #4]
 1551 00c8 9B6A     		ldr	r3, [r3, #40]
 1552 00ca 03F48053 		and	r3, r3, #4096
 1553              		.loc 1 1437 8
 1554 00ce 002B     		cmp	r3, #0
 1555 00d0 06D0     		beq	.L93
1438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Reset ADC error code fields related to conversions on group regular */
1440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 1556              		.loc 1 1440 7
 1557 00d2 7B68     		ldr	r3, [r7, #4]
 1558 00d4 DB6A     		ldr	r3, [r3, #44]
 1559 00d6 23F00602 		bic	r2, r3, #6
 1560 00da 7B68     		ldr	r3, [r7, #4]
 1561 00dc DA62     		str	r2, [r3, #44]
 1562 00de 02E0     		b	.L94
 1563              	.L93:
1441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     else
1443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Reset ADC all error code fields */
1445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
 1564              		.loc 1 1445 7
 1565 00e0 7B68     		ldr	r3, [r7, #4]
 1566 00e2 0022     		movs	r2, #0
 1567 00e4 DA62     		str	r2, [r3, #44]
 1568              	.L94:
1446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Process unlocked */
1449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Unlock before starting ADC conversions: in case of potential           */
1450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
1451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_UNLOCK(hadc);
 1569              		.loc 1 1451 5
 1570 00e6 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 54


 1571 00e8 0022     		movs	r2, #0
 1572 00ea 83F82420 		strb	r2, [r3, #36]
1452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Clear regular group conversion flag and overrun flag */
1454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
1455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC);
 1573              		.loc 1 1455 5
 1574 00ee 7B68     		ldr	r3, [r7, #4]
 1575 00f0 1B68     		ldr	r3, [r3]
 1576 00f2 6FF00202 		mvn	r2, #2
 1577 00f6 1A60     		str	r2, [r3]
1456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Enable end of conversion interrupt for regular group */
1458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOC);
 1578              		.loc 1 1458 5
 1579 00f8 7B68     		ldr	r3, [r7, #4]
 1580 00fa 1B68     		ldr	r3, [r3]
 1581 00fc 5A68     		ldr	r2, [r3, #4]
 1582 00fe 7B68     		ldr	r3, [r7, #4]
 1583 0100 1B68     		ldr	r3, [r3]
 1584 0102 42F02002 		orr	r2, r2, #32
 1585 0106 5A60     		str	r2, [r3, #4]
1459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Enable conversion of regular group.                                    */
1461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* If software start has been selected, conversion starts immediately.    */
1462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* If external trigger has been selected, conversion will start at next   */
1463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* trigger event.                                                         */
1464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Case of multimode enabled:                                             */ 
1465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  - if ADC is slave, ADC is enabled only (conversion is not started).   */
1466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  - if ADC is master, ADC is enabled and conversion is started.         */
1467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (ADC_IS_SOFTWARE_START_REGULAR(hadc)      &&
 1586              		.loc 1 1467 9
 1587 0108 7B68     		ldr	r3, [r7, #4]
 1588 010a 1B68     		ldr	r3, [r3]
 1589 010c 9B68     		ldr	r3, [r3, #8]
 1590 010e 03F46023 		and	r3, r3, #917504
 1591              		.loc 1 1467 8
 1592 0112 B3F5602F 		cmp	r3, #917504
 1593 0116 13D1     		bne	.L95
1468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc)  )
 1594              		.loc 1 1468 9 discriminator 1
 1595 0118 7B68     		ldr	r3, [r7, #4]
 1596 011a 1B68     		ldr	r3, [r3]
1467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc)  )
 1597              		.loc 1 1467 50 discriminator 1
 1598 011c 114A     		ldr	r2, .L99
 1599 011e 9342     		cmp	r3, r2
 1600 0120 05D1     		bne	.L96
 1601              		.loc 1 1468 9 discriminator 2
 1602 0122 114B     		ldr	r3, .L99+4
 1603 0124 5B68     		ldr	r3, [r3, #4]
 1604 0126 03F47023 		and	r3, r3, #983040
1467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc)  )
 1605              		.loc 1 1467 50 discriminator 2
 1606 012a 002B     		cmp	r3, #0
 1607 012c 08D1     		bne	.L95
 1608              	.L96:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 55


1469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Start ADC conversion on regular group with SW start */
1471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       SET_BIT(hadc->Instance->CR2, (ADC_CR2_SWSTART | ADC_CR2_EXTTRIG));
 1609              		.loc 1 1471 7
 1610 012e 7B68     		ldr	r3, [r7, #4]
 1611 0130 1B68     		ldr	r3, [r3]
 1612 0132 9A68     		ldr	r2, [r3, #8]
 1613 0134 7B68     		ldr	r3, [r7, #4]
 1614 0136 1B68     		ldr	r3, [r3]
 1615 0138 42F4A002 		orr	r2, r2, #5242880
 1616 013c 9A60     		str	r2, [r3, #8]
 1617 013e 0CE0     		b	.L98
 1618              	.L95:
1472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     else
1474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Start ADC conversion on regular group with external trigger */
1476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       SET_BIT(hadc->Instance->CR2, ADC_CR2_EXTTRIG);
 1619              		.loc 1 1476 7
 1620 0140 7B68     		ldr	r3, [r7, #4]
 1621 0142 1B68     		ldr	r3, [r3]
 1622 0144 9A68     		ldr	r2, [r3, #8]
 1623 0146 7B68     		ldr	r3, [r7, #4]
 1624 0148 1B68     		ldr	r3, [r3]
 1625 014a 42F48012 		orr	r2, r2, #1048576
 1626 014e 9A60     		str	r2, [r3, #8]
 1627 0150 03E0     		b	.L98
 1628              	.L87:
1477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   else
1480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Process unlocked */
1482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_UNLOCK(hadc);
 1629              		.loc 1 1482 5
 1630 0152 7B68     		ldr	r3, [r7, #4]
 1631 0154 0022     		movs	r2, #0
 1632 0156 83F82420 		strb	r2, [r3, #36]
 1633              	.L98:
1483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return function status */
1486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return tmp_hal_status;
 1634              		.loc 1 1486 10
 1635 015a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1636              	.L86:
1487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 1637              		.loc 1 1487 1
 1638 015c 1846     		mov	r0, r3
 1639 015e 1037     		adds	r7, r7, #16
 1640              	.LCFI45:
 1641              		.cfi_def_cfa_offset 8
 1642 0160 BD46     		mov	sp, r7
 1643              	.LCFI46:
 1644              		.cfi_def_cfa_register 13
 1645              		@ sp needed
 1646 0162 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 56


 1647              	.L100:
 1648              		.align	2
 1649              	.L99:
 1650 0164 00280140 		.word	1073817600
 1651 0168 00240140 		.word	1073816576
 1652              		.cfi_endproc
 1653              	.LFE73:
 1655              		.section	.text.HAL_ADC_Stop_IT,"ax",%progbits
 1656              		.align	1
 1657              		.global	HAL_ADC_Stop_IT
 1658              		.syntax unified
 1659              		.thumb
 1660              		.thumb_func
 1662              	HAL_ADC_Stop_IT:
 1663              	.LFB74:
1488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected group in 
1491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         case of auto_injection mode), disable interrution of 
1492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         end-of-conversion, disable ADC peripheral.
1493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval None
1495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_IT(ADC_HandleTypeDef* hadc)
1497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 1664              		.loc 1 1497 1
 1665              		.cfi_startproc
 1666              		@ args = 0, pretend = 0, frame = 16
 1667              		@ frame_needed = 1, uses_anonymous_args = 0
 1668 0000 80B5     		push	{r7, lr}
 1669              	.LCFI47:
 1670              		.cfi_def_cfa_offset 8
 1671              		.cfi_offset 7, -8
 1672              		.cfi_offset 14, -4
 1673 0002 84B0     		sub	sp, sp, #16
 1674              	.LCFI48:
 1675              		.cfi_def_cfa_offset 24
 1676 0004 00AF     		add	r7, sp, #0
 1677              	.LCFI49:
 1678              		.cfi_def_cfa_register 7
 1679 0006 7860     		str	r0, [r7, #4]
1498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1680              		.loc 1 1498 21
 1681 0008 0023     		movs	r3, #0
 1682 000a FB73     		strb	r3, [r7, #15]
1499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
1501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      
1503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Process locked */
1504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_LOCK(hadc);
 1683              		.loc 1 1504 3
 1684 000c 7B68     		ldr	r3, [r7, #4]
 1685 000e 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 1686 0012 012B     		cmp	r3, #1
 1687 0014 01D1     		bne	.L102
 1688              		.loc 1 1504 3 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 57


 1689 0016 0223     		movs	r3, #2
 1690 0018 22E0     		b	.L103
 1691              	.L102:
 1692              		.loc 1 1504 3 discriminator 2
 1693 001a 7B68     		ldr	r3, [r7, #4]
 1694 001c 0122     		movs	r2, #1
 1695 001e 83F82420 		strb	r2, [r3, #36]
1505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
1507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Disable ADC peripheral */
1508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop_Disable(hadc);
 1696              		.loc 1 1508 20 is_stmt 1 discriminator 2
 1697 0022 7868     		ldr	r0, [r7, #4]
 1698 0024 FFF7FEFF 		bl	ADC_ConversionStop_Disable
 1699 0028 0346     		mov	r3, r0
 1700 002a FB73     		strb	r3, [r7, #15]
1509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check if ADC is effectively disabled */
1511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
 1701              		.loc 1 1511 6 discriminator 2
 1702 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1703 002e 002B     		cmp	r3, #0
 1704 0030 11D1     		bne	.L104
1512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Disable ADC end of conversion interrupt for regular group */
1514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
 1705              		.loc 1 1514 5
 1706 0032 7B68     		ldr	r3, [r7, #4]
 1707 0034 1B68     		ldr	r3, [r3]
 1708 0036 5A68     		ldr	r2, [r3, #4]
 1709 0038 7B68     		ldr	r3, [r7, #4]
 1710 003a 1B68     		ldr	r3, [r3]
 1711 003c 22F02002 		bic	r2, r2, #32
 1712 0040 5A60     		str	r2, [r3, #4]
1515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Set ADC state */
1517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 1713              		.loc 1 1517 5
 1714 0042 7B68     		ldr	r3, [r7, #4]
 1715 0044 9B6A     		ldr	r3, [r3, #40]
 1716 0046 23F48853 		bic	r3, r3, #4352
 1717 004a 23F00103 		bic	r3, r3, #1
 1718 004e 43F00102 		orr	r2, r3, #1
 1719 0052 7B68     		ldr	r3, [r7, #4]
 1720 0054 9A62     		str	r2, [r3, #40]
 1721              	.L104:
1518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_READY);
1520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Process unlocked */
1523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 1722              		.loc 1 1523 3
 1723 0056 7B68     		ldr	r3, [r7, #4]
 1724 0058 0022     		movs	r2, #0
 1725 005a 83F82420 		strb	r2, [r3, #36]
1524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 58


1525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return function status */
1526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return tmp_hal_status;
 1726              		.loc 1 1526 10
 1727 005e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1728              	.L103:
1527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 1729              		.loc 1 1527 1
 1730 0060 1846     		mov	r0, r3
 1731 0062 1037     		adds	r7, r7, #16
 1732              	.LCFI50:
 1733              		.cfi_def_cfa_offset 8
 1734 0064 BD46     		mov	sp, r7
 1735              	.LCFI51:
 1736              		.cfi_def_cfa_register 13
 1737              		@ sp needed
 1738 0066 80BD     		pop	{r7, pc}
 1739              		.cfi_endproc
 1740              	.LFE74:
 1742              		.section	.text.HAL_ADC_Start_DMA,"ax",%progbits
 1743              		.align	1
 1744              		.global	HAL_ADC_Start_DMA
 1745              		.syntax unified
 1746              		.thumb
 1747              		.thumb_func
 1749              	HAL_ADC_Start_DMA:
 1750              	.LFB75:
1528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Enables ADC, starts conversion of regular group and transfers result
1531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         through DMA.
1532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         Interruptions enabled in this function:
1533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          - DMA transfer complete
1534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          - DMA half transfer
1535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
1536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   For devices with several ADCs: This function is for single-ADC mode 
1537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         only. For multimode, use the dedicated MultimodeStart function.
1538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   On STM32F1 devices, only ADC1 and ADC3 (ADC availability depending
1539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         on devices) have DMA capability.
1540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         ADC2 converted data can be transferred in dual ADC mode using DMA
1541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         of ADC1 (ADC master in multimode).
1542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         In case of using ADC1 with DMA on a device featuring 2 ADC
1543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         instances: ADC1 conversion register DR contains ADC1 conversion 
1544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         result (ADC1 register DR bits 0 to 11) and, additionally, ADC2 last
1545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         conversion result (ADC1 register DR bits 16 to 27). Therefore, to
1546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         have DMA transferring the conversion results of ADC1 only, DMA must
1547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         be configured to transfer size: half word.
1548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  pData: The destination Buffer address.
1550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  Length: The length of data to be transferred from ADC peripheral to memory.
1551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval None
1552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_DMA(ADC_HandleTypeDef* hadc, uint32_t* pData, uint32_t Length)
1554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 1751              		.loc 1 1554 1
 1752              		.cfi_startproc
 1753              		@ args = 0, pretend = 0, frame = 24
 1754              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 59


 1755 0000 80B5     		push	{r7, lr}
 1756              	.LCFI52:
 1757              		.cfi_def_cfa_offset 8
 1758              		.cfi_offset 7, -8
 1759              		.cfi_offset 14, -4
 1760 0002 86B0     		sub	sp, sp, #24
 1761              	.LCFI53:
 1762              		.cfi_def_cfa_offset 32
 1763 0004 00AF     		add	r7, sp, #0
 1764              	.LCFI54:
 1765              		.cfi_def_cfa_register 7
 1766 0006 F860     		str	r0, [r7, #12]
 1767 0008 B960     		str	r1, [r7, #8]
 1768 000a 7A60     		str	r2, [r7, #4]
1555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1769              		.loc 1 1555 21
 1770 000c 0023     		movs	r3, #0
 1771 000e FB75     		strb	r3, [r7, #23]
1556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
1558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_DMA_CAPABILITY_INSTANCE(hadc->Instance));
1559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Verification if multimode is disabled (for devices with several ADC)     */
1561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* If multimode is enabled, dedicated function multimode conversion         */
1562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* start DMA must be used.                                                  */
1563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if(ADC_MULTIMODE_IS_ENABLE(hadc) == RESET)
 1772              		.loc 1 1563 6
 1773 0010 FB68     		ldr	r3, [r7, #12]
 1774 0012 1B68     		ldr	r3, [r3]
 1775              		.loc 1 1563 5
 1776 0014 644A     		ldr	r2, .L122
 1777 0016 9342     		cmp	r3, r2
 1778 0018 04D0     		beq	.L106
 1779              		.loc 1 1563 6 discriminator 1
 1780 001a FB68     		ldr	r3, [r7, #12]
 1781 001c 1B68     		ldr	r3, [r3]
 1782 001e 634A     		ldr	r2, .L122+4
 1783 0020 9342     		cmp	r3, r2
 1784 0022 06D1     		bne	.L107
 1785              	.L106:
 1786              		.loc 1 1563 6 is_stmt 0 discriminator 3
 1787 0024 604B     		ldr	r3, .L122
 1788 0026 5B68     		ldr	r3, [r3, #4]
 1789 0028 03F47023 		and	r3, r3, #983040
 1790              		.loc 1 1563 36 is_stmt 1 discriminator 3
 1791 002c 002B     		cmp	r3, #0
 1792 002e 40F0B380 		bne	.L108
 1793              	.L107:
1564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Process locked */
1566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_LOCK(hadc);
 1794              		.loc 1 1566 5
 1795 0032 FB68     		ldr	r3, [r7, #12]
 1796 0034 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 1797 0038 012B     		cmp	r3, #1
 1798 003a 01D1     		bne	.L109
 1799              		.loc 1 1566 5 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 60


 1800 003c 0223     		movs	r3, #2
 1801 003e AEE0     		b	.L110
 1802              	.L109:
 1803              		.loc 1 1566 5 discriminator 2
 1804 0040 FB68     		ldr	r3, [r7, #12]
 1805 0042 0122     		movs	r2, #1
 1806 0044 83F82420 		strb	r2, [r3, #36]
1567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Enable the ADC peripheral */
1569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     tmp_hal_status = ADC_Enable(hadc);
 1807              		.loc 1 1569 22 is_stmt 1 discriminator 2
 1808 0048 F868     		ldr	r0, [r7, #12]
 1809 004a FFF7FEFF 		bl	ADC_Enable
 1810 004e 0346     		mov	r3, r0
 1811 0050 FB75     		strb	r3, [r7, #23]
1570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Start conversion if ADC is effectively enabled */
1572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
 1812              		.loc 1 1572 8 discriminator 2
 1813 0052 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1814 0054 002B     		cmp	r3, #0
 1815 0056 40F09A80 		bne	.L111
1573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set ADC state                                                        */
1575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* - Clear state bitfield related to regular group conversion results   */
1576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* - Set state bitfield related to regular operation                    */
1577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
 1816              		.loc 1 1577 7
 1817 005a FB68     		ldr	r3, [r7, #12]
 1818 005c 9B6A     		ldr	r3, [r3, #40]
 1819 005e 23F47063 		bic	r3, r3, #3840
 1820 0062 23F00103 		bic	r3, r3, #1
 1821 0066 43F48072 		orr	r2, r3, #256
 1822 006a FB68     		ldr	r3, [r7, #12]
 1823 006c 9A62     		str	r2, [r3, #40]
1578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
1579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY);
1580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Set group injected state (from auto-injection) and multimode state     */
1582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* for all cases of multimode: independent mode, multimode ADC master     */
1583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* or multimode ADC slave (for devices with several ADCs):                */
1584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc))
 1824              		.loc 1 1584 9
 1825 006e FB68     		ldr	r3, [r7, #12]
 1826 0070 1B68     		ldr	r3, [r3]
 1827              		.loc 1 1584 8
 1828 0072 4E4A     		ldr	r2, .L122+4
 1829 0074 9342     		cmp	r3, r2
 1830 0076 05D1     		bne	.L112
 1831              		.loc 1 1584 9 discriminator 1
 1832 0078 4B4B     		ldr	r3, .L122
 1833 007a 5B68     		ldr	r3, [r3, #4]
 1834 007c 03F47023 		and	r3, r3, #983040
 1835 0080 002B     		cmp	r3, #0
 1836 0082 15D1     		bne	.L113
 1837              	.L112:
1585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 61


1586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set ADC state (ADC independent or master) */
1587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 1838              		.loc 1 1587 7
 1839 0084 FB68     		ldr	r3, [r7, #12]
 1840 0086 9B6A     		ldr	r3, [r3, #40]
 1841 0088 23F48012 		bic	r2, r3, #1048576
 1842 008c FB68     		ldr	r3, [r7, #12]
 1843 008e 9A62     		str	r2, [r3, #40]
1588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* If conversions on group regular are also triggering group injected,  */
1590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* update ADC state.                                                    */
1591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 1844              		.loc 1 1591 11
 1845 0090 FB68     		ldr	r3, [r7, #12]
 1846 0092 1B68     		ldr	r3, [r3]
 1847 0094 5B68     		ldr	r3, [r3, #4]
 1848 0096 03F48063 		and	r3, r3, #1024
 1849              		.loc 1 1591 10
 1850 009a 002B     		cmp	r3, #0
 1851 009c 26D0     		beq	.L115
1592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 1852              		.loc 1 1593 9
 1853 009e FB68     		ldr	r3, [r7, #12]
 1854 00a0 9B6A     		ldr	r3, [r3, #40]
 1855 00a2 23F44053 		bic	r3, r3, #12288
 1856 00a6 43F48052 		orr	r2, r3, #4096
 1857 00aa FB68     		ldr	r3, [r7, #12]
 1858 00ac 9A62     		str	r2, [r3, #40]
1591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 1859              		.loc 1 1591 10
 1860 00ae 1DE0     		b	.L115
 1861              	.L113:
1594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     else
1597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set ADC state (ADC slave) */
1599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 1862              		.loc 1 1599 7
 1863 00b0 FB68     		ldr	r3, [r7, #12]
 1864 00b2 9B6A     		ldr	r3, [r3, #40]
 1865 00b4 43F48012 		orr	r2, r3, #1048576
 1866 00b8 FB68     		ldr	r3, [r7, #12]
 1867 00ba 9A62     		str	r2, [r3, #40]
1600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* If conversions on group regular are also triggering group injected,  */
1602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* update ADC state.                                                    */
1603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if (ADC_MULTIMODE_AUTO_INJECTED(hadc))
 1868              		.loc 1 1603 11
 1869 00bc FB68     		ldr	r3, [r7, #12]
 1870 00be 1B68     		ldr	r3, [r3]
 1871              		.loc 1 1603 10
 1872 00c0 394A     		ldr	r2, .L122
 1873 00c2 9342     		cmp	r3, r2
 1874 00c4 04D0     		beq	.L116
 1875              		.loc 1 1603 11 discriminator 2
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 62


 1876 00c6 FB68     		ldr	r3, [r7, #12]
 1877 00c8 1B68     		ldr	r3, [r3]
 1878 00ca 384A     		ldr	r2, .L122+4
 1879 00cc 9342     		cmp	r3, r2
 1880 00ce 0DD1     		bne	.L115
 1881              	.L116:
 1882              		.loc 1 1603 11 is_stmt 0 discriminator 3
 1883 00d0 354B     		ldr	r3, .L122
 1884 00d2 5B68     		ldr	r3, [r3, #4]
 1885 00d4 03F48063 		and	r3, r3, #1024
 1886 00d8 002B     		cmp	r3, #0
 1887 00da 07D0     		beq	.L115
1604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
 1888              		.loc 1 1605 9 is_stmt 1
 1889 00dc FB68     		ldr	r3, [r7, #12]
 1890 00de 9B6A     		ldr	r3, [r3, #40]
 1891 00e0 23F44053 		bic	r3, r3, #12288
 1892 00e4 43F48052 		orr	r2, r3, #4096
 1893 00e8 FB68     		ldr	r3, [r7, #12]
 1894 00ea 9A62     		str	r2, [r3, #40]
 1895              	.L115:
1606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* State machine update: Check if an injected conversion is ongoing */
1610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 1896              		.loc 1 1610 11
 1897 00ec FB68     		ldr	r3, [r7, #12]
 1898 00ee 9B6A     		ldr	r3, [r3, #40]
 1899 00f0 03F48053 		and	r3, r3, #4096
 1900              		.loc 1 1610 10
 1901 00f4 002B     		cmp	r3, #0
 1902 00f6 06D0     		beq	.L117
1611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Reset ADC error code fields related to conversions on group regular */
1613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 1903              		.loc 1 1613 9
 1904 00f8 FB68     		ldr	r3, [r7, #12]
 1905 00fa DB6A     		ldr	r3, [r3, #44]
 1906 00fc 23F00602 		bic	r2, r3, #6
 1907 0100 FB68     		ldr	r3, [r7, #12]
 1908 0102 DA62     		str	r2, [r3, #44]
 1909 0104 02E0     		b	.L118
 1910              	.L117:
1614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       else
1616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Reset ADC all error code fields */
1618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_CLEAR_ERRORCODE(hadc);
 1911              		.loc 1 1618 9
 1912 0106 FB68     		ldr	r3, [r7, #12]
 1913 0108 0022     		movs	r2, #0
 1914 010a DA62     		str	r2, [r3, #44]
 1915              	.L118:
1619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 63


1621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Process unlocked */
1622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
 1916              		.loc 1 1624 7
 1917 010c FB68     		ldr	r3, [r7, #12]
 1918 010e 0022     		movs	r2, #0
 1919 0110 83F82420 		strb	r2, [r3, #36]
1625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set the DMA transfer complete callback */
1627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
 1920              		.loc 1 1627 11
 1921 0114 FB68     		ldr	r3, [r7, #12]
 1922 0116 1B6A     		ldr	r3, [r3, #32]
 1923              		.loc 1 1627 42
 1924 0118 254A     		ldr	r2, .L122+8
 1925 011a 9A62     		str	r2, [r3, #40]
1628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set the DMA half transfer complete callback */
1630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
 1926              		.loc 1 1630 11
 1927 011c FB68     		ldr	r3, [r7, #12]
 1928 011e 1B6A     		ldr	r3, [r3, #32]
 1929              		.loc 1 1630 46
 1930 0120 244A     		ldr	r2, .L122+12
 1931 0122 DA62     		str	r2, [r3, #44]
1631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set the DMA error callback */
1633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
 1932              		.loc 1 1633 11
 1933 0124 FB68     		ldr	r3, [r7, #12]
 1934 0126 1B6A     		ldr	r3, [r3, #32]
 1935              		.loc 1 1633 43
 1936 0128 234A     		ldr	r2, .L122+16
 1937 012a 1A63     		str	r2, [r3, #48]
1634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Manage ADC and DMA start: ADC overrun interruption, DMA start, ADC   */
1637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* start (in case of SW start):                                         */
1638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Clear regular group conversion flag and overrun flag */
1640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* (To ensure of no unknown state from potential previous ADC           */
1641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* operations)                                                          */
1642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC);
 1938              		.loc 1 1642 7
 1939 012c FB68     		ldr	r3, [r7, #12]
 1940 012e 1B68     		ldr	r3, [r3]
 1941 0130 6FF00202 		mvn	r2, #2
 1942 0134 1A60     		str	r2, [r3]
1643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Enable ADC DMA mode */
1645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       SET_BIT(hadc->Instance->CR2, ADC_CR2_DMA);
 1943              		.loc 1 1645 7
 1944 0136 FB68     		ldr	r3, [r7, #12]
 1945 0138 1B68     		ldr	r3, [r3]
 1946 013a 9A68     		ldr	r2, [r3, #8]
 1947 013c FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 64


 1948 013e 1B68     		ldr	r3, [r3]
 1949 0140 42F48072 		orr	r2, r2, #256
 1950 0144 9A60     		str	r2, [r3, #8]
1646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Start the DMA channel */
1648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_t)pData, Length);
 1951              		.loc 1 1648 7
 1952 0146 FB68     		ldr	r3, [r7, #12]
 1953 0148 186A     		ldr	r0, [r3, #32]
 1954              		.loc 1 1648 57
 1955 014a FB68     		ldr	r3, [r7, #12]
 1956 014c 1B68     		ldr	r3, [r3]
 1957              		.loc 1 1648 52
 1958 014e 4C33     		adds	r3, r3, #76
 1959              		.loc 1 1648 7
 1960 0150 1946     		mov	r1, r3
 1961 0152 BA68     		ldr	r2, [r7, #8]
 1962 0154 7B68     		ldr	r3, [r7, #4]
 1963 0156 FFF7FEFF 		bl	HAL_DMA_Start_IT
1649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Enable conversion of regular group.                                  */
1651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* If software start has been selected, conversion starts immediately.  */
1652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* If external trigger has been selected, conversion will start at next */
1653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* trigger event.                                                       */
1654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if (ADC_IS_SOFTWARE_START_REGULAR(hadc))
 1964              		.loc 1 1654 11
 1965 015a FB68     		ldr	r3, [r7, #12]
 1966 015c 1B68     		ldr	r3, [r3]
 1967 015e 9B68     		ldr	r3, [r3, #8]
 1968 0160 03F46023 		and	r3, r3, #917504
 1969              		.loc 1 1654 10
 1970 0164 B3F5602F 		cmp	r3, #917504
 1971 0168 08D1     		bne	.L119
1655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Start ADC conversion on regular group with SW start */
1657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         SET_BIT(hadc->Instance->CR2, (ADC_CR2_SWSTART | ADC_CR2_EXTTRIG));
 1972              		.loc 1 1657 9
 1973 016a FB68     		ldr	r3, [r7, #12]
 1974 016c 1B68     		ldr	r3, [r3]
 1975 016e 9A68     		ldr	r2, [r3, #8]
 1976 0170 FB68     		ldr	r3, [r7, #12]
 1977 0172 1B68     		ldr	r3, [r3]
 1978 0174 42F4A002 		orr	r2, r2, #5242880
 1979 0178 9A60     		str	r2, [r3, #8]
1572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1980              		.loc 1 1572 8
 1981 017a 0FE0     		b	.L121
 1982              	.L119:
1658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       else
1660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Start ADC conversion on regular group with external trigger */
1662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         SET_BIT(hadc->Instance->CR2, ADC_CR2_EXTTRIG);
 1983              		.loc 1 1662 9
 1984 017c FB68     		ldr	r3, [r7, #12]
 1985 017e 1B68     		ldr	r3, [r3]
 1986 0180 9A68     		ldr	r2, [r3, #8]
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 65


 1987 0182 FB68     		ldr	r3, [r7, #12]
 1988 0184 1B68     		ldr	r3, [r3]
 1989 0186 42F48012 		orr	r2, r2, #1048576
 1990 018a 9A60     		str	r2, [r3, #8]
1572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1991              		.loc 1 1572 8
 1992 018c 06E0     		b	.L121
 1993              	.L111:
1663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     else
1666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Process unlocked */
1668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
 1994              		.loc 1 1668 7
 1995 018e FB68     		ldr	r3, [r7, #12]
 1996 0190 0022     		movs	r2, #0
 1997 0192 83F82420 		strb	r2, [r3, #36]
1572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1998              		.loc 1 1572 8
 1999 0196 01E0     		b	.L121
 2000              	.L108:
1669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   else
1672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 2001              		.loc 1 1673 20
 2002 0198 0123     		movs	r3, #1
 2003 019a FB75     		strb	r3, [r7, #23]
 2004              	.L121:
1674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return function status */
1677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return tmp_hal_status;
 2005              		.loc 1 1677 10
 2006 019c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2007              	.L110:
1678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 2008              		.loc 1 1678 1
 2009 019e 1846     		mov	r0, r3
 2010 01a0 1837     		adds	r7, r7, #24
 2011              	.LCFI55:
 2012              		.cfi_def_cfa_offset 8
 2013 01a2 BD46     		mov	sp, r7
 2014              	.LCFI56:
 2015              		.cfi_def_cfa_register 13
 2016              		@ sp needed
 2017 01a4 80BD     		pop	{r7, pc}
 2018              	.L123:
 2019 01a6 00BF     		.align	2
 2020              	.L122:
 2021 01a8 00240140 		.word	1073816576
 2022 01ac 00280140 		.word	1073817600
 2023 01b0 00000000 		.word	ADC_DMAConvCplt
 2024 01b4 00000000 		.word	ADC_DMAHalfConvCplt
 2025 01b8 00000000 		.word	ADC_DMAError
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 66


 2026              		.cfi_endproc
 2027              	.LFE75:
 2029              		.section	.text.HAL_ADC_Stop_DMA,"ax",%progbits
 2030              		.align	1
 2031              		.global	HAL_ADC_Stop_DMA
 2032              		.syntax unified
 2033              		.thumb
 2034              		.thumb_func
 2036              	HAL_ADC_Stop_DMA:
 2037              	.LFB76:
1679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected group in 
1682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         case of auto_injection mode), disable ADC DMA transfer, disable 
1683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         ADC peripheral.
1684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note:  ADC peripheral disable is forcing stop of potential 
1685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         conversion on injected group. If injected group is under use, it
1686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         should be preliminarily stopped using HAL_ADCEx_InjectedStop function.
1687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   For devices with several ADCs: This function is for single-ADC mode 
1688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         only. For multimode, use the dedicated MultimodeStop function.
1689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   On STM32F1 devices, only ADC1 and ADC3 (ADC availability depending
1690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         on devices) have DMA capability.
1691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval HAL status.
1693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_DMA(ADC_HandleTypeDef* hadc)
1695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 2038              		.loc 1 1695 1
 2039              		.cfi_startproc
 2040              		@ args = 0, pretend = 0, frame = 16
 2041              		@ frame_needed = 1, uses_anonymous_args = 0
 2042 0000 80B5     		push	{r7, lr}
 2043              	.LCFI57:
 2044              		.cfi_def_cfa_offset 8
 2045              		.cfi_offset 7, -8
 2046              		.cfi_offset 14, -4
 2047 0002 84B0     		sub	sp, sp, #16
 2048              	.LCFI58:
 2049              		.cfi_def_cfa_offset 24
 2050 0004 00AF     		add	r7, sp, #0
 2051              	.LCFI59:
 2052              		.cfi_def_cfa_register 7
 2053 0006 7860     		str	r0, [r7, #4]
1696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2054              		.loc 1 1696 21
 2055 0008 0023     		movs	r3, #0
 2056 000a FB73     		strb	r3, [r7, #15]
1697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
1699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_DMA_CAPABILITY_INSTANCE(hadc->Instance));
1700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      
1701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Process locked */
1702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_LOCK(hadc);
 2057              		.loc 1 1702 3
 2058 000c 7B68     		ldr	r3, [r7, #4]
 2059 000e 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 2060 0012 012B     		cmp	r3, #1
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 67


 2061 0014 01D1     		bne	.L125
 2062              		.loc 1 1702 3 is_stmt 0 discriminator 1
 2063 0016 0223     		movs	r3, #2
 2064 0018 3AE0     		b	.L126
 2065              	.L125:
 2066              		.loc 1 1702 3 discriminator 2
 2067 001a 7B68     		ldr	r3, [r7, #4]
 2068 001c 0122     		movs	r2, #1
 2069 001e 83F82420 		strb	r2, [r3, #36]
1703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
1705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Disable ADC peripheral */
1706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop_Disable(hadc);
 2070              		.loc 1 1706 20 is_stmt 1 discriminator 2
 2071 0022 7868     		ldr	r0, [r7, #4]
 2072 0024 FFF7FEFF 		bl	ADC_ConversionStop_Disable
 2073 0028 0346     		mov	r3, r0
 2074 002a FB73     		strb	r3, [r7, #15]
1707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check if ADC is effectively disabled */
1709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
 2075              		.loc 1 1709 6 discriminator 2
 2076 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2077 002e 002B     		cmp	r3, #0
 2078 0030 29D1     		bne	.L127
1710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Disable ADC DMA mode */
1712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->CR2, ADC_CR2_DMA);
 2079              		.loc 1 1712 5
 2080 0032 7B68     		ldr	r3, [r7, #4]
 2081 0034 1B68     		ldr	r3, [r3]
 2082 0036 9A68     		ldr	r2, [r3, #8]
 2083 0038 7B68     		ldr	r3, [r7, #4]
 2084 003a 1B68     		ldr	r3, [r3]
 2085 003c 22F48072 		bic	r2, r2, #256
 2086 0040 9A60     		str	r2, [r3, #8]
1713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop while */
1715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* DMA transfer is on going)                                              */
1716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (hadc->DMA_Handle->State == HAL_DMA_STATE_BUSY)
 2087              		.loc 1 1716 13
 2088 0042 7B68     		ldr	r3, [r7, #4]
 2089 0044 1B6A     		ldr	r3, [r3, #32]
 2090              		.loc 1 1716 25
 2091 0046 93F82130 		ldrb	r3, [r3, #33]
 2092 004a DBB2     		uxtb	r3, r3
 2093              		.loc 1 1716 8
 2094 004c 022B     		cmp	r3, #2
 2095 004e 1AD1     		bne	.L127
1717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
 2096              		.loc 1 1718 24
 2097 0050 7B68     		ldr	r3, [r7, #4]
 2098 0052 1B6A     		ldr	r3, [r3, #32]
 2099 0054 1846     		mov	r0, r3
 2100 0056 FFF7FEFF 		bl	HAL_DMA_Abort
 2101 005a 0346     		mov	r3, r0
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 68


 2102 005c FB73     		strb	r3, [r7, #15]
1719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Check if DMA channel effectively disabled */
1721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if (tmp_hal_status == HAL_OK)
 2103              		.loc 1 1721 10
 2104 005e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2105 0060 002B     		cmp	r3, #0
 2106 0062 0AD1     		bne	.L128
1722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Set ADC state */
1724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State,
 2107              		.loc 1 1724 9
 2108 0064 7B68     		ldr	r3, [r7, #4]
 2109 0066 9B6A     		ldr	r3, [r3, #40]
 2110 0068 23F48853 		bic	r3, r3, #4352
 2111 006c 23F00103 		bic	r3, r3, #1
 2112 0070 43F00102 		orr	r2, r3, #1
 2113 0074 7B68     		ldr	r3, [r7, #4]
 2114 0076 9A62     		str	r2, [r3, #40]
 2115 0078 05E0     		b	.L127
 2116              	.L128:
1725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                           HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                           HAL_ADC_STATE_READY);
1727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       else
1729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Update ADC state machine to error */
1731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
 2117              		.loc 1 1731 9
 2118 007a 7B68     		ldr	r3, [r7, #4]
 2119 007c 9B6A     		ldr	r3, [r3, #40]
 2120 007e 43F04002 		orr	r2, r3, #64
 2121 0082 7B68     		ldr	r3, [r7, #4]
 2122 0084 9A62     		str	r2, [r3, #40]
 2123              	.L127:
1732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Process unlocked */
1737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 2124              		.loc 1 1737 3
 2125 0086 7B68     		ldr	r3, [r7, #4]
 2126 0088 0022     		movs	r2, #0
 2127 008a 83F82420 		strb	r2, [r3, #36]
1738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return function status */
1740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return tmp_hal_status;
 2128              		.loc 1 1740 10
 2129 008e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2130              	.L126:
1741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 2131              		.loc 1 1741 1
 2132 0090 1846     		mov	r0, r3
 2133 0092 1037     		adds	r7, r7, #16
 2134              	.LCFI60:
 2135              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 69


 2136 0094 BD46     		mov	sp, r7
 2137              	.LCFI61:
 2138              		.cfi_def_cfa_register 13
 2139              		@ sp needed
 2140 0096 80BD     		pop	{r7, pc}
 2141              		.cfi_endproc
 2142              	.LFE76:
 2144              		.section	.text.HAL_ADC_GetValue,"ax",%progbits
 2145              		.align	1
 2146              		.global	HAL_ADC_GetValue
 2147              		.syntax unified
 2148              		.thumb
 2149              		.thumb_func
 2151              	HAL_ADC_GetValue:
 2152              	.LFB77:
1742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Get ADC regular group conversion result.
1745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   Reading register DR automatically clears ADC flag EOC
1746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         (ADC group regular end of unitary conversion).
1747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   This function does not clear ADC flag EOS 
1748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         (ADC group regular end of sequence conversion).
1749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         Occurrence of flag EOS rising:
1750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          - If sequencer is composed of 1 rank, flag EOS is equivalent
1751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *            to flag EOC.
1752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          - If sequencer is composed of several ranks, during the scan
1753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *            sequence flag EOC only is raised, at the end of the scan sequence
1754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *            both flags EOC and EOS are raised.
1755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         To clear this flag, either use function: 
1756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         in programming model IT: @ref HAL_ADC_IRQHandler(), in programming
1757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         model polling: @ref HAL_ADC_PollForConversion() 
1758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_EOS).
1759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval ADC group regular conversion data
1761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef* hadc)
1763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 2153              		.loc 1 1763 1
 2154              		.cfi_startproc
 2155              		@ args = 0, pretend = 0, frame = 8
 2156              		@ frame_needed = 1, uses_anonymous_args = 0
 2157              		@ link register save eliminated.
 2158 0000 80B4     		push	{r7}
 2159              	.LCFI62:
 2160              		.cfi_def_cfa_offset 4
 2161              		.cfi_offset 7, -4
 2162 0002 83B0     		sub	sp, sp, #12
 2163              	.LCFI63:
 2164              		.cfi_def_cfa_offset 16
 2165 0004 00AF     		add	r7, sp, #0
 2166              	.LCFI64:
 2167              		.cfi_def_cfa_register 7
 2168 0006 7860     		str	r0, [r7, #4]
1764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
1765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Note: EOC flag is not cleared here by software because automatically     */
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 70


1768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*       cleared by hardware when reading register DR.                      */
1769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return ADC converted value */ 
1771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return hadc->Instance->DR;
 2169              		.loc 1 1771 14
 2170 0008 7B68     		ldr	r3, [r7, #4]
 2171 000a 1B68     		ldr	r3, [r3]
 2172              		.loc 1 1771 24
 2173 000c DB6C     		ldr	r3, [r3, #76]
1772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 2174              		.loc 1 1772 1
 2175 000e 1846     		mov	r0, r3
 2176 0010 0C37     		adds	r7, r7, #12
 2177              	.LCFI65:
 2178              		.cfi_def_cfa_offset 4
 2179 0012 BD46     		mov	sp, r7
 2180              	.LCFI66:
 2181              		.cfi_def_cfa_register 13
 2182              		@ sp needed
 2183 0014 80BC     		pop	{r7}
 2184              	.LCFI67:
 2185              		.cfi_restore 7
 2186              		.cfi_def_cfa_offset 0
 2187 0016 7047     		bx	lr
 2188              		.cfi_endproc
 2189              	.LFE77:
 2191              		.section	.text.HAL_ADC_IRQHandler,"ax",%progbits
 2192              		.align	1
 2193              		.global	HAL_ADC_IRQHandler
 2194              		.syntax unified
 2195              		.thumb
 2196              		.thumb_func
 2198              	HAL_ADC_IRQHandler:
 2199              	.LFB78:
1773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Handles ADC interrupt request  
1776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval None
1778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** void HAL_ADC_IRQHandler(ADC_HandleTypeDef* hadc)
1780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 2200              		.loc 1 1780 1
 2201              		.cfi_startproc
 2202              		@ args = 0, pretend = 0, frame = 16
 2203              		@ frame_needed = 1, uses_anonymous_args = 0
 2204 0000 80B5     		push	{r7, lr}
 2205              	.LCFI68:
 2206              		.cfi_def_cfa_offset 8
 2207              		.cfi_offset 7, -8
 2208              		.cfi_offset 14, -4
 2209 0002 84B0     		sub	sp, sp, #16
 2210              	.LCFI69:
 2211              		.cfi_def_cfa_offset 24
 2212 0004 00AF     		add	r7, sp, #0
 2213              	.LCFI70:
 2214              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 71


 2215 0006 7860     		str	r0, [r7, #4]
1781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   uint32_t tmp_sr = hadc->Instance->SR;
 2216              		.loc 1 1781 25
 2217 0008 7B68     		ldr	r3, [r7, #4]
 2218 000a 1B68     		ldr	r3, [r3]
 2219              		.loc 1 1781 12
 2220 000c 1B68     		ldr	r3, [r3]
 2221 000e FB60     		str	r3, [r7, #12]
1782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   uint32_t tmp_cr1 = hadc->Instance->CR1;
 2222              		.loc 1 1782 26
 2223 0010 7B68     		ldr	r3, [r7, #4]
 2224 0012 1B68     		ldr	r3, [r3]
 2225              		.loc 1 1782 12
 2226 0014 5B68     		ldr	r3, [r3, #4]
 2227 0016 BB60     		str	r3, [r7, #8]
1783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
1785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
1787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_NB_CONV(hadc->Init.NbrOfConversion));
1788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* ========== Check End of Conversion flag for regular group ========== */
1791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if((tmp_cr1 & ADC_IT_EOC) == ADC_IT_EOC)
 2228              		.loc 1 1791 15
 2229 0018 BB68     		ldr	r3, [r7, #8]
 2230 001a 03F02003 		and	r3, r3, #32
 2231              		.loc 1 1791 5
 2232 001e 002B     		cmp	r3, #0
 2233 0020 3ED0     		beq	.L132
1792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if((tmp_sr & ADC_FLAG_EOC) == ADC_FLAG_EOC)
 2234              		.loc 1 1793 16
 2235 0022 FB68     		ldr	r3, [r7, #12]
 2236 0024 03F00203 		and	r3, r3, #2
 2237              		.loc 1 1793 7
 2238 0028 002B     		cmp	r3, #0
 2239 002a 39D0     		beq	.L132
1794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Update state machine on conversion status if not in error state */
1796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 2240              		.loc 1 1796 11
 2241 002c 7B68     		ldr	r3, [r7, #4]
 2242 002e 9B6A     		ldr	r3, [r3, #40]
 2243 0030 03F01003 		and	r3, r3, #16
 2244              		.loc 1 1796 10
 2245 0034 002B     		cmp	r3, #0
 2246 0036 05D1     		bne	.L133
1797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Set ADC state */
1799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC); 
 2247              		.loc 1 1799 9
 2248 0038 7B68     		ldr	r3, [r7, #4]
 2249 003a 9B6A     		ldr	r3, [r3, #40]
 2250 003c 43F40072 		orr	r2, r3, #512
 2251 0040 7B68     		ldr	r3, [r7, #4]
 2252 0042 9A62     		str	r2, [r3, #40]
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 72


 2253              	.L133:
1800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Determine whether any further conversion upcoming on group regular   */
1803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* by external trigger, continuous mode or scan sequence on going.      */
1804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Note: On STM32F1 devices, in case of sequencer enabled               */
1805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /*       (several ranks selected), end of conversion flag is raised     */
1806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /*       at the end of the sequence.                                    */
1807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if(ADC_IS_SOFTWARE_START_REGULAR(hadc)        && 
 2254              		.loc 1 1807 10
 2255 0044 7B68     		ldr	r3, [r7, #4]
 2256 0046 1B68     		ldr	r3, [r3]
 2257 0048 9B68     		ldr	r3, [r3, #8]
 2258 004a 03F46023 		and	r3, r3, #917504
 2259              		.loc 1 1807 9
 2260 004e B3F5602F 		cmp	r3, #917504
 2261 0052 1DD1     		bne	.L134
1808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (hadc->Init.ContinuousConvMode == DISABLE)   )
 2262              		.loc 1 1808 21 discriminator 1
 2263 0054 7B68     		ldr	r3, [r7, #4]
 2264 0056 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
1807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (hadc->Init.ContinuousConvMode == DISABLE)   )
 2265              		.loc 1 1807 53 discriminator 1
 2266 0058 002B     		cmp	r3, #0
 2267 005a 19D1     		bne	.L134
1809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Disable ADC end of conversion interrupt on group regular */
1811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
 2268              		.loc 1 1811 9
 2269 005c 7B68     		ldr	r3, [r7, #4]
 2270 005e 1B68     		ldr	r3, [r3]
 2271 0060 5A68     		ldr	r2, [r3, #4]
 2272 0062 7B68     		ldr	r3, [r7, #4]
 2273 0064 1B68     		ldr	r3, [r3]
 2274 0066 22F02002 		bic	r2, r2, #32
 2275 006a 5A60     		str	r2, [r3, #4]
1812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
1813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Set ADC state */
1814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
 2276              		.loc 1 1814 9
 2277 006c 7B68     		ldr	r3, [r7, #4]
 2278 006e 9B6A     		ldr	r3, [r3, #40]
 2279 0070 23F48072 		bic	r2, r3, #256
 2280 0074 7B68     		ldr	r3, [r7, #4]
 2281 0076 9A62     		str	r2, [r3, #40]
1815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
1816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 2282              		.loc 1 1816 13
 2283 0078 7B68     		ldr	r3, [r7, #4]
 2284 007a 9B6A     		ldr	r3, [r3, #40]
 2285 007c 03F48053 		and	r3, r3, #4096
 2286              		.loc 1 1816 12
 2287 0080 002B     		cmp	r3, #0
 2288 0082 05D1     		bne	.L134
1817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         {
1818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 2289              		.loc 1 1818 11
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 73


 2290 0084 7B68     		ldr	r3, [r7, #4]
 2291 0086 9B6A     		ldr	r3, [r3, #40]
 2292 0088 43F00102 		orr	r2, r3, #1
 2293 008c 7B68     		ldr	r3, [r7, #4]
 2294 008e 9A62     		str	r2, [r3, #40]
 2295              	.L134:
1819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         }
1820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Conversion complete callback */
1823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       hadc->ConvCpltCallback(hadc);
1825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** #else
1826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       HAL_ADC_ConvCpltCallback(hadc);
 2296              		.loc 1 1826 7
 2297 0090 7868     		ldr	r0, [r7, #4]
 2298 0092 FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
1827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Clear regular group conversion flag */
1830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
 2299              		.loc 1 1830 7
 2300 0096 7B68     		ldr	r3, [r7, #4]
 2301 0098 1B68     		ldr	r3, [r3]
 2302 009a 6FF01202 		mvn	r2, #18
 2303 009e 1A60     		str	r2, [r3]
 2304              	.L132:
1831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* ========== Check End of Conversion flag for injected group ========== */
1835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if((tmp_cr1 & ADC_IT_JEOC) == ADC_IT_JEOC)
 2305              		.loc 1 1835 15
 2306 00a0 BB68     		ldr	r3, [r7, #8]
 2307 00a2 03F08003 		and	r3, r3, #128
 2308              		.loc 1 1835 5
 2309 00a6 002B     		cmp	r3, #0
 2310 00a8 4DD0     		beq	.L135
1836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if((tmp_sr & ADC_FLAG_JEOC) == ADC_FLAG_JEOC)
 2311              		.loc 1 1837 16
 2312 00aa FB68     		ldr	r3, [r7, #12]
 2313 00ac 03F00403 		and	r3, r3, #4
 2314              		.loc 1 1837 7
 2315 00b0 002B     		cmp	r3, #0
 2316 00b2 48D0     		beq	.L135
1838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Update state machine on conversion status if not in error state */
1840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 2317              		.loc 1 1840 11
 2318 00b4 7B68     		ldr	r3, [r7, #4]
 2319 00b6 9B6A     		ldr	r3, [r3, #40]
 2320 00b8 03F01003 		and	r3, r3, #16
 2321              		.loc 1 1840 10
 2322 00bc 002B     		cmp	r3, #0
 2323 00be 05D1     		bne	.L136
1841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 74


1842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Set ADC state */
1843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
 2324              		.loc 1 1843 9
 2325 00c0 7B68     		ldr	r3, [r7, #4]
 2326 00c2 9B6A     		ldr	r3, [r3, #40]
 2327 00c4 43F40052 		orr	r2, r3, #8192
 2328 00c8 7B68     		ldr	r3, [r7, #4]
 2329 00ca 9A62     		str	r2, [r3, #40]
 2330              	.L136:
1844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Determine whether any further conversion upcoming on group injected  */
1847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* by external trigger, scan sequence on going or by automatic injected */
1848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* conversion from group regular (same conditions as group regular      */
1849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* interruption disabling above).                                       */
1850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Note: On STM32F1 devices, in case of sequencer enabled               */
1851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /*       (several ranks selected), end of conversion flag is raised     */
1852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /*       at the end of the sequence.                                    */
1853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if(ADC_IS_SOFTWARE_START_INJECTED(hadc)                     || 
 2331              		.loc 1 1853 10
 2332 00cc 7B68     		ldr	r3, [r7, #4]
 2333 00ce 1B68     		ldr	r3, [r3]
 2334 00d0 9B68     		ldr	r3, [r3, #8]
 2335 00d2 03F4E043 		and	r3, r3, #28672
 2336              		.loc 1 1853 9
 2337 00d6 B3F5E04F 		cmp	r3, #28672
 2338 00da 12D0     		beq	.L137
1854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&     
 2339              		.loc 1 1854 11 discriminator 1
 2340 00dc 7B68     		ldr	r3, [r7, #4]
 2341 00de 1B68     		ldr	r3, [r3]
 2342 00e0 5B68     		ldr	r3, [r3, #4]
 2343 00e2 03F48063 		and	r3, r3, #1024
1853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&     
 2344              		.loc 1 1853 67 discriminator 1
 2345 00e6 002B     		cmp	r3, #0
 2346 00e8 25D1     		bne	.L138
1855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (ADC_IS_SOFTWARE_START_REGULAR(hadc)        &&
 2347              		.loc 1 1855 11
 2348 00ea 7B68     		ldr	r3, [r7, #4]
 2349 00ec 1B68     		ldr	r3, [r3]
 2350 00ee 9B68     		ldr	r3, [r3, #8]
 2351 00f0 03F46023 		and	r3, r3, #917504
1854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&     
 2352              		.loc 1 1854 62
 2353 00f4 B3F5602F 		cmp	r3, #917504
 2354 00f8 1DD1     		bne	.L138
1856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (hadc->Init.ContinuousConvMode == DISABLE)   )        )   )
 2355              		.loc 1 1856 22
 2356 00fa 7B68     		ldr	r3, [r7, #4]
 2357 00fc 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
1855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (ADC_IS_SOFTWARE_START_REGULAR(hadc)        &&
 2358              		.loc 1 1855 54
 2359 00fe 002B     		cmp	r3, #0
 2360 0100 19D1     		bne	.L138
 2361              	.L137:
1857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 75


1858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Disable ADC end of conversion interrupt on group injected */
1859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
 2362              		.loc 1 1859 9
 2363 0102 7B68     		ldr	r3, [r7, #4]
 2364 0104 1B68     		ldr	r3, [r3]
 2365 0106 5A68     		ldr	r2, [r3, #4]
 2366 0108 7B68     		ldr	r3, [r7, #4]
 2367 010a 1B68     		ldr	r3, [r3]
 2368 010c 22F08002 		bic	r2, r2, #128
 2369 0110 5A60     		str	r2, [r3, #4]
1860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
1861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Set ADC state */
1862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);   
 2370              		.loc 1 1862 9
 2371 0112 7B68     		ldr	r3, [r7, #4]
 2372 0114 9B6A     		ldr	r3, [r3, #40]
 2373 0116 23F48052 		bic	r2, r3, #4096
 2374 011a 7B68     		ldr	r3, [r7, #4]
 2375 011c 9A62     		str	r2, [r3, #40]
1863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
 2376              		.loc 1 1864 13
 2377 011e 7B68     		ldr	r3, [r7, #4]
 2378 0120 9B6A     		ldr	r3, [r3, #40]
 2379 0122 03F48073 		and	r3, r3, #256
 2380              		.loc 1 1864 12
 2381 0126 002B     		cmp	r3, #0
 2382 0128 05D1     		bne	.L138
1865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         { 
1866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 2383              		.loc 1 1866 11
 2384 012a 7B68     		ldr	r3, [r7, #4]
 2385 012c 9B6A     		ldr	r3, [r3, #40]
 2386 012e 43F00102 		orr	r2, r3, #1
 2387 0132 7B68     		ldr	r3, [r7, #4]
 2388 0134 9A62     		str	r2, [r3, #40]
 2389              	.L138:
1867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         }
1868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Conversion complete callback */ 
1871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       hadc->InjectedConvCpltCallback(hadc);
1873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** #else
1874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       HAL_ADCEx_InjectedConvCpltCallback(hadc);
 2390              		.loc 1 1874 7
 2391 0136 7868     		ldr	r0, [r7, #4]
 2392 0138 FFF7FEFF 		bl	HAL_ADCEx_InjectedConvCpltCallback
1875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Clear injected group conversion flag */
1878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_JSTRT | ADC_FLAG_JEOC));
 2393              		.loc 1 1878 7
 2394 013c 7B68     		ldr	r3, [r7, #4]
 2395 013e 1B68     		ldr	r3, [r3]
 2396 0140 6FF00C02 		mvn	r2, #12
 2397 0144 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 76


 2398              	.L135:
1879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****    
1882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* ========== Check Analog watchdog flags ========== */
1883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if((tmp_cr1 & ADC_IT_AWD) == ADC_IT_AWD)
 2399              		.loc 1 1883 15
 2400 0146 BB68     		ldr	r3, [r7, #8]
 2401 0148 03F04003 		and	r3, r3, #64
 2402              		.loc 1 1883 5
 2403 014c 002B     		cmp	r3, #0
 2404 014e 12D0     		beq	.L140
1884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if((tmp_sr & ADC_FLAG_AWD) == ADC_FLAG_AWD)
 2405              		.loc 1 1885 16
 2406 0150 FB68     		ldr	r3, [r7, #12]
 2407 0152 03F00103 		and	r3, r3, #1
 2408              		.loc 1 1885 7
 2409 0156 002B     		cmp	r3, #0
 2410 0158 0DD0     		beq	.L140
1886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set ADC state */
1888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
 2411              		.loc 1 1888 7
 2412 015a 7B68     		ldr	r3, [r7, #4]
 2413 015c 9B6A     		ldr	r3, [r3, #40]
 2414 015e 43F48032 		orr	r2, r3, #65536
 2415 0162 7B68     		ldr	r3, [r7, #4]
 2416 0164 9A62     		str	r2, [r3, #40]
1889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Level out of window callback */ 
1891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       hadc->LevelOutOfWindowCallback(hadc);
1893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** #else
1894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       HAL_ADC_LevelOutOfWindowCallback(hadc);
 2417              		.loc 1 1894 7
 2418 0166 7868     		ldr	r0, [r7, #4]
 2419 0168 FFF7FEFF 		bl	HAL_ADC_LevelOutOfWindowCallback
1895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Clear the ADC analog watchdog flag */
1898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD);
 2420              		.loc 1 1898 7
 2421 016c 7B68     		ldr	r3, [r7, #4]
 2422 016e 1B68     		ldr	r3, [r3]
 2423 0170 6FF00102 		mvn	r2, #1
 2424 0174 1A60     		str	r2, [r3]
 2425              	.L140:
1899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 2426              		.loc 1 1902 1
 2427 0176 00BF     		nop
 2428 0178 1037     		adds	r7, r7, #16
 2429              	.LCFI71:
 2430              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 77


 2431 017a BD46     		mov	sp, r7
 2432              	.LCFI72:
 2433              		.cfi_def_cfa_register 13
 2434              		@ sp needed
 2435 017c 80BD     		pop	{r7, pc}
 2436              		.cfi_endproc
 2437              	.LFE78:
 2439              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 2440              		.align	1
 2441              		.weak	HAL_ADC_ConvCpltCallback
 2442              		.syntax unified
 2443              		.thumb
 2444              		.thumb_func
 2446              	HAL_ADC_ConvCpltCallback:
 2447              	.LFB79:
1903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Conversion complete callback in non blocking mode 
1906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval None
1908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** __weak void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc)
1910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 2448              		.loc 1 1910 1
 2449              		.cfi_startproc
 2450              		@ args = 0, pretend = 0, frame = 8
 2451              		@ frame_needed = 1, uses_anonymous_args = 0
 2452              		@ link register save eliminated.
 2453 0000 80B4     		push	{r7}
 2454              	.LCFI73:
 2455              		.cfi_def_cfa_offset 4
 2456              		.cfi_offset 7, -4
 2457 0002 83B0     		sub	sp, sp, #12
 2458              	.LCFI74:
 2459              		.cfi_def_cfa_offset 16
 2460 0004 00AF     		add	r7, sp, #0
 2461              	.LCFI75:
 2462              		.cfi_def_cfa_register 7
 2463 0006 7860     		str	r0, [r7, #4]
1911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   UNUSED(hadc);
1913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****             function HAL_ADC_ConvCpltCallback must be implemented in the user file.
1915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****    */
1916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 2464              		.loc 1 1916 1
 2465 0008 00BF     		nop
 2466 000a 0C37     		adds	r7, r7, #12
 2467              	.LCFI76:
 2468              		.cfi_def_cfa_offset 4
 2469 000c BD46     		mov	sp, r7
 2470              	.LCFI77:
 2471              		.cfi_def_cfa_register 13
 2472              		@ sp needed
 2473 000e 80BC     		pop	{r7}
 2474              	.LCFI78:
 2475              		.cfi_restore 7
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 78


 2476              		.cfi_def_cfa_offset 0
 2477 0010 7047     		bx	lr
 2478              		.cfi_endproc
 2479              	.LFE79:
 2481              		.section	.text.HAL_ADC_ConvHalfCpltCallback,"ax",%progbits
 2482              		.align	1
 2483              		.weak	HAL_ADC_ConvHalfCpltCallback
 2484              		.syntax unified
 2485              		.thumb
 2486              		.thumb_func
 2488              	HAL_ADC_ConvHalfCpltCallback:
 2489              	.LFB80:
1917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Conversion DMA half-transfer callback in non blocking mode 
1920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval None
1922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** __weak void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef* hadc)
1924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 2490              		.loc 1 1924 1
 2491              		.cfi_startproc
 2492              		@ args = 0, pretend = 0, frame = 8
 2493              		@ frame_needed = 1, uses_anonymous_args = 0
 2494              		@ link register save eliminated.
 2495 0000 80B4     		push	{r7}
 2496              	.LCFI79:
 2497              		.cfi_def_cfa_offset 4
 2498              		.cfi_offset 7, -4
 2499 0002 83B0     		sub	sp, sp, #12
 2500              	.LCFI80:
 2501              		.cfi_def_cfa_offset 16
 2502 0004 00AF     		add	r7, sp, #0
 2503              	.LCFI81:
 2504              		.cfi_def_cfa_register 7
 2505 0006 7860     		str	r0, [r7, #4]
1925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   UNUSED(hadc);
1927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****             function HAL_ADC_ConvHalfCpltCallback must be implemented in the user file.
1929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 2506              		.loc 1 1930 1
 2507 0008 00BF     		nop
 2508 000a 0C37     		adds	r7, r7, #12
 2509              	.LCFI82:
 2510              		.cfi_def_cfa_offset 4
 2511 000c BD46     		mov	sp, r7
 2512              	.LCFI83:
 2513              		.cfi_def_cfa_register 13
 2514              		@ sp needed
 2515 000e 80BC     		pop	{r7}
 2516              	.LCFI84:
 2517              		.cfi_restore 7
 2518              		.cfi_def_cfa_offset 0
 2519 0010 7047     		bx	lr
 2520              		.cfi_endproc
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 79


 2521              	.LFE80:
 2523              		.section	.text.HAL_ADC_LevelOutOfWindowCallback,"ax",%progbits
 2524              		.align	1
 2525              		.weak	HAL_ADC_LevelOutOfWindowCallback
 2526              		.syntax unified
 2527              		.thumb
 2528              		.thumb_func
 2530              	HAL_ADC_LevelOutOfWindowCallback:
 2531              	.LFB81:
1931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Analog watchdog callback in non blocking mode. 
1934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval None
1936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** __weak void HAL_ADC_LevelOutOfWindowCallback(ADC_HandleTypeDef* hadc)
1938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 2532              		.loc 1 1938 1
 2533              		.cfi_startproc
 2534              		@ args = 0, pretend = 0, frame = 8
 2535              		@ frame_needed = 1, uses_anonymous_args = 0
 2536              		@ link register save eliminated.
 2537 0000 80B4     		push	{r7}
 2538              	.LCFI85:
 2539              		.cfi_def_cfa_offset 4
 2540              		.cfi_offset 7, -4
 2541 0002 83B0     		sub	sp, sp, #12
 2542              	.LCFI86:
 2543              		.cfi_def_cfa_offset 16
 2544 0004 00AF     		add	r7, sp, #0
 2545              	.LCFI87:
 2546              		.cfi_def_cfa_register 7
 2547 0006 7860     		str	r0, [r7, #4]
1939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   UNUSED(hadc);
1941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****             function HAL_ADC_LevelOutOfWindowCallback must be implemented in the user file.
1943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 2548              		.loc 1 1944 1
 2549 0008 00BF     		nop
 2550 000a 0C37     		adds	r7, r7, #12
 2551              	.LCFI88:
 2552              		.cfi_def_cfa_offset 4
 2553 000c BD46     		mov	sp, r7
 2554              	.LCFI89:
 2555              		.cfi_def_cfa_register 13
 2556              		@ sp needed
 2557 000e 80BC     		pop	{r7}
 2558              	.LCFI90:
 2559              		.cfi_restore 7
 2560              		.cfi_def_cfa_offset 0
 2561 0010 7047     		bx	lr
 2562              		.cfi_endproc
 2563              	.LFE81:
 2565              		.section	.text.HAL_ADC_ErrorCallback,"ax",%progbits
 2566              		.align	1
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 80


 2567              		.weak	HAL_ADC_ErrorCallback
 2568              		.syntax unified
 2569              		.thumb
 2570              		.thumb_func
 2572              	HAL_ADC_ErrorCallback:
 2573              	.LFB82:
1945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1946:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  ADC error callback in non blocking mode
1948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *        (ADC conversion with interruption or transfer by DMA)
1949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval None
1951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** __weak void HAL_ADC_ErrorCallback(ADC_HandleTypeDef *hadc)
1953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 2574              		.loc 1 1953 1
 2575              		.cfi_startproc
 2576              		@ args = 0, pretend = 0, frame = 8
 2577              		@ frame_needed = 1, uses_anonymous_args = 0
 2578              		@ link register save eliminated.
 2579 0000 80B4     		push	{r7}
 2580              	.LCFI91:
 2581              		.cfi_def_cfa_offset 4
 2582              		.cfi_offset 7, -4
 2583 0002 83B0     		sub	sp, sp, #12
 2584              	.LCFI92:
 2585              		.cfi_def_cfa_offset 16
 2586 0004 00AF     		add	r7, sp, #0
 2587              	.LCFI93:
 2588              		.cfi_def_cfa_register 7
 2589 0006 7860     		str	r0, [r7, #4]
1954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   UNUSED(hadc);
1956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****             function HAL_ADC_ErrorCallback must be implemented in the user file.
1958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 2590              		.loc 1 1959 1
 2591 0008 00BF     		nop
 2592 000a 0C37     		adds	r7, r7, #12
 2593              	.LCFI94:
 2594              		.cfi_def_cfa_offset 4
 2595 000c BD46     		mov	sp, r7
 2596              	.LCFI95:
 2597              		.cfi_def_cfa_register 13
 2598              		@ sp needed
 2599 000e 80BC     		pop	{r7}
 2600              	.LCFI96:
 2601              		.cfi_restore 7
 2602              		.cfi_def_cfa_offset 0
 2603 0010 7047     		bx	lr
 2604              		.cfi_endproc
 2605              	.LFE82:
 2607              		.section	.text.HAL_ADC_ConfigChannel,"ax",%progbits
 2608              		.align	1
 2609              		.global	HAL_ADC_ConfigChannel
 2610              		.syntax unified
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 81


 2611              		.thumb
 2612              		.thumb_func
 2614              	HAL_ADC_ConfigChannel:
 2615              	.LFB83:
1960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @}
1964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group3 Peripheral Control functions
1967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  *  @brief    Peripheral Control functions
1968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  *
1969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** @verbatim   
1970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  ===============================================================================
1971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              ##### Peripheral Control functions #####
1972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  ===============================================================================  
1973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     [..]  This section provides functions allowing to:
1974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Configure channels on regular group
1975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Configure the analog watchdog
1976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** @endverbatim
1978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @{
1979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Configures the the selected channel to be linked to the regular
1983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         group.
1984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   In case of usage of internal measurement channels:
1985:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         Vbat/VrefInt/TempSensor.
1986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         These internal paths can be be disabled using function 
1987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         HAL_ADC_DeInit().
1988:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
1989:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         This function initializes channel into regular group, following  
1990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         calls to this function can be used to reconfigure some parameters 
1991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         of structure "ADC_ChannelConfTypeDef" on the fly, without resetting 
1992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         the ADC.
1993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
1994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         For parameters constraints, see comments of structure 
1995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         "ADC_ChannelConfTypeDef".
1996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  sConfig: Structure of ADC channel for regular group.
1998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval HAL status
1999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
2000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef* hadc, ADC_ChannelConfTypeDef* sConfig)
2001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** { 
 2616              		.loc 1 2001 1
 2617              		.cfi_startproc
 2618              		@ args = 0, pretend = 0, frame = 16
 2619              		@ frame_needed = 1, uses_anonymous_args = 0
 2620              		@ link register save eliminated.
 2621 0000 80B4     		push	{r7}
 2622              	.LCFI97:
 2623              		.cfi_def_cfa_offset 4
 2624              		.cfi_offset 7, -4
 2625 0002 85B0     		sub	sp, sp, #20
 2626              	.LCFI98:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 82


 2627              		.cfi_def_cfa_offset 24
 2628 0004 00AF     		add	r7, sp, #0
 2629              	.LCFI99:
 2630              		.cfi_def_cfa_register 7
 2631 0006 7860     		str	r0, [r7, #4]
 2632 0008 3960     		str	r1, [r7]
2002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2633              		.loc 1 2002 21
 2634 000a 0023     		movs	r3, #0
 2635 000c FB73     		strb	r3, [r7, #15]
2003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0U;
 2636              		.loc 1 2003 17
 2637 000e 0023     		movs	r3, #0
 2638 0010 BB60     		str	r3, [r7, #8]
2004:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
2005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
2006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_CHANNEL(sConfig->Channel));
2008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
2009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
2010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
2011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Process locked */
2012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_LOCK(hadc);
 2639              		.loc 1 2012 3
 2640 0012 7B68     		ldr	r3, [r7, #4]
 2641 0014 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 2642 0018 012B     		cmp	r3, #1
 2643 001a 01D1     		bne	.L146
 2644              		.loc 1 2012 3 is_stmt 0 discriminator 1
 2645 001c 0223     		movs	r3, #2
 2646 001e DCE0     		b	.L147
 2647              	.L146:
 2648              		.loc 1 2012 3 discriminator 2
 2649 0020 7B68     		ldr	r3, [r7, #4]
 2650 0022 0122     		movs	r2, #1
 2651 0024 83F82420 		strb	r2, [r3, #36]
2013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
2014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
2015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Regular sequence configuration */
2016:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* For Rank 1 to 6 */
2017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (sConfig->Rank < 7U)
 2652              		.loc 1 2017 14 is_stmt 1 discriminator 2
 2653 0028 3B68     		ldr	r3, [r7]
 2654 002a 5B68     		ldr	r3, [r3, #4]
 2655              		.loc 1 2017 6 discriminator 2
 2656 002c 062B     		cmp	r3, #6
 2657 002e 1CD8     		bhi	.L148
2018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
2019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->SQR3                        ,
 2658              		.loc 1 2019 5
 2659 0030 7B68     		ldr	r3, [r7, #4]
 2660 0032 1B68     		ldr	r3, [r3]
 2661 0034 596B     		ldr	r1, [r3, #52]
 2662 0036 3B68     		ldr	r3, [r7]
 2663 0038 5A68     		ldr	r2, [r3, #4]
 2664 003a 1346     		mov	r3, r2
 2665 003c 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 83


 2666 003e 1344     		add	r3, r3, r2
 2667 0040 053B     		subs	r3, r3, #5
 2668 0042 1F22     		movs	r2, #31
 2669 0044 02FA03F3 		lsl	r3, r2, r3
 2670 0048 DB43     		mvns	r3, r3
 2671 004a 1940     		ands	r1, r1, r3
 2672 004c 3B68     		ldr	r3, [r7]
 2673 004e 1868     		ldr	r0, [r3]
 2674 0050 3B68     		ldr	r3, [r7]
 2675 0052 5A68     		ldr	r2, [r3, #4]
 2676 0054 1346     		mov	r3, r2
 2677 0056 9B00     		lsls	r3, r3, #2
 2678 0058 1344     		add	r3, r3, r2
 2679 005a 053B     		subs	r3, r3, #5
 2680 005c 00FA03F2 		lsl	r2, r0, r3
 2681 0060 7B68     		ldr	r3, [r7, #4]
 2682 0062 1B68     		ldr	r3, [r3]
 2683 0064 0A43     		orrs	r2, r2, r1
 2684 0066 5A63     		str	r2, [r3, #52]
 2685 0068 3CE0     		b	.L149
 2686              	.L148:
2020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank)    ,
2021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SQR3_RK(sConfig->Channel, sConfig->Rank) );
2022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
2023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* For Rank 7 to 12 */
2024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   else if (sConfig->Rank < 13U)
 2687              		.loc 1 2024 19
 2688 006a 3B68     		ldr	r3, [r7]
 2689 006c 5B68     		ldr	r3, [r3, #4]
 2690              		.loc 1 2024 11
 2691 006e 0C2B     		cmp	r3, #12
 2692 0070 1CD8     		bhi	.L150
2025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
2026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->SQR2                        ,
 2693              		.loc 1 2026 5
 2694 0072 7B68     		ldr	r3, [r7, #4]
 2695 0074 1B68     		ldr	r3, [r3]
 2696 0076 196B     		ldr	r1, [r3, #48]
 2697 0078 3B68     		ldr	r3, [r7]
 2698 007a 5A68     		ldr	r2, [r3, #4]
 2699 007c 1346     		mov	r3, r2
 2700 007e 9B00     		lsls	r3, r3, #2
 2701 0080 1344     		add	r3, r3, r2
 2702 0082 233B     		subs	r3, r3, #35
 2703 0084 1F22     		movs	r2, #31
 2704 0086 02FA03F3 		lsl	r3, r2, r3
 2705 008a DB43     		mvns	r3, r3
 2706 008c 1940     		ands	r1, r1, r3
 2707 008e 3B68     		ldr	r3, [r7]
 2708 0090 1868     		ldr	r0, [r3]
 2709 0092 3B68     		ldr	r3, [r7]
 2710 0094 5A68     		ldr	r2, [r3, #4]
 2711 0096 1346     		mov	r3, r2
 2712 0098 9B00     		lsls	r3, r3, #2
 2713 009a 1344     		add	r3, r3, r2
 2714 009c 233B     		subs	r3, r3, #35
 2715 009e 00FA03F2 		lsl	r2, r0, r3
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 84


 2716 00a2 7B68     		ldr	r3, [r7, #4]
 2717 00a4 1B68     		ldr	r3, [r3]
 2718 00a6 0A43     		orrs	r2, r2, r1
 2719 00a8 1A63     		str	r2, [r3, #48]
 2720 00aa 1BE0     		b	.L149
 2721              	.L150:
2027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank)    ,
2028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SQR2_RK(sConfig->Channel, sConfig->Rank) );
2029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
2030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* For Rank 13 to 16 */
2031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   else
2032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
2033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->SQR1                        ,
 2722              		.loc 1 2033 5
 2723 00ac 7B68     		ldr	r3, [r7, #4]
 2724 00ae 1B68     		ldr	r3, [r3]
 2725 00b0 D96A     		ldr	r1, [r3, #44]
 2726 00b2 3B68     		ldr	r3, [r7]
 2727 00b4 5A68     		ldr	r2, [r3, #4]
 2728 00b6 1346     		mov	r3, r2
 2729 00b8 9B00     		lsls	r3, r3, #2
 2730 00ba 1344     		add	r3, r3, r2
 2731 00bc 413B     		subs	r3, r3, #65
 2732 00be 1F22     		movs	r2, #31
 2733 00c0 02FA03F3 		lsl	r3, r2, r3
 2734 00c4 DB43     		mvns	r3, r3
 2735 00c6 1940     		ands	r1, r1, r3
 2736 00c8 3B68     		ldr	r3, [r7]
 2737 00ca 1868     		ldr	r0, [r3]
 2738 00cc 3B68     		ldr	r3, [r7]
 2739 00ce 5A68     		ldr	r2, [r3, #4]
 2740 00d0 1346     		mov	r3, r2
 2741 00d2 9B00     		lsls	r3, r3, #2
 2742 00d4 1344     		add	r3, r3, r2
 2743 00d6 413B     		subs	r3, r3, #65
 2744 00d8 00FA03F2 		lsl	r2, r0, r3
 2745 00dc 7B68     		ldr	r3, [r7, #4]
 2746 00de 1B68     		ldr	r3, [r3]
 2747 00e0 0A43     		orrs	r2, r2, r1
 2748 00e2 DA62     		str	r2, [r3, #44]
 2749              	.L149:
2034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank)   ,
2035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SQR1_RK(sConfig->Channel, sConfig->Rank) );
2036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
2037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
2038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
2039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Channel sampling time configuration */
2040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* For channels 10 to 17 */
2041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (sConfig->Channel >= ADC_CHANNEL_10)
 2750              		.loc 1 2041 14
 2751 00e4 3B68     		ldr	r3, [r7]
 2752 00e6 1B68     		ldr	r3, [r3]
 2753              		.loc 1 2041 6
 2754 00e8 092B     		cmp	r3, #9
 2755 00ea 1CD9     		bls	.L151
2042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
2043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->SMPR1                             ,
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 85


 2756              		.loc 1 2043 5
 2757 00ec 7B68     		ldr	r3, [r7, #4]
 2758 00ee 1B68     		ldr	r3, [r3]
 2759 00f0 D968     		ldr	r1, [r3, #12]
 2760 00f2 3B68     		ldr	r3, [r7]
 2761 00f4 1A68     		ldr	r2, [r3]
 2762 00f6 1346     		mov	r3, r2
 2763 00f8 5B00     		lsls	r3, r3, #1
 2764 00fa 1344     		add	r3, r3, r2
 2765 00fc 1E3B     		subs	r3, r3, #30
 2766 00fe 0722     		movs	r2, #7
 2767 0100 02FA03F3 		lsl	r3, r2, r3
 2768 0104 DB43     		mvns	r3, r3
 2769 0106 1940     		ands	r1, r1, r3
 2770 0108 3B68     		ldr	r3, [r7]
 2771 010a 9868     		ldr	r0, [r3, #8]
 2772 010c 3B68     		ldr	r3, [r7]
 2773 010e 1A68     		ldr	r2, [r3]
 2774 0110 1346     		mov	r3, r2
 2775 0112 5B00     		lsls	r3, r3, #1
 2776 0114 1344     		add	r3, r3, r2
 2777 0116 1E3B     		subs	r3, r3, #30
 2778 0118 00FA03F2 		lsl	r2, r0, r3
 2779 011c 7B68     		ldr	r3, [r7, #4]
 2780 011e 1B68     		ldr	r3, [r3]
 2781 0120 0A43     		orrs	r2, r2, r1
 2782 0122 DA60     		str	r2, [r3, #12]
 2783 0124 19E0     		b	.L152
 2784              	.L151:
2044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel)      ,
2045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel) );
2046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
2047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   else /* For channels 0 to 9 */
2048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
2049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->SMPR2                             ,
 2785              		.loc 1 2049 5
 2786 0126 7B68     		ldr	r3, [r7, #4]
 2787 0128 1B68     		ldr	r3, [r3]
 2788 012a 1969     		ldr	r1, [r3, #16]
 2789 012c 3B68     		ldr	r3, [r7]
 2790 012e 1A68     		ldr	r2, [r3]
 2791 0130 1346     		mov	r3, r2
 2792 0132 5B00     		lsls	r3, r3, #1
 2793 0134 1344     		add	r3, r3, r2
 2794 0136 0722     		movs	r2, #7
 2795 0138 02FA03F3 		lsl	r3, r2, r3
 2796 013c DB43     		mvns	r3, r3
 2797 013e 1940     		ands	r1, r1, r3
 2798 0140 3B68     		ldr	r3, [r7]
 2799 0142 9868     		ldr	r0, [r3, #8]
 2800 0144 3B68     		ldr	r3, [r7]
 2801 0146 1A68     		ldr	r2, [r3]
 2802 0148 1346     		mov	r3, r2
 2803 014a 5B00     		lsls	r3, r3, #1
 2804 014c 1344     		add	r3, r3, r2
 2805 014e 00FA03F2 		lsl	r2, r0, r3
 2806 0152 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 86


 2807 0154 1B68     		ldr	r3, [r3]
 2808 0156 0A43     		orrs	r2, r2, r1
 2809 0158 1A61     		str	r2, [r3, #16]
 2810              	.L152:
2050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel)       ,
2051:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel) );
2052:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
2053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
2054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* If ADC1 Channel_16 or Channel_17 is selected, enable Temperature sensor  */
2055:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* and VREFINT measurement path.                                            */
2056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) ||
 2811              		.loc 1 2056 15
 2812 015a 3B68     		ldr	r3, [r7]
 2813 015c 1B68     		ldr	r3, [r3]
 2814              		.loc 1 2056 6
 2815 015e 102B     		cmp	r3, #16
 2816 0160 03D0     		beq	.L153
2057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (sConfig->Channel == ADC_CHANNEL_VREFINT)      )
 2817              		.loc 1 2057 15 discriminator 1
 2818 0162 3B68     		ldr	r3, [r7]
 2819 0164 1B68     		ldr	r3, [r3]
2056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (sConfig->Channel == ADC_CHANNEL_VREFINT)      )
 2820              		.loc 1 2056 52 discriminator 1
 2821 0166 112B     		cmp	r3, #17
 2822 0168 32D1     		bne	.L154
 2823              	.L153:
2058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
2059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* For STM32F1 devices with several ADC: Only ADC1 can access internal    */
2060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* measurement channels (VrefInt/TempSensor). If these channels are       */
2061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* intended to be set on other ADC instances, an error is reported.       */
2062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (hadc->Instance == ADC1)
 2824              		.loc 1 2062 13
 2825 016a 7B68     		ldr	r3, [r7, #4]
 2826 016c 1B68     		ldr	r3, [r3]
 2827              		.loc 1 2062 8
 2828 016e 1D4A     		ldr	r2, .L158
 2829 0170 9342     		cmp	r3, r2
 2830 0172 25D1     		bne	.L155
2063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
2064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CR2, ADC_CR2_TSVREFE) == RESET)
 2831              		.loc 1 2064 11
 2832 0174 7B68     		ldr	r3, [r7, #4]
 2833 0176 1B68     		ldr	r3, [r3]
 2834 0178 9B68     		ldr	r3, [r3, #8]
 2835 017a 03F40003 		and	r3, r3, #8388608
 2836              		.loc 1 2064 10
 2837 017e 002B     		cmp	r3, #0
 2838 0180 26D1     		bne	.L154
2065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
2066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         SET_BIT(hadc->Instance->CR2, ADC_CR2_TSVREFE);
 2839              		.loc 1 2066 9
 2840 0182 7B68     		ldr	r3, [r7, #4]
 2841 0184 1B68     		ldr	r3, [r3]
 2842 0186 9A68     		ldr	r2, [r3, #8]
 2843 0188 7B68     		ldr	r3, [r7, #4]
 2844 018a 1B68     		ldr	r3, [r3]
 2845 018c 42F40002 		orr	r2, r2, #8388608
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 87


 2846 0190 9A60     		str	r2, [r3, #8]
2067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
2068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         if (sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
 2847              		.loc 1 2068 20
 2848 0192 3B68     		ldr	r3, [r7]
 2849 0194 1B68     		ldr	r3, [r3]
 2850              		.loc 1 2068 12
 2851 0196 102B     		cmp	r3, #16
 2852 0198 1AD1     		bne	.L154
2069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         {
2070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           /* Delay for temperature sensor stabilization time */
2071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           /* Compute number of CPU cycles to wait for */
2072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           wait_loop_index = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 2853              		.loc 1 2072 73
 2854 019a 134B     		ldr	r3, .L158+4
 2855 019c 1B68     		ldr	r3, [r3]
 2856 019e 134A     		ldr	r2, .L158+8
 2857 01a0 A2FB0323 		umull	r2, r3, r2, r3
 2858 01a4 9A0C     		lsrs	r2, r3, #18
 2859              		.loc 1 2072 54
 2860 01a6 1346     		mov	r3, r2
 2861 01a8 9B00     		lsls	r3, r3, #2
 2862 01aa 1344     		add	r3, r3, r2
 2863 01ac 5B00     		lsls	r3, r3, #1
 2864              		.loc 1 2072 27
 2865 01ae BB60     		str	r3, [r7, #8]
2073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           while(wait_loop_index != 0U)
 2866              		.loc 1 2073 16
 2867 01b0 02E0     		b	.L156
 2868              	.L157:
2074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           {
2075:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****             wait_loop_index--;
 2869              		.loc 1 2075 28
 2870 01b2 BB68     		ldr	r3, [r7, #8]
 2871 01b4 013B     		subs	r3, r3, #1
 2872 01b6 BB60     		str	r3, [r7, #8]
 2873              	.L156:
2073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           while(wait_loop_index != 0U)
 2874              		.loc 1 2073 33
 2875 01b8 BB68     		ldr	r3, [r7, #8]
 2876 01ba 002B     		cmp	r3, #0
 2877 01bc F9D1     		bne	.L157
 2878 01be 07E0     		b	.L154
 2879              	.L155:
2076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           }
2077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         }
2078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
2079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
2080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     else
2081:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
2082:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Update ADC state machine to error */
2083:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 2880              		.loc 1 2083 7
 2881 01c0 7B68     		ldr	r3, [r7, #4]
 2882 01c2 9B6A     		ldr	r3, [r3, #40]
 2883 01c4 43F02002 		orr	r2, r3, #32
 2884 01c8 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 88


 2885 01ca 9A62     		str	r2, [r3, #40]
2084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
2085:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       tmp_hal_status = HAL_ERROR;
 2886              		.loc 1 2085 22
 2887 01cc 0123     		movs	r3, #1
 2888 01ce FB73     		strb	r3, [r7, #15]
 2889              	.L154:
2086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
2087:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
2088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
2089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Process unlocked */
2090:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 2890              		.loc 1 2090 3
 2891 01d0 7B68     		ldr	r3, [r7, #4]
 2892 01d2 0022     		movs	r2, #0
 2893 01d4 83F82420 		strb	r2, [r3, #36]
2091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
2092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return function status */
2093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return tmp_hal_status;
 2894              		.loc 1 2093 10
 2895 01d8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2896              	.L147:
2094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 2897              		.loc 1 2094 1
 2898 01da 1846     		mov	r0, r3
 2899 01dc 1437     		adds	r7, r7, #20
 2900              	.LCFI100:
 2901              		.cfi_def_cfa_offset 4
 2902 01de BD46     		mov	sp, r7
 2903              	.LCFI101:
 2904              		.cfi_def_cfa_register 13
 2905              		@ sp needed
 2906 01e0 80BC     		pop	{r7}
 2907              	.LCFI102:
 2908              		.cfi_restore 7
 2909              		.cfi_def_cfa_offset 0
 2910 01e2 7047     		bx	lr
 2911              	.L159:
 2912              		.align	2
 2913              	.L158:
 2914 01e4 00240140 		.word	1073816576
 2915 01e8 00000000 		.word	SystemCoreClock
 2916 01ec 83DE1B43 		.word	1125899907
 2917              		.cfi_endproc
 2918              	.LFE83:
 2920              		.section	.text.HAL_ADC_AnalogWDGConfig,"ax",%progbits
 2921              		.align	1
 2922              		.global	HAL_ADC_AnalogWDGConfig
 2923              		.syntax unified
 2924              		.thumb
 2925              		.thumb_func
 2927              	HAL_ADC_AnalogWDGConfig:
 2928              	.LFB84:
2095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
2096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
2097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Configures the analog watchdog.
2098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   Analog watchdog thresholds can be modified while ADC conversion
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 89


2099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         is on going.
2100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         In this case, some constraints must be taken into account:
2101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         the programmed threshold values are effective from the next
2102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         ADC EOC (end of unitary conversion).
2103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         Considering that registers write delay may happen due to
2104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         bus activity, this might cause an uncertainty on the
2105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         effective timing of the new programmed threshold values.
2106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
2107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  AnalogWDGConfig: Structure of ADC analog watchdog configuration
2108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval HAL status
2109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
2110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_AnalogWDGConfig(ADC_HandleTypeDef* hadc, ADC_AnalogWDGConfTypeDef* Analog
2111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 2929              		.loc 1 2111 1
 2930              		.cfi_startproc
 2931              		@ args = 0, pretend = 0, frame = 8
 2932              		@ frame_needed = 1, uses_anonymous_args = 0
 2933              		@ link register save eliminated.
 2934 0000 80B4     		push	{r7}
 2935              	.LCFI103:
 2936              		.cfi_def_cfa_offset 4
 2937              		.cfi_offset 7, -4
 2938 0002 83B0     		sub	sp, sp, #12
 2939              	.LCFI104:
 2940              		.cfi_def_cfa_offset 16
 2941 0004 00AF     		add	r7, sp, #0
 2942              	.LCFI105:
 2943              		.cfi_def_cfa_register 7
 2944 0006 7860     		str	r0, [r7, #4]
 2945 0008 3960     		str	r1, [r7]
2112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
2113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_MODE(AnalogWDGConfig->WatchdogMode));
2115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
2116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(AnalogWDGConfig->HighThreshold));
2117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(AnalogWDGConfig->LowThreshold));
2118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
2119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if((AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REG)     ||
 2946              		.loc 1 2119 22
 2947 000a 3B68     		ldr	r3, [r7]
 2948 000c 1B68     		ldr	r3, [r3]
 2949              		.loc 1 2119 5
 2950 000e 244A     		ldr	r2, .L166
 2951 0010 9342     		cmp	r3, r2
 2952 0012 03D0     		beq	.L161
2120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_INJEC)   ||
 2953              		.loc 1 2120 22 discriminator 1
 2954 0014 3B68     		ldr	r3, [r7]
 2955 0016 1B68     		ldr	r3, [r3]
2119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_INJEC)   ||
 2956              		.loc 1 2119 75 discriminator 1
 2957 0018 224A     		ldr	r2, .L166+4
 2958 001a 9342     		cmp	r3, r2
 2959              	.L161:
2121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REGINJEC)  )
2122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
2123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     assert_param(IS_ADC_CHANNEL(AnalogWDGConfig->Channel));
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 90


2124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
2125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
2126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Process locked */
2127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_LOCK(hadc);
 2960              		.loc 1 2127 3
 2961 001c 7B68     		ldr	r3, [r7, #4]
 2962 001e 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 2963 0022 012B     		cmp	r3, #1
 2964 0024 01D1     		bne	.L162
 2965              		.loc 1 2127 3 is_stmt 0 discriminator 1
 2966 0026 0223     		movs	r3, #2
 2967 0028 35E0     		b	.L163
 2968              	.L162:
 2969              		.loc 1 2127 3 discriminator 2
 2970 002a 7B68     		ldr	r3, [r7, #4]
 2971 002c 0122     		movs	r2, #1
 2972 002e 83F82420 		strb	r2, [r3, #36]
2128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
2129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Analog watchdog configuration */
2130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
2131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Configure ADC Analog watchdog interrupt */
2132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if(AnalogWDGConfig->ITMode == ENABLE)
 2973              		.loc 1 2132 21 is_stmt 1 discriminator 2
 2974 0032 3B68     		ldr	r3, [r7]
 2975 0034 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 2976              		.loc 1 2132 5 discriminator 2
 2977 0036 012B     		cmp	r3, #1
 2978 0038 08D1     		bne	.L164
2133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
2134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Enable the ADC Analog watchdog interrupt */
2135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_ADC_ENABLE_IT(hadc, ADC_IT_AWD);
 2979              		.loc 1 2135 5
 2980 003a 7B68     		ldr	r3, [r7, #4]
 2981 003c 1B68     		ldr	r3, [r3]
 2982 003e 5A68     		ldr	r2, [r3, #4]
 2983 0040 7B68     		ldr	r3, [r7, #4]
 2984 0042 1B68     		ldr	r3, [r3]
 2985 0044 42F04002 		orr	r2, r2, #64
 2986 0048 5A60     		str	r2, [r3, #4]
 2987 004a 07E0     		b	.L165
 2988              	.L164:
2136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
2137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   else
2138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
2139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Disable the ADC Analog watchdog interrupt */
2140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_AWD);
 2989              		.loc 1 2140 5
 2990 004c 7B68     		ldr	r3, [r7, #4]
 2991 004e 1B68     		ldr	r3, [r3]
 2992 0050 5A68     		ldr	r2, [r3, #4]
 2993 0052 7B68     		ldr	r3, [r7, #4]
 2994 0054 1B68     		ldr	r3, [r3]
 2995 0056 22F04002 		bic	r2, r2, #64
 2996 005a 5A60     		str	r2, [r3, #4]
 2997              	.L165:
2141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
2142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 91


2143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Configuration of analog watchdog:                                        */
2144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*  - Set the analog watchdog enable mode: regular and/or injected groups,  */
2145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*    one or all channels.                                                  */
2146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*  - Set the Analog watchdog channel (is not used if watchdog              */
2147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*    mode "all channels": ADC_CFGR_AWD1SGL=0).                             */
2148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   MODIFY_REG(hadc->Instance->CR1            ,
 2998              		.loc 1 2148 3
 2999 005c 7B68     		ldr	r3, [r7, #4]
 3000 005e 1B68     		ldr	r3, [r3]
 3001 0060 5A68     		ldr	r2, [r3, #4]
 3002 0062 114B     		ldr	r3, .L166+8
 3003 0064 1340     		ands	r3, r3, r2
 3004 0066 3A68     		ldr	r2, [r7]
 3005 0068 1168     		ldr	r1, [r2]
 3006 006a 3A68     		ldr	r2, [r7]
 3007 006c 5268     		ldr	r2, [r2, #4]
 3008 006e 1143     		orrs	r1, r1, r2
 3009 0070 7A68     		ldr	r2, [r7, #4]
 3010 0072 1268     		ldr	r2, [r2]
 3011 0074 0B43     		orrs	r3, r3, r1
 3012 0076 5360     		str	r3, [r2, #4]
2149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              ADC_CR1_AWDSGL |
2150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              ADC_CR1_JAWDEN |
2151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              ADC_CR1_AWDEN  |
2152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              ADC_CR1_AWDCH                  ,
2153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              AnalogWDGConfig->WatchdogMode |
2154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              AnalogWDGConfig->Channel        );
2155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
2156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Set the high threshold */
2157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   WRITE_REG(hadc->Instance->HTR, AnalogWDGConfig->HighThreshold);
 3013              		.loc 1 2157 3
 3014 0078 7B68     		ldr	r3, [r7, #4]
 3015 007a 1B68     		ldr	r3, [r3]
 3016 007c 3A68     		ldr	r2, [r7]
 3017 007e D268     		ldr	r2, [r2, #12]
 3018 0080 5A62     		str	r2, [r3, #36]
2158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
2159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Set the low threshold */
2160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   WRITE_REG(hadc->Instance->LTR, AnalogWDGConfig->LowThreshold);
 3019              		.loc 1 2160 3
 3020 0082 7B68     		ldr	r3, [r7, #4]
 3021 0084 1B68     		ldr	r3, [r3]
 3022 0086 3A68     		ldr	r2, [r7]
 3023 0088 1269     		ldr	r2, [r2, #16]
 3024 008a 9A62     		str	r2, [r3, #40]
2161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
2162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Process unlocked */
2163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 3025              		.loc 1 2163 3
 3026 008c 7B68     		ldr	r3, [r7, #4]
 3027 008e 0022     		movs	r2, #0
 3028 0090 83F82420 		strb	r2, [r3, #36]
2164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
2165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return function status */
2166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return HAL_OK;
 3029              		.loc 1 2166 10
 3030 0094 0023     		movs	r3, #0
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 92


 3031              	.L163:
2167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 3032              		.loc 1 2167 1
 3033 0096 1846     		mov	r0, r3
 3034 0098 0C37     		adds	r7, r7, #12
 3035              	.LCFI106:
 3036              		.cfi_def_cfa_offset 4
 3037 009a BD46     		mov	sp, r7
 3038              	.LCFI107:
 3039              		.cfi_def_cfa_register 13
 3040              		@ sp needed
 3041 009c 80BC     		pop	{r7}
 3042              	.LCFI108:
 3043              		.cfi_restore 7
 3044              		.cfi_def_cfa_offset 0
 3045 009e 7047     		bx	lr
 3046              	.L167:
 3047              		.align	2
 3048              	.L166:
 3049 00a0 00028000 		.word	8389120
 3050 00a4 00024000 		.word	4194816
 3051 00a8 E0FD3FFF 		.word	-12583456
 3052              		.cfi_endproc
 3053              	.LFE84:
 3055              		.section	.text.HAL_ADC_GetState,"ax",%progbits
 3056              		.align	1
 3057              		.global	HAL_ADC_GetState
 3058              		.syntax unified
 3059              		.thumb
 3060              		.thumb_func
 3062              	HAL_ADC_GetState:
 3063              	.LFB85:
2168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
2169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
2170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
2171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @}
2172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
2173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
2174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
2175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group4 Peripheral State functions
2176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  *  @brief    Peripheral State functions
2177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  *
2178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** @verbatim
2179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  ===============================================================================
2180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****             ##### Peripheral State and Errors functions #####
2181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  ===============================================================================  
2182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     [..]
2183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     This subsection provides functions to get in run-time the status of the  
2184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     peripheral.
2185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Check the ADC state
2186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Check the ADC error code
2187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
2188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** @endverbatim
2189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @{
2190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
2191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
2192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 93


2193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  return the ADC state
2194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
2195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval HAL state
2196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
2197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** uint32_t HAL_ADC_GetState(ADC_HandleTypeDef* hadc)
2198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 3064              		.loc 1 2198 1
 3065              		.cfi_startproc
 3066              		@ args = 0, pretend = 0, frame = 8
 3067              		@ frame_needed = 1, uses_anonymous_args = 0
 3068              		@ link register save eliminated.
 3069 0000 80B4     		push	{r7}
 3070              	.LCFI109:
 3071              		.cfi_def_cfa_offset 4
 3072              		.cfi_offset 7, -4
 3073 0002 83B0     		sub	sp, sp, #12
 3074              	.LCFI110:
 3075              		.cfi_def_cfa_offset 16
 3076 0004 00AF     		add	r7, sp, #0
 3077              	.LCFI111:
 3078              		.cfi_def_cfa_register 7
 3079 0006 7860     		str	r0, [r7, #4]
2199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return ADC state */
2200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return hadc->State;
 3080              		.loc 1 2200 14
 3081 0008 7B68     		ldr	r3, [r7, #4]
 3082 000a 9B6A     		ldr	r3, [r3, #40]
2201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 3083              		.loc 1 2201 1
 3084 000c 1846     		mov	r0, r3
 3085 000e 0C37     		adds	r7, r7, #12
 3086              	.LCFI112:
 3087              		.cfi_def_cfa_offset 4
 3088 0010 BD46     		mov	sp, r7
 3089              	.LCFI113:
 3090              		.cfi_def_cfa_register 13
 3091              		@ sp needed
 3092 0012 80BC     		pop	{r7}
 3093              	.LCFI114:
 3094              		.cfi_restore 7
 3095              		.cfi_def_cfa_offset 0
 3096 0014 7047     		bx	lr
 3097              		.cfi_endproc
 3098              	.LFE85:
 3100              		.section	.text.HAL_ADC_GetError,"ax",%progbits
 3101              		.align	1
 3102              		.global	HAL_ADC_GetError
 3103              		.syntax unified
 3104              		.thumb
 3105              		.thumb_func
 3107              	HAL_ADC_GetError:
 3108              	.LFB86:
2202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
2203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
2204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Return the ADC error code
2205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
2206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval ADC Error Code
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 94


2207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
2208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** uint32_t HAL_ADC_GetError(ADC_HandleTypeDef *hadc)
2209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 3109              		.loc 1 2209 1
 3110              		.cfi_startproc
 3111              		@ args = 0, pretend = 0, frame = 8
 3112              		@ frame_needed = 1, uses_anonymous_args = 0
 3113              		@ link register save eliminated.
 3114 0000 80B4     		push	{r7}
 3115              	.LCFI115:
 3116              		.cfi_def_cfa_offset 4
 3117              		.cfi_offset 7, -4
 3118 0002 83B0     		sub	sp, sp, #12
 3119              	.LCFI116:
 3120              		.cfi_def_cfa_offset 16
 3121 0004 00AF     		add	r7, sp, #0
 3122              	.LCFI117:
 3123              		.cfi_def_cfa_register 7
 3124 0006 7860     		str	r0, [r7, #4]
2210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return hadc->ErrorCode;
 3125              		.loc 1 2210 14
 3126 0008 7B68     		ldr	r3, [r7, #4]
 3127 000a DB6A     		ldr	r3, [r3, #44]
2211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 3128              		.loc 1 2211 1
 3129 000c 1846     		mov	r0, r3
 3130 000e 0C37     		adds	r7, r7, #12
 3131              	.LCFI118:
 3132              		.cfi_def_cfa_offset 4
 3133 0010 BD46     		mov	sp, r7
 3134              	.LCFI119:
 3135              		.cfi_def_cfa_register 13
 3136              		@ sp needed
 3137 0012 80BC     		pop	{r7}
 3138              	.LCFI120:
 3139              		.cfi_restore 7
 3140              		.cfi_def_cfa_offset 0
 3141 0014 7047     		bx	lr
 3142              		.cfi_endproc
 3143              	.LFE86:
 3145              		.section	.text.ADC_Enable,"ax",%progbits
 3146              		.align	1
 3147              		.global	ADC_Enable
 3148              		.syntax unified
 3149              		.thumb
 3150              		.thumb_func
 3152              	ADC_Enable:
 3153              	.LFB87:
2212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
2213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
2214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @}
2215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
2216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
2217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
2218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @}
2219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
2220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 95


2221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /** @defgroup ADC_Private_Functions ADC Private Functions
2222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @{
2223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
2224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
2225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
2226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Enable the selected ADC.
2227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC must be disabled
2228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         and voltage regulator must be enabled (done into HAL_ADC_Init()).
2229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
2230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval HAL status.
2231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
2232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef ADC_Enable(ADC_HandleTypeDef* hadc)
2233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 3154              		.loc 1 2233 1
 3155              		.cfi_startproc
 3156              		@ args = 0, pretend = 0, frame = 16
 3157              		@ frame_needed = 1, uses_anonymous_args = 0
 3158 0000 80B5     		push	{r7, lr}
 3159              	.LCFI121:
 3160              		.cfi_def_cfa_offset 8
 3161              		.cfi_offset 7, -8
 3162              		.cfi_offset 14, -4
 3163 0002 84B0     		sub	sp, sp, #16
 3164              	.LCFI122:
 3165              		.cfi_def_cfa_offset 24
 3166 0004 00AF     		add	r7, sp, #0
 3167              	.LCFI123:
 3168              		.cfi_def_cfa_register 7
 3169 0006 7860     		str	r0, [r7, #4]
2234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   uint32_t tickstart = 0U;
 3170              		.loc 1 2234 12
 3171 0008 0023     		movs	r3, #0
 3172 000a FB60     		str	r3, [r7, #12]
2235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0U;
 3173              		.loc 1 2235 17
 3174 000c 0023     		movs	r3, #0
 3175 000e BB60     		str	r3, [r7, #8]
2236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
2237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* ADC enable and wait for ADC ready (in case of ADC is disabled or         */
2238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* enabling phase not yet completed: flag ADC ready not yet set).           */
2239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Timeout implemented to not be stuck if ADC cannot be enabled (possible   */
2240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* causes: ADC clock not running, ...).                                     */
2241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (ADC_IS_ENABLE(hadc) == RESET)
 3176              		.loc 1 2241 7
 3177 0010 7B68     		ldr	r3, [r7, #4]
 3178 0012 1B68     		ldr	r3, [r3]
 3179 0014 9B68     		ldr	r3, [r3, #8]
 3180 0016 03F00103 		and	r3, r3, #1
 3181              		.loc 1 2241 6
 3182 001a 012B     		cmp	r3, #1
 3183 001c 40D0     		beq	.L173
2242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
2243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Enable the Peripheral */
2244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_ADC_ENABLE(hadc);
 3184              		.loc 1 2244 5
 3185 001e 7B68     		ldr	r3, [r7, #4]
 3186 0020 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 96


 3187 0022 9A68     		ldr	r2, [r3, #8]
 3188 0024 7B68     		ldr	r3, [r7, #4]
 3189 0026 1B68     		ldr	r3, [r3]
 3190 0028 42F00102 		orr	r2, r2, #1
 3191 002c 9A60     		str	r2, [r3, #8]
2245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
2246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Delay for ADC stabilization time */
2247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Compute number of CPU cycles to wait for */
2248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     wait_loop_index = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 3192              		.loc 1 2248 42
 3193 002e 1F4B     		ldr	r3, .L180
 3194 0030 1B68     		ldr	r3, [r3]
 3195 0032 1F4A     		ldr	r2, .L180+4
 3196 0034 A2FB0323 		umull	r2, r3, r2, r3
 3197 0038 9B0C     		lsrs	r3, r3, #18
 3198              		.loc 1 2248 21
 3199 003a BB60     		str	r3, [r7, #8]
2249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     while(wait_loop_index != 0U)
 3200              		.loc 1 2249 10
 3201 003c 02E0     		b	.L174
 3202              	.L175:
2250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
2251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       wait_loop_index--;
 3203              		.loc 1 2251 22
 3204 003e BB68     		ldr	r3, [r7, #8]
 3205 0040 013B     		subs	r3, r3, #1
 3206 0042 BB60     		str	r3, [r7, #8]
 3207              	.L174:
2249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     while(wait_loop_index != 0U)
 3208              		.loc 1 2249 27
 3209 0044 BB68     		ldr	r3, [r7, #8]
 3210 0046 002B     		cmp	r3, #0
 3211 0048 F9D1     		bne	.L175
2252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
2253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
2254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Get tick count */
2255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     tickstart = HAL_GetTick();
 3212              		.loc 1 2255 17
 3213 004a FFF7FEFF 		bl	HAL_GetTick
 3214 004e F860     		str	r0, [r7, #12]
2256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
2257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Wait for ADC effectively enabled */
2258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     while(ADC_IS_ENABLE(hadc) == RESET)
 3215              		.loc 1 2258 10
 3216 0050 1FE0     		b	.L176
 3217              	.L179:
2259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
2260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if((HAL_GetTick() - tickstart) > ADC_ENABLE_TIMEOUT)
 3218              		.loc 1 2260 11
 3219 0052 FFF7FEFF 		bl	HAL_GetTick
 3220 0056 0246     		mov	r2, r0
 3221              		.loc 1 2260 25
 3222 0058 FB68     		ldr	r3, [r7, #12]
 3223 005a D31A     		subs	r3, r2, r3
 3224              		.loc 1 2260 9
 3225 005c 022B     		cmp	r3, #2
 3226 005e 18D9     		bls	.L176
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 97


2261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
2262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
2263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         if(ADC_IS_ENABLE(hadc) == RESET)
 3227              		.loc 1 2263 12
 3228 0060 7B68     		ldr	r3, [r7, #4]
 3229 0062 1B68     		ldr	r3, [r3]
 3230 0064 9B68     		ldr	r3, [r3, #8]
 3231 0066 03F00103 		and	r3, r3, #1
 3232              		.loc 1 2263 11
 3233 006a 012B     		cmp	r3, #1
 3234 006c 11D0     		beq	.L176
2264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         {
2265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           /* Update ADC state machine to error */
2266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 3235              		.loc 1 2266 11
 3236 006e 7B68     		ldr	r3, [r7, #4]
 3237 0070 9B6A     		ldr	r3, [r3, #40]
 3238 0072 43F01002 		orr	r2, r3, #16
 3239 0076 7B68     		ldr	r3, [r7, #4]
 3240 0078 9A62     		str	r2, [r3, #40]
2267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
2268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           /* Set ADC error code to ADC IP internal error */
2269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 3241              		.loc 1 2269 11
 3242 007a 7B68     		ldr	r3, [r7, #4]
 3243 007c DB6A     		ldr	r3, [r3, #44]
 3244 007e 43F00102 		orr	r2, r3, #1
 3245 0082 7B68     		ldr	r3, [r7, #4]
 3246 0084 DA62     		str	r2, [r3, #44]
2270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
2271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           /* Process unlocked */
2272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           __HAL_UNLOCK(hadc);
 3247              		.loc 1 2272 11
 3248 0086 7B68     		ldr	r3, [r7, #4]
 3249 0088 0022     		movs	r2, #0
 3250 008a 83F82420 		strb	r2, [r3, #36]
2273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
2274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           return HAL_ERROR;
 3251              		.loc 1 2274 18
 3252 008e 0123     		movs	r3, #1
 3253 0090 07E0     		b	.L178
 3254              	.L176:
2258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 3255              		.loc 1 2258 11
 3256 0092 7B68     		ldr	r3, [r7, #4]
 3257 0094 1B68     		ldr	r3, [r3]
 3258 0096 9B68     		ldr	r3, [r3, #8]
 3259 0098 03F00103 		and	r3, r3, #1
2258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 3260              		.loc 1 2258 31
 3261 009c 012B     		cmp	r3, #1
 3262 009e D8D1     		bne	.L179
 3263              	.L173:
2275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         }
2276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
2277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
2278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 98


2279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****    
2280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return HAL status */
2281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return HAL_OK;
 3264              		.loc 1 2281 10
 3265 00a0 0023     		movs	r3, #0
 3266              	.L178:
2282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 3267              		.loc 1 2282 1
 3268 00a2 1846     		mov	r0, r3
 3269 00a4 1037     		adds	r7, r7, #16
 3270              	.LCFI124:
 3271              		.cfi_def_cfa_offset 8
 3272 00a6 BD46     		mov	sp, r7
 3273              	.LCFI125:
 3274              		.cfi_def_cfa_register 13
 3275              		@ sp needed
 3276 00a8 80BD     		pop	{r7, pc}
 3277              	.L181:
 3278 00aa 00BF     		.align	2
 3279              	.L180:
 3280 00ac 00000000 		.word	SystemCoreClock
 3281 00b0 83DE1B43 		.word	1125899907
 3282              		.cfi_endproc
 3283              	.LFE87:
 3285              		.section	.text.ADC_ConversionStop_Disable,"ax",%progbits
 3286              		.align	1
 3287              		.global	ADC_ConversionStop_Disable
 3288              		.syntax unified
 3289              		.thumb
 3290              		.thumb_func
 3292              	ADC_ConversionStop_Disable:
 3293              	.LFB88:
2283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
2284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
2285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Stop ADC conversion and disable the selected ADC
2286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC conversions must be
2287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         stopped to disable the ADC.
2288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
2289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval HAL status.
2290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
2291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef ADC_ConversionStop_Disable(ADC_HandleTypeDef* hadc)
2292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 3294              		.loc 1 2292 1
 3295              		.cfi_startproc
 3296              		@ args = 0, pretend = 0, frame = 16
 3297              		@ frame_needed = 1, uses_anonymous_args = 0
 3298 0000 80B5     		push	{r7, lr}
 3299              	.LCFI126:
 3300              		.cfi_def_cfa_offset 8
 3301              		.cfi_offset 7, -8
 3302              		.cfi_offset 14, -4
 3303 0002 84B0     		sub	sp, sp, #16
 3304              	.LCFI127:
 3305              		.cfi_def_cfa_offset 24
 3306 0004 00AF     		add	r7, sp, #0
 3307              	.LCFI128:
 3308              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 99


 3309 0006 7860     		str	r0, [r7, #4]
2293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   uint32_t tickstart = 0U;
 3310              		.loc 1 2293 12
 3311 0008 0023     		movs	r3, #0
 3312 000a FB60     		str	r3, [r7, #12]
2294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
2295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Verification if ADC is not already disabled */
2296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (ADC_IS_ENABLE(hadc) != RESET)
 3313              		.loc 1 2296 7
 3314 000c 7B68     		ldr	r3, [r7, #4]
 3315 000e 1B68     		ldr	r3, [r3]
 3316 0010 9B68     		ldr	r3, [r3, #8]
 3317 0012 03F00103 		and	r3, r3, #1
 3318              		.loc 1 2296 6
 3319 0016 012B     		cmp	r3, #1
 3320 0018 2ED1     		bne	.L183
2297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
2298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Disable the ADC peripheral */
2299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_ADC_DISABLE(hadc);
 3321              		.loc 1 2299 5
 3322 001a 7B68     		ldr	r3, [r7, #4]
 3323 001c 1B68     		ldr	r3, [r3]
 3324 001e 9A68     		ldr	r2, [r3, #8]
 3325 0020 7B68     		ldr	r3, [r7, #4]
 3326 0022 1B68     		ldr	r3, [r3]
 3327 0024 22F00102 		bic	r2, r2, #1
 3328 0028 9A60     		str	r2, [r3, #8]
2300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      
2301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Get tick count */
2302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     tickstart = HAL_GetTick();
 3329              		.loc 1 2302 17
 3330 002a FFF7FEFF 		bl	HAL_GetTick
 3331 002e F860     		str	r0, [r7, #12]
2303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
2304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Wait for ADC effectively disabled */
2305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     while(ADC_IS_ENABLE(hadc) != RESET)
 3332              		.loc 1 2305 10
 3333 0030 1BE0     		b	.L184
 3334              	.L187:
2306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
2307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if((HAL_GetTick() - tickstart) > ADC_DISABLE_TIMEOUT)
 3335              		.loc 1 2307 11
 3336 0032 FFF7FEFF 		bl	HAL_GetTick
 3337 0036 0246     		mov	r2, r0
 3338              		.loc 1 2307 25
 3339 0038 FB68     		ldr	r3, [r7, #12]
 3340 003a D31A     		subs	r3, r2, r3
 3341              		.loc 1 2307 9
 3342 003c 022B     		cmp	r3, #2
 3343 003e 14D9     		bls	.L184
2308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
2309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
2310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         if(ADC_IS_ENABLE(hadc) != RESET)
 3344              		.loc 1 2310 12
 3345 0040 7B68     		ldr	r3, [r7, #4]
 3346 0042 1B68     		ldr	r3, [r3]
 3347 0044 9B68     		ldr	r3, [r3, #8]
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 100


 3348 0046 03F00103 		and	r3, r3, #1
 3349              		.loc 1 2310 11
 3350 004a 012B     		cmp	r3, #1
 3351 004c 0DD1     		bne	.L184
2311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         {
2312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           /* Update ADC state machine to error */
2313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 3352              		.loc 1 2313 11
 3353 004e 7B68     		ldr	r3, [r7, #4]
 3354 0050 9B6A     		ldr	r3, [r3, #40]
 3355 0052 43F01002 		orr	r2, r3, #16
 3356 0056 7B68     		ldr	r3, [r7, #4]
 3357 0058 9A62     		str	r2, [r3, #40]
2314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
2315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           /* Set ADC error code to ADC IP internal error */
2316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 3358              		.loc 1 2316 11
 3359 005a 7B68     		ldr	r3, [r7, #4]
 3360 005c DB6A     		ldr	r3, [r3, #44]
 3361 005e 43F00102 		orr	r2, r3, #1
 3362 0062 7B68     		ldr	r3, [r7, #4]
 3363 0064 DA62     		str	r2, [r3, #44]
2317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
2318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           return HAL_ERROR;
 3364              		.loc 1 2318 18
 3365 0066 0123     		movs	r3, #1
 3366 0068 07E0     		b	.L186
 3367              	.L184:
2305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 3368              		.loc 1 2305 11
 3369 006a 7B68     		ldr	r3, [r7, #4]
 3370 006c 1B68     		ldr	r3, [r3]
 3371 006e 9B68     		ldr	r3, [r3, #8]
 3372 0070 03F00103 		and	r3, r3, #1
2305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 3373              		.loc 1 2305 31
 3374 0074 012B     		cmp	r3, #1
 3375 0076 DCD0     		beq	.L187
 3376              	.L183:
2319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         }
2320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
2321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
2322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
2323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
2324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return HAL status */
2325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return HAL_OK;
 3377              		.loc 1 2325 10
 3378 0078 0023     		movs	r3, #0
 3379              	.L186:
2326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 3380              		.loc 1 2326 1
 3381 007a 1846     		mov	r0, r3
 3382 007c 1037     		adds	r7, r7, #16
 3383              	.LCFI129:
 3384              		.cfi_def_cfa_offset 8
 3385 007e BD46     		mov	sp, r7
 3386              	.LCFI130:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 101


 3387              		.cfi_def_cfa_register 13
 3388              		@ sp needed
 3389 0080 80BD     		pop	{r7, pc}
 3390              		.cfi_endproc
 3391              	.LFE88:
 3393              		.section	.text.ADC_DMAConvCplt,"ax",%progbits
 3394              		.align	1
 3395              		.global	ADC_DMAConvCplt
 3396              		.syntax unified
 3397              		.thumb
 3398              		.thumb_func
 3400              	ADC_DMAConvCplt:
 3401              	.LFB89:
2327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
2328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
2329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  DMA transfer complete callback. 
2330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hdma: pointer to DMA handle.
2331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval None
2332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
2333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma)
2334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 3402              		.loc 1 2334 1
 3403              		.cfi_startproc
 3404              		@ args = 0, pretend = 0, frame = 16
 3405              		@ frame_needed = 1, uses_anonymous_args = 0
 3406 0000 80B5     		push	{r7, lr}
 3407              	.LCFI131:
 3408              		.cfi_def_cfa_offset 8
 3409              		.cfi_offset 7, -8
 3410              		.cfi_offset 14, -4
 3411 0002 84B0     		sub	sp, sp, #16
 3412              	.LCFI132:
 3413              		.cfi_def_cfa_offset 24
 3414 0004 00AF     		add	r7, sp, #0
 3415              	.LCFI133:
 3416              		.cfi_def_cfa_register 7
 3417 0006 7860     		str	r0, [r7, #4]
2335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
2336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3418              		.loc 1 2336 22
 3419 0008 7B68     		ldr	r3, [r7, #4]
 3420 000a 5B6A     		ldr	r3, [r3, #36]
 3421 000c FB60     		str	r3, [r7, #12]
2337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  
2338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Update state machine on conversion status if not in error state */
2339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA))
 3422              		.loc 1 2339 7
 3423 000e FB68     		ldr	r3, [r7, #12]
 3424 0010 9B6A     		ldr	r3, [r3, #40]
 3425 0012 03F05003 		and	r3, r3, #80
 3426              		.loc 1 2339 6
 3427 0016 002B     		cmp	r3, #0
 3428 0018 27D1     		bne	.L189
2340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
2341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Update ADC state machine */
2342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 3429              		.loc 1 2342 5
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 102


 3430 001a FB68     		ldr	r3, [r7, #12]
 3431 001c 9B6A     		ldr	r3, [r3, #40]
 3432 001e 43F40072 		orr	r2, r3, #512
 3433 0022 FB68     		ldr	r3, [r7, #12]
 3434 0024 9A62     		str	r2, [r3, #40]
2343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
2344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular     */
2345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going.        */
2346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Note: On STM32F1 devices, in case of sequencer enabled                 */
2347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*       (several ranks selected), end of conversion flag is raised       */
2348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*       at the end of the sequence.                                      */
2349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if(ADC_IS_SOFTWARE_START_REGULAR(hadc)        && 
 3435              		.loc 1 2349 8
 3436 0026 FB68     		ldr	r3, [r7, #12]
 3437 0028 1B68     		ldr	r3, [r3]
 3438 002a 9B68     		ldr	r3, [r3, #8]
 3439 002c 03F46023 		and	r3, r3, #917504
 3440              		.loc 1 2349 7
 3441 0030 B3F5602F 		cmp	r3, #917504
 3442 0034 15D1     		bne	.L190
2350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)   )
 3443              		.loc 1 2350 19 discriminator 1
 3444 0036 FB68     		ldr	r3, [r7, #12]
 3445 0038 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
2349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)   )
 3446              		.loc 1 2349 51 discriminator 1
 3447 003a 002B     		cmp	r3, #0
 3448 003c 11D1     		bne	.L190
2351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
2352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set ADC state */
2353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
 3449              		.loc 1 2353 7
 3450 003e FB68     		ldr	r3, [r7, #12]
 3451 0040 9B6A     		ldr	r3, [r3, #40]
 3452 0042 23F48072 		bic	r2, r3, #256
 3453 0046 FB68     		ldr	r3, [r7, #12]
 3454 0048 9A62     		str	r2, [r3, #40]
2354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
2355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 3455              		.loc 1 2355 11
 3456 004a FB68     		ldr	r3, [r7, #12]
 3457 004c 9B6A     		ldr	r3, [r3, #40]
 3458 004e 03F48053 		and	r3, r3, #4096
 3459              		.loc 1 2355 10
 3460 0052 002B     		cmp	r3, #0
 3461 0054 05D1     		bne	.L190
2356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
2357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 3462              		.loc 1 2357 9
 3463 0056 FB68     		ldr	r3, [r7, #12]
 3464 0058 9B6A     		ldr	r3, [r3, #40]
 3465 005a 43F00102 		orr	r2, r3, #1
 3466 005e FB68     		ldr	r3, [r7, #12]
 3467 0060 9A62     		str	r2, [r3, #40]
 3468              	.L190:
2358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
2359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 103


2360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
2361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Conversion complete callback */
2362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     hadc->ConvCpltCallback(hadc);
2364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** #else
2365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
 3469              		.loc 1 2365 5
 3470 0062 F868     		ldr	r0, [r7, #12]
 3471 0064 FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
2366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
2368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   else
2369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
2370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Call DMA error callback */
2371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     hadc->DMA_Handle->XferErrorCallback(hdma);
2372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
2373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 3472              		.loc 1 2373 1
 3473 0068 04E0     		b	.L192
 3474              	.L189:
2371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 3475              		.loc 1 2371 9
 3476 006a FB68     		ldr	r3, [r7, #12]
 3477 006c 1B6A     		ldr	r3, [r3, #32]
2371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 3478              		.loc 1 2371 21
 3479 006e 1B6B     		ldr	r3, [r3, #48]
2371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 3480              		.loc 1 2371 5
 3481 0070 7868     		ldr	r0, [r7, #4]
 3482 0072 9847     		blx	r3
 3483              	.LVL0:
 3484              	.L192:
 3485              		.loc 1 2373 1
 3486 0074 00BF     		nop
 3487 0076 1037     		adds	r7, r7, #16
 3488              	.LCFI134:
 3489              		.cfi_def_cfa_offset 8
 3490 0078 BD46     		mov	sp, r7
 3491              	.LCFI135:
 3492              		.cfi_def_cfa_register 13
 3493              		@ sp needed
 3494 007a 80BD     		pop	{r7, pc}
 3495              		.cfi_endproc
 3496              	.LFE89:
 3498              		.section	.text.ADC_DMAHalfConvCplt,"ax",%progbits
 3499              		.align	1
 3500              		.global	ADC_DMAHalfConvCplt
 3501              		.syntax unified
 3502              		.thumb
 3503              		.thumb_func
 3505              	ADC_DMAHalfConvCplt:
 3506              	.LFB90:
2374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
2375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
2376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  DMA half transfer complete callback. 
2377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hdma: pointer to DMA handle.
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 104


2378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval None
2379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
2380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma)   
2381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 3507              		.loc 1 2381 1
 3508              		.cfi_startproc
 3509              		@ args = 0, pretend = 0, frame = 16
 3510              		@ frame_needed = 1, uses_anonymous_args = 0
 3511 0000 80B5     		push	{r7, lr}
 3512              	.LCFI136:
 3513              		.cfi_def_cfa_offset 8
 3514              		.cfi_offset 7, -8
 3515              		.cfi_offset 14, -4
 3516 0002 84B0     		sub	sp, sp, #16
 3517              	.LCFI137:
 3518              		.cfi_def_cfa_offset 24
 3519 0004 00AF     		add	r7, sp, #0
 3520              	.LCFI138:
 3521              		.cfi_def_cfa_register 7
 3522 0006 7860     		str	r0, [r7, #4]
2382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
2383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3523              		.loc 1 2383 22
 3524 0008 7B68     		ldr	r3, [r7, #4]
 3525 000a 5B6A     		ldr	r3, [r3, #36]
 3526 000c FB60     		str	r3, [r7, #12]
2384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
2385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Half conversion callback */
2386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     hadc->ConvHalfCpltCallback(hadc);
2388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** #else
2389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_ADC_ConvHalfCpltCallback(hadc);
 3527              		.loc 1 2389 3
 3528 000e F868     		ldr	r0, [r7, #12]
 3529 0010 FFF7FEFF 		bl	HAL_ADC_ConvHalfCpltCallback
2390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 3530              		.loc 1 2391 1
 3531 0014 00BF     		nop
 3532 0016 1037     		adds	r7, r7, #16
 3533              	.LCFI139:
 3534              		.cfi_def_cfa_offset 8
 3535 0018 BD46     		mov	sp, r7
 3536              	.LCFI140:
 3537              		.cfi_def_cfa_register 13
 3538              		@ sp needed
 3539 001a 80BD     		pop	{r7, pc}
 3540              		.cfi_endproc
 3541              	.LFE90:
 3543              		.section	.text.ADC_DMAError,"ax",%progbits
 3544              		.align	1
 3545              		.global	ADC_DMAError
 3546              		.syntax unified
 3547              		.thumb
 3548              		.thumb_func
 3550              	ADC_DMAError:
 3551              	.LFB91:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 105


2392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
2393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
2394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  DMA error callback 
2395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hdma: pointer to DMA handle.
2396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval None
2397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
2398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** void ADC_DMAError(DMA_HandleTypeDef *hdma)   
2399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 3552              		.loc 1 2399 1
 3553              		.cfi_startproc
 3554              		@ args = 0, pretend = 0, frame = 16
 3555              		@ frame_needed = 1, uses_anonymous_args = 0
 3556 0000 80B5     		push	{r7, lr}
 3557              	.LCFI141:
 3558              		.cfi_def_cfa_offset 8
 3559              		.cfi_offset 7, -8
 3560              		.cfi_offset 14, -4
 3561 0002 84B0     		sub	sp, sp, #16
 3562              	.LCFI142:
 3563              		.cfi_def_cfa_offset 24
 3564 0004 00AF     		add	r7, sp, #0
 3565              	.LCFI143:
 3566              		.cfi_def_cfa_register 7
 3567 0006 7860     		str	r0, [r7, #4]
2400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
2401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3568              		.loc 1 2401 22
 3569 0008 7B68     		ldr	r3, [r7, #4]
 3570 000a 5B6A     		ldr	r3, [r3, #36]
 3571 000c FB60     		str	r3, [r7, #12]
2402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
2403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Set ADC state */
2404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
 3572              		.loc 1 2404 3
 3573 000e FB68     		ldr	r3, [r7, #12]
 3574 0010 9B6A     		ldr	r3, [r3, #40]
 3575 0012 43F04002 		orr	r2, r3, #64
 3576 0016 FB68     		ldr	r3, [r7, #12]
 3577 0018 9A62     		str	r2, [r3, #40]
2405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
2406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Set ADC error code to DMA error */
2407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_DMA);
 3578              		.loc 1 2407 3
 3579 001a FB68     		ldr	r3, [r7, #12]
 3580 001c DB6A     		ldr	r3, [r3, #44]
 3581 001e 43F00402 		orr	r2, r3, #4
 3582 0022 FB68     		ldr	r3, [r7, #12]
 3583 0024 DA62     		str	r2, [r3, #44]
2408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
2409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Error callback */
2410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   hadc->ErrorCallback(hadc);
2412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** #else
2413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_ADC_ErrorCallback(hadc);
 3584              		.loc 1 2413 3
 3585 0026 F868     		ldr	r0, [r7, #12]
 3586 0028 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 106


2414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 3587              		.loc 1 2415 1
 3588 002c 00BF     		nop
 3589 002e 1037     		adds	r7, r7, #16
 3590              	.LCFI144:
 3591              		.cfi_def_cfa_offset 8
 3592 0030 BD46     		mov	sp, r7
 3593              	.LCFI145:
 3594              		.cfi_def_cfa_register 13
 3595              		@ sp needed
 3596 0032 80BD     		pop	{r7, pc}
 3597              		.cfi_endproc
 3598              	.LFE91:
 3600              		.text
 3601              	.Letext0:
 3602              		.file 2 "d:\\msys64\\mingw64\\arm-none-eabi\\include\\machine\\_default_types.h"
 3603              		.file 3 "d:\\msys64\\mingw64\\arm-none-eabi\\include\\sys\\_stdint.h"
 3604              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 3605              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 3606              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 3607              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 3608              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 3609              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 3610              		.file 10 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 3611              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc_ex.h"
 3612              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 107


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_hal_adc.c
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:19     .text.HAL_ADC_Init:0000000000000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:25     .text.HAL_ADC_Init:0000000000000000 HAL_ADC_Init
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:572    .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:3292   .text.ADC_ConversionStop_Disable:0000000000000000 ADC_ConversionStop_Disable
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:328    .text.HAL_ADC_Init:00000000000001c8 $d
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:335    .text.HAL_ADC_DeInit:0000000000000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:341    .text.HAL_ADC_DeInit:0000000000000000 HAL_ADC_DeInit
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:614    .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:560    .text.HAL_ADC_DeInit:000000000000017c $d
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:566    .text.HAL_ADC_MspInit:0000000000000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:608    .text.HAL_ADC_MspDeInit:0000000000000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:650    .text.HAL_ADC_Start:0000000000000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:656    .text.HAL_ADC_Start:0000000000000000 HAL_ADC_Start
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:3152   .text.ADC_Enable:0000000000000000 ADC_Enable
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:872    .text.HAL_ADC_Start:0000000000000154 $d
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:878    .text.HAL_ADC_Stop:0000000000000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:884    .text.HAL_ADC_Stop:0000000000000000 HAL_ADC_Stop
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:957    .text.HAL_ADC_PollForConversion:0000000000000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:963    .text.HAL_ADC_PollForConversion:0000000000000000 HAL_ADC_PollForConversion
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:1294   .text.HAL_ADC_PollForConversion:00000000000001f4 $d
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:1304   .text.HAL_ADC_PollForEvent:0000000000000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:1310   .text.HAL_ADC_PollForEvent:0000000000000000 HAL_ADC_PollForEvent
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:1420   .text.HAL_ADC_Start_IT:0000000000000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:1426   .text.HAL_ADC_Start_IT:0000000000000000 HAL_ADC_Start_IT
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:1650   .text.HAL_ADC_Start_IT:0000000000000164 $d
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:1656   .text.HAL_ADC_Stop_IT:0000000000000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:1662   .text.HAL_ADC_Stop_IT:0000000000000000 HAL_ADC_Stop_IT
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:1743   .text.HAL_ADC_Start_DMA:0000000000000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:1749   .text.HAL_ADC_Start_DMA:0000000000000000 HAL_ADC_Start_DMA
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:2021   .text.HAL_ADC_Start_DMA:00000000000001a8 $d
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:3400   .text.ADC_DMAConvCplt:0000000000000000 ADC_DMAConvCplt
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:3505   .text.ADC_DMAHalfConvCplt:0000000000000000 ADC_DMAHalfConvCplt
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:3550   .text.ADC_DMAError:0000000000000000 ADC_DMAError
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:2030   .text.HAL_ADC_Stop_DMA:0000000000000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:2036   .text.HAL_ADC_Stop_DMA:0000000000000000 HAL_ADC_Stop_DMA
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:2145   .text.HAL_ADC_GetValue:0000000000000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:2151   .text.HAL_ADC_GetValue:0000000000000000 HAL_ADC_GetValue
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:2192   .text.HAL_ADC_IRQHandler:0000000000000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:2198   .text.HAL_ADC_IRQHandler:0000000000000000 HAL_ADC_IRQHandler
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:2446   .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:2530   .text.HAL_ADC_LevelOutOfWindowCallback:0000000000000000 HAL_ADC_LevelOutOfWindowCallback
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:2440   .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:2482   .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:2488   .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 HAL_ADC_ConvHalfCpltCallback
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:2524   .text.HAL_ADC_LevelOutOfWindowCallback:0000000000000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:2566   .text.HAL_ADC_ErrorCallback:0000000000000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:2572   .text.HAL_ADC_ErrorCallback:0000000000000000 HAL_ADC_ErrorCallback
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:2608   .text.HAL_ADC_ConfigChannel:0000000000000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:2614   .text.HAL_ADC_ConfigChannel:0000000000000000 HAL_ADC_ConfigChannel
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:2914   .text.HAL_ADC_ConfigChannel:00000000000001e4 $d
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:2921   .text.HAL_ADC_AnalogWDGConfig:0000000000000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:2927   .text.HAL_ADC_AnalogWDGConfig:0000000000000000 HAL_ADC_AnalogWDGConfig
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:3049   .text.HAL_ADC_AnalogWDGConfig:00000000000000a0 $d
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:3056   .text.HAL_ADC_GetState:0000000000000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:3062   .text.HAL_ADC_GetState:0000000000000000 HAL_ADC_GetState
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s 			page 108


C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:3101   .text.HAL_ADC_GetError:0000000000000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:3107   .text.HAL_ADC_GetError:0000000000000000 HAL_ADC_GetError
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:3146   .text.ADC_Enable:0000000000000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:3280   .text.ADC_Enable:00000000000000ac $d
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:3286   .text.ADC_ConversionStop_Disable:0000000000000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:3394   .text.ADC_DMAConvCplt:0000000000000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:3499   .text.ADC_DMAHalfConvCplt:0000000000000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccwk39F7.s:3544   .text.ADC_DMAError:0000000000000000 $t

UNDEFINED SYMBOLS
HAL_GetTick
HAL_RCCEx_GetPeriphCLKFreq
SystemCoreClock
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_ADCEx_InjectedConvCpltCallback
